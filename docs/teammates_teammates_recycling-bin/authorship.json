[
  {
    "path": "src/main/java/teammates/common/datatransfer/attributes/CourseAttributes.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.common.datatransfer.attributes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Assumption;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.FieldValidator;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.JsonUtils;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.SanitizationHelper;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.TimeHelper;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.storage.entity.Course;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " * The data transfer object for Course entities."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "public class CourseAttributes extends EntityAttributes\u003cCourse\u003e implements Comparable\u003cCourseAttributes\u003e {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    //Note: be careful when changing these variables as their names are used in *.json files."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public Instant createdAt;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public Instant deletedAt;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private String id;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private ZoneId timeZone;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    CourseAttributes(String courseId, String name, ZoneId timeZone) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        this.id \u003d SanitizationHelper.sanitizeTitle(courseId);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        this.name \u003d SanitizationHelper.sanitizeTitle(name);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        this.timeZone \u003d timeZone;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        this.createdAt \u003d Instant.now();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        this.deletedAt \u003d null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns new builder instance with default values for optional fields."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eFollowing default values are set to corresponding attributes:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cul\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cli\u003e{@code createdAt \u003d current date}\u003c/li\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003c/ul\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param courseId Id of the course."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param name Name of the course."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param timeZone Time zone of the course."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return a {@code Builder} object that can be used to construct a {@code CourseAttributes} object"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Builder builder(String courseId, String name, ZoneId timeZone) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Builder(courseId, name, timeZone);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getId() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        return id;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setName(String name) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    public ZoneId getTimeZone() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        return timeZone;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getCreatedAtDateString() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        return TimeHelper.formatDateForInstructorCoursesPage(createdAt, timeZone);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getCreatedAtDateStamp() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        return TimeHelper.formatDateTimeToIso8601Utc(createdAt);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getCreatedAtFullDateTimeString() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        LocalDateTime localDateTime \u003d TimeHelper.convertInstantToLocalDateTime(createdAt, timeZone);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        return TimeHelper.formatDateTimeForDisplay(localDateTime);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public String getDeletedAtDateString() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        if (this.deletedAt \u003d\u003d null) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            return Const.DELETION_DATE_NOT_APPLICABLE;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        return TimeHelper.formatDateForInstructorCoursesPage(deletedAt, timeZone);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public String getDeletedAtDateStamp() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        if (this.deletedAt \u003d\u003d null) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            return Const.DELETION_DATE_NOT_APPLICABLE;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        return TimeHelper.formatDateTimeToIso8601Utc(deletedAt);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public String getDeletedAtFullDateTimeString() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        if (this.deletedAt \u003d\u003d null) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            return Const.DELETION_DATE_NOT_APPLICABLE;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        LocalDateTime localDateTime \u003d TimeHelper.convertInstantToLocalDateTime(deletedAt, timeZone);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        return TimeHelper.formatDateTimeForDisplay(localDateTime);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public void setDeletedAt() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        this.deletedAt \u003d Instant.now();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public void setDeletedAt(Instant deletedAt) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        this.deletedAt \u003d deletedAt;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public void resetDeletedAt() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        this.deletedAt \u003d null;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public boolean isCourseDeleted() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        return this.deletedAt !\u003d null;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setTimeZone(ZoneId timeZone) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        this.timeZone \u003d timeZone;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cString\u003e getInvalidityInfo() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        FieldValidator validator \u003d new FieldValidator();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e errors \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        addNonEmptyError(validator.getInvalidityInfoForCourseId(getId()), errors);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        addNonEmptyError(validator.getInvalidityInfoForCourseName(getName()), errors);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        return errors;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    public Course toEntity() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        return new Course(getId(), getName(), getTimeZone().getId(), createdAt, null);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[\" + CourseAttributes.class.getSimpleName() + \"] id: \" + getId() + \" name: \" + getName()"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "               + \" timeZone: \" + getTimeZone();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getIdentificationString() {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        return getId();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getEntityTypeAsString() {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"Course\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getBackupIdentifier() {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        return Const.SystemParams.COURSE_BACKUP_LOG_MSG + getId();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getJsonString() {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        return JsonUtils.toJson(this, CourseAttributes.class);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sanitizeForSaving() {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        // no additional sanitization required"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    public int compareTo(CourseAttributes o) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        if (o \u003d\u003d null) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        return o.createdAt.compareTo(createdAt);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void sortById(List\u003cCourseAttributes\u003e courses) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        courses.sort(Comparator.comparing(CourseAttributes::getId));"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void sortByCreatedDate(List\u003cCourseAttributes\u003e courses) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        courses.sort(Comparator.comparing((CourseAttributes course) -\u003e course.createdAt).reversed()"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "                .thenComparing(course -\u003e course.getId()));"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class Builder {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        private static final String REQUIRED_FIELD_CANNOT_BE_NULL \u003d \"Non-null value expected\";"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        private final CourseAttributes courseAttributes;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        public Builder(String courseId, String name, ZoneId timeZone) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            validateRequiredFields(courseId, name, timeZone);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            courseAttributes \u003d new CourseAttributes(courseId, name, timeZone);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        public Builder withCreatedAt(Instant createdAt) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "            if (createdAt !\u003d null) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "                courseAttributes.createdAt \u003d createdAt;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        public Builder withDeletedAt(Instant deletedAt) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            courseAttributes.deletedAt \u003d deletedAt;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        public CourseAttributes build() {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "            return courseAttributes;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        private void validateRequiredFields(Object... objects) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "            for (Object object : objects) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "                Assumption.assertNotNull(REQUIRED_FIELD_CANNOT_BE_NULL, object);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalessr": 47,
      "-": 178
    }
  },
  {
    "path": "src/main/java/teammates/common/datatransfer/attributes/StudentAttributes.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.common.datatransfer.attributes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import com.google.common.base.Strings;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.StudentUpdateStatus;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Assumption;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Config;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.FieldValidator;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.JsonUtils;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.SanitizationHelper;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.StringHelper;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.storage.entity.CourseStudent;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public class StudentAttributes extends EntityAttributes\u003cCourseStudent\u003e {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    // Required fields"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public String email;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public String course;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public String name;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    // Optional values"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public String googleId;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public String lastName;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public String comments;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public String team;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public String section;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public String key;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public transient StudentUpdateStatus updateStatus;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creation and update time stamps."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updated automatically in Student.java, jdoPreStore()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    private transient Instant createdAt;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    private transient Instant updatedAt;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    StudentAttributes() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        googleId \u003d \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        section \u003d Const.DEFAULT_SECTION;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        updateStatus \u003d StudentUpdateStatus.UNKNOWN;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        createdAt \u003d Const.TIME_REPRESENTS_DEFAULT_TIMESTAMP;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        updatedAt \u003d Const.TIME_REPRESENTS_DEFAULT_TIMESTAMP;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public static StudentAttributes valueOf(CourseStudent student) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        return builder(student.getCourseId(), student.getName(), student.getEmail())"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                .withLastName(student.getLastName())"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                .withComments(student.getComments())"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                .withTeam(student.getTeamName())"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                .withSection(student.getSectionName())"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                .withGoogleId(student.getGoogleId())"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                .withKey(student.getRegistrationKey())"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                .withCreatedAt(student.getCreatedAt())"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                .withUpdatedAt(student.getUpdatedAt())"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     * Return new builder instance with default values for optional fields."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eFollowing default values are set to corresponding attributes:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cul\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cli\u003e{@code googleId \u003d \"\"}\u003c/li\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cli\u003e{@code section \u003d Const.DEFAULT_SECTION}\u003c/li\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cli\u003e{@code updateStatus \u003d StudentUpdateStatus.UNKNOWN}\u003c/li\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cli\u003e{@code createdAt \u003d Const.TIME_REPRESENTS_DEFAULT_TIMESTAMP_DATE}\u003c/li\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cli\u003e{@code updatedAt \u003d Const.TIME_REPRESENTS_DEFAULT_TIMESTAMP_DATE}\u003c/li\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003c/ul\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Builder builder(String courseId, String name, String email) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Builder(courseId, name, email);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentAttributes getCopy() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes studentAttributes \u003d valueOf(toEntity());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        studentAttributes.updateStatus \u003d updateStatus;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        studentAttributes.key \u003d key;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        studentAttributes.createdAt \u003d createdAt;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        studentAttributes.updatedAt \u003d updatedAt;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentAttributes;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toEnrollmentString() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        String enrollmentStringSeparator \u003d \"|\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.section + enrollmentStringSeparator"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "             + this.team + enrollmentStringSeparator"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "             + this.name + enrollmentStringSeparator"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "             + this.email + enrollmentStringSeparator"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "             + this.comments;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isRegistered() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        return googleId !\u003d null \u0026\u0026 !googleId.isEmpty();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getRegistrationUrl() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        return Config.getAppUrl(Const.ActionURIs.STUDENT_COURSE_JOIN_NEW)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                                           .withRegistrationKey(StringHelper.encrypt(key))"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                                           .withStudentEmail(email)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                                           .withCourseId(course)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                                           .toString();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getPublicProfilePictureUrl() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        return Config.getAppUrl(Const.ActionURIs.STUDENT_PROFILE_PICTURE)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                           .withStudentEmail(StringHelper.encrypt(email))"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                           .withCourseId(StringHelper.encrypt(course))"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                           .toString();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getEmail() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        return email;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public String getCourse() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        return course;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getKey() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        return key;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "     * Format: email%courseId e.g., adam@gmail.com%cs1101."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getId() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        return email + \"%\" + course;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getSection() {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        return section;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getTeam() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        return team;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getComments() {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        return comments;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isEnrollInfoSameAs(StudentAttributes otherStudent) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        return otherStudent !\u003d null \u0026\u0026 otherStudent.email.equals(this.email)"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "               \u0026\u0026 otherStudent.course.equals(this.course)"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "               \u0026\u0026 otherStudent.name.equals(this.name)"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "               \u0026\u0026 otherStudent.comments.equals(this.comments)"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "               \u0026\u0026 otherStudent.team.equals(this.team)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "               \u0026\u0026 otherStudent.section.equals(this.section);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cString\u003e getInvalidityInfo() {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        // id is allowed to be null when the student is not registered"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(team);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(comments);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        FieldValidator validator \u003d new FieldValidator();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e errors \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isRegistered()) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "            addNonEmptyError(validator.getInvalidityInfoForGoogleId(googleId), errors);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        addNonEmptyError(validator.getInvalidityInfoForCourseId(course), errors);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        addNonEmptyError(validator.getInvalidityInfoForEmail(email), errors);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        addNonEmptyError(validator.getInvalidityInfoForTeamName(team), errors);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        addNonEmptyError(validator.getInvalidityInfoForSectionName(section), errors);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        addNonEmptyError(validator.getInvalidityInfoForStudentRoleComments(comments), errors);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        addNonEmptyError(validator.getInvalidityInfoForPersonName(name), errors);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        return errors;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void sortBySectionName(List\u003cStudentAttributes\u003e students) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        students.sort(Comparator.comparing((StudentAttributes student) -\u003e student.section)"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "                .thenComparing(student -\u003e student.team)"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "                .thenComparing(student -\u003e student.name));"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void sortByTeamName(List\u003cStudentAttributes\u003e students) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        students.sort(Comparator.comparing((StudentAttributes student) -\u003e student.team)"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "                .thenComparing(student -\u003e student.name));"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void sortByNameAndThenByEmail(List\u003cStudentAttributes\u003e students) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        students.sort(Comparator.comparing((StudentAttributes student) -\u003e student.name)"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "                .thenComparing(student -\u003e student.email));"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updateWithExistingRecord(StudentAttributes originalStudent) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.email \u003d\u003d null) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "            this.email \u003d originalStudent.email;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.name \u003d\u003d null) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "            this.name \u003d originalStudent.name;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.googleId \u003d\u003d null) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "            this.googleId \u003d originalStudent.googleId;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.team \u003d\u003d null) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "            this.team \u003d originalStudent.team;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.comments \u003d\u003d null) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "            this.comments \u003d originalStudent.comments;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.section \u003d\u003d null) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "            this.section \u003d originalStudent.section;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "    public CourseStudent toEntity() {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "        return new CourseStudent(email, name, googleId, comments, course, team, section);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "        return toString(0);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString(int indent) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        String indentString \u003d StringHelper.getIndent(indent);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(indentString + \"Student:\" + name + \"[\" + email + \"]\" + System.lineSeparator());"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getIdentificationString() {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.course + \"/\" + this.email;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getEntityTypeAsString() {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"Student\";"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getBackupIdentifier() {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        return Const.SystemParams.COURSE_BACKUP_LOG_MSG + course;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getJsonString() {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        return JsonUtils.toJson(this, StudentAttributes.class);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sanitizeForSaving() {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "        googleId \u003d SanitizationHelper.sanitizeGoogleId(googleId);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "        name \u003d SanitizationHelper.sanitizeName(name);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "        comments \u003d SanitizationHelper.sanitizeTextField(comments);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getStudentStatus() {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isRegistered()) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "            return Const.STUDENT_COURSE_STATUS_JOINED;"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "        return Const.STUDENT_COURSE_STATUS_YET_TO_JOIN;"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "    public Instant getCreatedAt() {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "        return createdAt;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "    public Instant getUpdatedAt() {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "        return updatedAt;"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setCreatedAt(Instant createdAt) {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "        this.createdAt \u003d createdAt;"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUpdatedAt(Instant updatedAt) {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "        this.updatedAt \u003d updatedAt;"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if section value has changed from its original value."
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isSectionChanged(StudentAttributes originalStudentAttribute) {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.section !\u003d null \u0026\u0026 !this.section.equals(originalStudentAttribute.section);"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if team value has changed from its original value."
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isTeamChanged(StudentAttributes originalStudentAttribute) {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.team !\u003d null \u0026\u0026 !this.team.equals(originalStudentAttribute.team);"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if email value has changed from its original value."
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isEmailChanged(StudentAttributes originalStudentAttribute) {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.email !\u003d null \u0026\u0026 !this.email.equals(originalStudentAttribute.email);"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "     * A Builder class for {@link StudentAttributes}."
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class Builder {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "        private static final String REQUIRED_FIELD_CANNOT_BE_NULL \u003d \"Required field cannot be null\";"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "        private final StudentAttributes studentAttributes;"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "        public Builder(String courseId, String name, String email) {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "            studentAttributes \u003d new StudentAttributes();"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "            Assumption.assertNotNull(REQUIRED_FIELD_CANNOT_BE_NULL, courseId, name, email);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "            studentAttributes.course \u003d courseId;"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "            studentAttributes.name \u003d SanitizationHelper.sanitizeName(name);"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "            studentAttributes.email \u003d email;"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "            studentAttributes.lastName \u003d processLastName(null);"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "        public Builder withGoogleId(String googleId) {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "            if (googleId !\u003d null) {"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "                studentAttributes.googleId \u003d SanitizationHelper.sanitizeGoogleId(googleId);"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "        public Builder withLastName(String lastName) {"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "            studentAttributes.lastName \u003d processLastName(lastName);"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "        private String processLastName(String lastName) {"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "            if (lastName !\u003d null) {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "                return lastName;"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "            if (Strings.isNullOrEmpty(studentAttributes.name)) {"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "                return \"\";"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] nameParts \u003d StringHelper.splitName(studentAttributes.name);"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "            return nameParts.length \u003c 2 ? \"\" : SanitizationHelper.sanitizeName(nameParts[1]);"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "        public Builder withComments(String comments) {"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "            studentAttributes.comments \u003d SanitizationHelper.sanitizeTextField(comments);"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "        public Builder withTeam(String team) {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "            if (team !\u003d null) {"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "                studentAttributes.team \u003d team;"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "        public Builder withSection(String section) {"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "            studentAttributes.section \u003d section \u003d\u003d null ? Const.DEFAULT_SECTION : section;"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "        public Builder withKey(String key) {"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "            if (key !\u003d null) {"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "                studentAttributes.key \u003d key;"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "        public Builder withUpdateStatus(StudentUpdateStatus updateStatus) {"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "            studentAttributes.updateStatus \u003d updateStatus \u003d\u003d null"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "                    ? StudentUpdateStatus.UNKNOWN"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "                    : updateStatus;"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "        public Builder withCreatedAt(Instant createdAt) {"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "            Instant dateToAdd \u003d createdAt \u003d\u003d null"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "                    ? Const.TIME_REPRESENTS_DEFAULT_TIMESTAMP"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "                    : createdAt;"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "            studentAttributes.setCreatedAt(dateToAdd);"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "        public Builder withUpdatedAt(Instant updatedAt) {"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "            Instant dateToAdd \u003d updatedAt \u003d\u003d null"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "                    ? Const.TIME_REPRESENTS_DEFAULT_TIMESTAMP"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "                    : updatedAt;"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "            studentAttributes.setUpdatedAt(dateToAdd);"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "        public StudentAttributes build() {"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "            return studentAttributes;"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalessr": 4,
      "-": 415
    }
  },
  {
    "path": "src/main/java/teammates/common/util/Const.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.common.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.LinkedHashMap;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackParticipantType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * Stores constants that are widely used across classes."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * this class contains several nested classes, each containing a specific"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " * category of constants."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public final class Const {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * This section holds constants that are defined as constants primarily"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * because they are repeated in many places."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String HTML_BR_TAG \u003d \"\u003cbr\u003e\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String USER_NOBODY_TEXT \u003d \"-\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String USER_UNKNOWN_TEXT \u003d \"Unknown user\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String TEAM_OF_EMAIL_OWNER \u003d \"\u0027s Team\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String JOIN_LINK \u003d \"[Join Link]\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String NONE_OF_THE_ABOVE \u003d \"None of the above\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public static final String DELETION_DATE_NOT_APPLICABLE \u003d \"Not Applicable\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INSTRUCTOR_FEEDBACK_SESSION_VISIBLE_TIME_CUSTOM \u003d \"custom\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INSTRUCTOR_FEEDBACK_SESSION_VISIBLE_TIME_ATOPEN \u003d \"atopen\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INSTRUCTOR_FEEDBACK_RESULTS_VISIBLE_TIME_CUSTOM \u003d \"custom\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INSTRUCTOR_FEEDBACK_RESULTS_VISIBLE_TIME_ATVISIBLE \u003d \"atvisible\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INSTRUCTOR_FEEDBACK_RESULTS_VISIBLE_TIME_LATER \u003d \"later\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INSTRUCTOR_FEEDBACK_RESULTS_MISSING_RESPONSE \u003d \"No Response\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String STUDENT_COURSE_STATUS_YET_TO_JOIN \u003d \"Yet to join\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String STUDENT_COURSE_STATUS_JOINED \u003d \"Joined\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String STUDENT_PROFILE_FIELD_NOT_FILLED \u003d \"Not Specified\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String USER_NAME_FOR_SELF \u003d \"Myself\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String USER_TEAM_FOR_INSTRUCTOR \u003d \"Instructors\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String NO_SPECIFIC_RECIPIENT \u003d \"No specific recipient\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String NO_SPECIFIC_SECTION \u003d \"No specific section\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String DISPLAYED_NAME_FOR_SELF_IN_COMMENTS \u003d \"You\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String DISPLAYED_NAME_FOR_ANONYMOUS_PARTICIPANT \u003d \"Anonymous\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ACTION_RESULT_FAILURE \u003d \"Servlet Action Failure\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ACTION_RESULT_SYSTEM_ERROR_REPORT \u003d \"System Error Report\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int SIZE_LIMIT_PER_ENROLLMENT \u003d 150;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int INSTRUCTOR_VIEW_RESPONSE_LIMIT \u003d 8000;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    // for course sorting in instructorHomePage"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String SORT_BY_COURSE_ID \u003d \"id\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String SORT_BY_COURSE_NAME \u003d \"name\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String SORT_BY_COURSE_CREATION_DATE \u003d \"createdAt\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String DEFAULT_SORT_CRITERIA \u003d SORT_BY_COURSE_CREATION_DATE;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String DEFAULT_SECTION \u003d \"None\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final ZoneId DEFAULT_TIME_ZONE \u003d ZoneId.of(\"UTC\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     * These constants are used as variable values to mean that the variable"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     * is in a \u0027special\u0027 state."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int INT_UNINITIALIZED \u003d -9999;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final double DOUBLE_UNINITIALIZED \u003d -9999.0;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int MAX_POSSIBLE_RECIPIENTS \u003d -100;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int POINTS_EQUAL_SHARE \u003d 100;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int POINTS_NOT_SURE \u003d -101;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int POINTS_NOT_SUBMITTED \u003d -999;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int VISIBILITY_TABLE_GIVER \u003d 0;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int VISIBILITY_TABLE_RECIPIENT \u003d 1;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String GENERAL_QUESTION \u003d \"%GENERAL%\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String USER_IS_TEAM \u003d \"%TEAM%\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String USER_IS_NOBODY \u003d \"%NOBODY%\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String USER_IS_MISSING \u003d \"%MISSING%\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Instant TIME_REPRESENTS_FOLLOW_OPENING;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Instant TIME_REPRESENTS_FOLLOW_VISIBLE;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Instant TIME_REPRESENTS_NEVER;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Instant TIME_REPRESENTS_LATER;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Instant TIME_REPRESENTS_NOW;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Instant TIME_REPRESENTS_DEFAULT_TIMESTAMP;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ERROR_FEEDBACK_EMAIL_SUBJECT \u003d \"User-submitted Error Report\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        TIME_REPRESENTS_FOLLOW_OPENING \u003d TimeHelper.parseInstant(\"1970-12-31 12:00 AM +0000\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        TIME_REPRESENTS_FOLLOW_VISIBLE \u003d TimeHelper.parseInstant(\"1970-06-22 12:00 AM +0000\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        TIME_REPRESENTS_NEVER \u003d TimeHelper.parseInstant(\"1970-11-27 12:00 AM +0000\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        TIME_REPRESENTS_LATER \u003d TimeHelper.parseInstant(\"1970-01-01 12:00 AM +0000\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        TIME_REPRESENTS_NOW \u003d TimeHelper.parseInstant(\"1970-02-14 12:00 AM +0000\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        TIME_REPRESENTS_DEFAULT_TIMESTAMP \u003d TimeHelper.parseInstant(\"2011-01-01 12:00 AM +0000\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "     * Other Constants"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    private Const() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        // Utility class containing constants"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class SystemParams {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ENCODING \u003d \"UTF8\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final int NUMBER_OF_HOURS_BEFORE_CLOSING_ALERT \u003d 24;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        /** This is the limit after which TEAMMATES will send error message."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "         * Must be within the range of int */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final int MAX_PROFILE_PIC_SIZE \u003d 5000000;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        /** This is the limit given to Blobstore API, beyond which an ugly error page is shown. */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final long MAX_FILE_LIMIT_FOR_BLOBSTOREAPI \u003d 11000000;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        /** e.g. \"2014-04-01 11:59 PM UTC\" */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String DEFAULT_DATE_TIME_FORMAT \u003d \"yyyy-MM-dd h:mm a Z\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        /** Number to trim the Google ID when displaying to the user. */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final int USER_ID_MAX_DISPLAY_LENGTH \u003d 23;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Field sizes and error messages for invalid fields can be found"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "         * in the FieldValidator class."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final ZoneId ADMIN_TIME_ZONE \u003d ZoneId.of(\"Asia/Singapore\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String DEFAULT_PROFILE_PICTURE_PATH \u003d \"/images/profile_picture_default.png\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final List\u003cString\u003e PAGES_REQUIRING_ORIGIN_VALIDATION \u003d Collections.unmodifiableList("
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                Arrays.asList("
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.ADMIN_ACCOUNT_DELETE,"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.ADMIN_EMAIL_COMPOSE_SAVE,"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.ADMIN_EMAIL_COMPOSE_SEND,"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.ADMIN_EMAIL_CREATE_GROUP_RECEIVER_LIST_UPLOAD_URL,"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.ADMIN_EMAIL_CREATE_IMAGE_UPLOAD_URL,"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.ADMIN_EMAIL_GROUP_RECEIVER_LIST_UPLOAD,"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.ADMIN_EMAIL_IMAGE_UPLOAD,"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.ADMIN_EMAIL_MOVE_OUT_TRASH,"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.ADMIN_EMAIL_MOVE_TO_TRASH,"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.ADMIN_EMAIL_TRASH_DELETE,"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.ADMIN_INSTRUCTORACCOUNT_ADD,"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.ADMIN_STUDENT_GOOGLE_ID_RESET,"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.CREATE_IMAGE_UPLOAD_URL,"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.IMAGE_UPLOAD,"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_COURSE_ADD,"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_COURSE_ARCHIVE,"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_COURSE_DELETE,"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                        ActionURIs.INSTRUCTOR_COURSE_RECOVERY_COURSE_RESTORE,"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                        ActionURIs.INSTRUCTOR_COURSE_RECOVERY_COURSE_RESTORE_ALL,"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                        ActionURIs.INSTRUCTOR_COURSE_RECOVERY_COURSE_DELETE,"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                        ActionURIs.INSTRUCTOR_COURSE_RECOVERY_COURSE_DELETE_ALL,"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_COURSE_EDIT_SAVE,"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_COURSE_ENROLL_SAVE,"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_COURSE_INSTRUCTOR_ADD,"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_COURSE_INSTRUCTOR_DELETE,"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_COURSE_INSTRUCTOR_EDIT_SAVE,"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_COURSE_REMIND,"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_COURSE_STUDENT_DELETE,"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_COURSE_STUDENT_DELETE_ALL,"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_COURSE_STUDENT_DETAILS_EDIT_SAVE,"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_EDIT_INSTRUCTOR_FEEDBACK_SAVE,"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_EDIT_STUDENT_FEEDBACK_SAVE,"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_FEEDBACK_ADD,"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_FEEDBACK_COPY,"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_FEEDBACK_DELETE,"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_FEEDBACK_EDIT_COPY,"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_FEEDBACK_EDIT_SAVE,"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_FEEDBACK_PUBLISH,"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_FEEDBACK_QUESTION_ADD,"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_FEEDBACK_QUESTION_COPY,"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_FEEDBACK_QUESTION_EDIT,"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_FEEDBACK_REMIND,"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_FEEDBACK_REMIND_PARTICULAR_STUDENTS,"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_FEEDBACK_RESEND_PUBLISHED_EMAIL,"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_FEEDBACK_RESPONSE_COMMENT_ADD,"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_FEEDBACK_RESPONSE_COMMENT_DELETE,"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_FEEDBACK_RESPONSE_COMMENT_EDIT,"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_FEEDBACK_SUBMISSION_EDIT_SAVE,"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_FEEDBACK_UNPUBLISH,"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.STUDENT_FEEDBACK_SUBMISSION_EDIT_SAVE,"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.STUDENT_PROFILE_CREATEUPLOADFORMURL,"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.STUDENT_PROFILE_EDIT_SAVE,"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.STUDENT_PROFILE_PICTURE_EDIT,"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.STUDENT_PROFILE_PICTURE_UPLOAD));"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final List\u003cString\u003e PAGES_ACCESSIBLE_WITHOUT_GOOGLE_LOGIN \u003d Collections.unmodifiableList("
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "                Arrays.asList("
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.STUDENT_COURSE_JOIN,"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.STUDENT_COURSE_JOIN_NEW,"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.STUDENT_FEEDBACK_RESULTS_PAGE,"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.STUDENT_FEEDBACK_SUBMISSION_EDIT_PAGE,"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.STUDENT_FEEDBACK_SUBMISSION_EDIT_SAVE,"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.ERROR_FEEDBACK_SUBMIT));"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final List\u003cString\u003e PAGES_ACCESSIBLE_WITHOUT_REGISTRATION \u003d Collections.unmodifiableList("
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "                Arrays.asList("
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.STUDENT_COURSE_JOIN_AUTHENTICATED,"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.STUDENT_HOME_PAGE,"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_COURSE_JOIN,"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_COURSE_JOIN_AUTHENTICATED));"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final List\u003cString\u003e LEGACY_PAGES_WITH_REDUCED_SECURITY \u003d Collections.unmodifiableList("
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "                Arrays.asList(ActionURIs.STUDENT_COURSE_JOIN));"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_BACKUP_LOG_MSG \u003d \"Recently modified course::\";"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "    /* Text displayed to the user when the mouse hover over certain elements in"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "     * the UI."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class Tooltips {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_ENROLL \u003d \"Enroll student into the course\";"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_DETAILS \u003d \"View, edit and send invitation emails to the students in the course\";"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_EDIT \u003d \"Edit Course information and instructor list\";"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        public static final String COURSE_MOVE_TO_RECOVERY \u003d"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \"Delete the course and its corresponding students and sessions\";"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        public static final String COURSE_DELETE \u003d"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \"Permanently delete the course and its corresponding students and sessions\";"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        public static final String COURSE_DELETE_ALL \u003d"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \"Permanently delete all courses and their corresponding students and sessions\";"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        public static final String COURSE_RESTORE \u003d"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \"Restore the deleted course and its corresponding students and sessions\";"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        public static final String COURSE_RESTORE_ALL \u003d"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \"Restore all deleted courses and their corresponding students and sessions\";"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_ARCHIVE \u003d"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Archive the course so that it will not be shown in the home page any more \""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"(you can still access it from the \u0027Courses\u0027 tab)\";"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_ADD_FEEDBACKSESSION \u003d \"Add a feedback session for the course\";"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CLAIMED \u003d"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Claimed Contribution: This is the student\u0027s own estimation of his/her contributions\";"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String PERCEIVED \u003d"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Perceived Contribution: This is the average of what other team members think this student contributed\";"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_INFO_EDIT \u003d \"Edit course name\";"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_INSTRUCTOR_EDIT \u003d \"Edit instructor details\";"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_INSTRUCTOR_CANCEL_EDIT \u003d \"Cancel editing instructor details\";"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_INSTRUCTOR_CANCEL_ADD \u003d \"Cancel adding an instructor\";"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_INSTRUCTOR_DELETE \u003d \"Delete the instructor from the course\";"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_INSTRUCTOR_REMIND \u003d \"Send invitation email to the instructor\";"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_STUDENT_DETAILS \u003d \"View the details of the student\";"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_STUDENT_EDIT \u003d"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Use this to edit the details of this student. \u003cbr\u003eTo edit multiple students\""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" in one go, you can use the enroll page: \u003cbr\u003e\""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Simply enroll students using the updated data and existing data will be updated accordingly\";"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_STUDENT_REMIND \u003d"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Email an invitation to the student requesting him/her to join the course using his/her \""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Google Account. Note: Students can use TEAMMATES without ‘joining’, \""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"but a joined student can access extra features e.g. set up a user profile\";"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_STUDENT_DELETE \u003d"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Delete the student and the corresponding submissions from the course\";"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_STUDENT_RECORDS \u003d \"View all data about this student\";"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_REMIND \u003d"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Email an invitation to all students yet to join requesting them to join the course \""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"using their Google Accounts. Note: Students can use TEAMMATES without ‘joining’, \""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"but a joined student can access extra features e.g. set up a user profile\";"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String EVALUEE_DESCRIPTION \u003d \"The party being evaluated or given feedback to\";"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_DISPLAYED_TO_STUDENT \u003d"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "                \"If this is unselected, the instructor will be completely invisible to students.\""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" E.g. to give access to a colleague for ‘auditing’ your course\";"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_DISPLAYED_AS \u003d"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Specify the role of this instructor in this course as shown to the students\";"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_COURSE_DETAILS \u003d \"View and edit information regarding your team\";"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_FEEDBACK_SESSION_STATUS_AWAITING \u003d"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The session is not open for submission at this time. It is expected to open later.\";"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_FEEDBACK_SESSION_STATUS_PENDING \u003d"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The feedback session is yet to be completed by you.\";"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_FEEDBACK_SESSION_STATUS_SUBMITTED \u003d"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "                \"You have submitted your feedback for this session.\";"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_FEEDBACK_SESSION_STATUS_CLOSED \u003d"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "                \"\u003cbr\u003eThe session is now closed for submissions.\";"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_FEEDBACK_SESSION_STATUS_PUBLISHED \u003d"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The responses for the session have been published and can now be viewed.\";"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_FEEDBACK_SESSION_STATUS_NOT_PUBLISHED \u003d"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The responses for the session have not yet been published and cannot be viewed.\";"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_CONTRIBUTION_DIFF \u003d \"Perceived Contribution - Claimed Contribution\";"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_CONTRIBUTION_POINTS_RECEIVED \u003d"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The list of points that this student received from others\";"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_CONTRIBUTION_NOT_AVAILABLE \u003d"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Not Available: There is no data for this or the data is not enough\";"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_CONTRIBUTION_NOT_SURE \u003d \"Not sure about the contribution\";"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_COURSE \u003d"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Please select the course for which the feedback session is to be created.\";"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_INPUT_NAME \u003d"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Enter the name of the feedback session e.g. Feedback Session 1.\";"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_STARTDATE \u003d"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Please select the date and time for which users can start submitting responses for the feedback session.\";"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_ENDDATE \u003d"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Please select the date and time after which the feedback session \""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"will no longer accept submissions from users.\";"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_VISIBLEDATE \u003d"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Select this option to enter in a custom date and time for which \""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"the feedback session will become visible.\u003cbr\u003e\""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Note that you can make a session visible before it is open for submissions \""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"so that users can preview the questions.\";"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_PUBLISHDATE \u003d"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Select this option to enter in a custom date and time for which\u003c/br\u003e\""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"the responses for this feedback session will become visible.\";"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_SESSIONVISIBLELABEL \u003d"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Please select when you want the questions for the feedback session to be visible to \""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"users who need to participate. \""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Note that users cannot submit their responses until the submissions opening time set below.\";"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_SESSIONVISIBLEATOPEN \u003d"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Select this option to have the feedback session become visible \""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"when it is open for submissions (as selected above).\";"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_RESULTSVISIBLELABEL \u003d"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Please select when the responses for the feedback session will be visible to the designated recipients.\""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\u003cbr\u003eYou can select the response visibility for each type of user and question later.\";"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_RESULTSVISIBLECUSTOM \u003d"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Select this option to use a custom time for when the responses of the feedback session\u003cbr\u003e\""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"will be visible to the designated recipients.\";"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_RESULTSVISIBLEATVISIBLE \u003d"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Select this option to have the feedback responses be immediately visible\u003cbr\u003e\""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"when the session becomes visible to users.\";"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_RESULTSVISIBLELATER \u003d"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Select this option if you intend to manually publish the responses for this session later on.\";"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_SENDOPENEMAIL \u003d"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Select this option to automatically send an email to students to notify them \""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"when the session is open for submission.\";"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_SENDCLOSINGEMAIL \u003d"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Select this option to automatically send an email to students to remind them to submit \""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"24 hours before the end of the session.\";"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_SENDPUBLISHEDEMAIL \u003d"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Select this option to automatically send an email to students to notify them \""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"when the session results is published.\";"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_INSTRUCTIONS \u003d"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Enter instructions for this feedback session. e.g. Avoid comments which are too critical.\u003cbr\u003e \""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"It will be displayed at the top of the page when users respond to the session.\";"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_STATUS_VISIBLE \u003d \", is visible\";"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_STATUS_AWAITING \u003d \", and is waiting to open\";"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_STATUS_OPEN \u003d \", and is open for submissions\";"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_STATUS_CLOSED \u003d \", and has ended\";"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_STATUS_PUBLISHED \u003d \"The responses for this session are visible.\";"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_STATUS_NOT_PUBLISHED \u003d \"The responses for this session are not visible.\";"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_INPUT_TIMEZONE \u003d"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "                \"To change this, edit the course settings. \u003cbr\u003e\u003cbr\u003e\""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"TEAMMATES automatically adjusts to match the current time offset in your area, \""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"including clock changes due to daylight saving time.\";"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_INPUT_GRACEPERIOD \u003d"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Please select the amount of time that the system will continue accepting \u003cbr\u003e\""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"submissions after the specified deadline.\";"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_RESPONSE_RATE \u003d \"Number of students submitted / Class size\";"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_RESULTS \u003d \"View the submitted responses for this feedback session\";"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_EDIT \u003d \"Edit feedback session details\";"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_COPY \u003d \"Copy feedback session details\";"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_REMIND \u003d"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Send e-mails to remind students and instructors who have not submitted their feedbacks to do so\";"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_DELETE \u003d \"Delete the feedback session\";"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_SUBMIT \u003d \"Start submitting feedback\";"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_PUBLISH \u003d \"Make session responses available for viewing\";"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_UNPUBLISH \u003d \"Make responses no longer visible\";"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_AWAITING \u003d \"This session is not yet opened\";"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_EDIT_SUBMITTED_RESPONSE \u003d \"Edit submitted feedback\";"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_VIEW_SUBMITTED_RESPONSE \u003d \"View submitted feedback\";"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_RECIPIENT \u003d \"Who the feedback is about\";"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_GIVER \u003d \"Who will give feedback\";"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_EDIT_SAVE \u003d"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "                \"You can save your responses at any time and come back later to continue.\";"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_MODERATE_FEEDBACK \u003d \"Edit the responses given by this student\";"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_PREVIEW_ASSTUDENT \u003d"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "                \"View how this session would look like to a student who is submitting feedback.\u003cbr\u003e\""
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Preview is unavailable if the course has yet to have any student enrolled.\";"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_PREVIEW_ASINSTRUCTOR \u003d"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "                \"View how this session would look like to an instructor who is submitting feedback.\u003cbr\u003e\""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Only instructors with submit privileges are included in the list.\";"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_INPUT_INSTRUCTIONS \u003d"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Please enter the question for users to give feedback about. \""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"e.g. What is the biggest weakness of the presented product?\";"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_DUPLICATE \u003d"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Make a copy of the existing question and add to the current feedback session.\";"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_EDIT \u003d"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Edit the existing question. Do remember to save the changes before moving on to editing another question.\";"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_DISCARDCHANGES \u003d"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Discard any unsaved edits and revert back to original question.\";"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CANCEL_NEW \u003d"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Cancel adding new question. No new question will be added to the feedback session.\";"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_INPUT_DESCRIPTION \u003d"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Please enter the description of the question.\";"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMPOINTS_OPTION \u003d"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Respondents will have to distribute the total points specified here among the options, \""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"e.g. if you specify 100 points here and there are 3 options, \""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"respondents will have to distribute 100 points among 3 options.\";"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMPOINTS_RECIPIENT \u003d"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Respondents will have to distribute the total points specified here among the recipients, \""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"e.g. if you specify 100 points here and there are 3 recipients, \""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"respondents will have to distribute 100 points among 3 recipients.\";"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMPOINTSFOREACHOPTION \u003d"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The number of points to distribute will vary based on the number of options, \""
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"e.g. if you specify 100 points here and there are 3 options, \""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"the total number of points to distribute among 3 options will be 300 (i.e. 100 x 3).\";"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMPOINTSFOREACHRECIPIENT \u003d"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The number of points to distribute will vary based on the number of recipients, \""
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"e.g. if you specify 100 points here and there are 3 recipients, \""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"the total number of points to distribute among 3 recipients will be 300 (i.e. 100 x 3).\";"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_NUMSCALE_MAX \u003d \"Maximum acceptable response value\";"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_NUMSCALE_STEP \u003d \"Value to be increased/decreased each step\";"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_NUMSCALE_MIN \u003d \"Minimum acceptable response value\";"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQ_ASSIGN_WEIGHTS \u003d"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Assign weights to the choices for calculating statistics.\";"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RUBRIC_ASSIGN_WEIGHTS \u003d"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Assign weights to the columns for calculating statistics.\";"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MCQ_ASSIGN_WEIGHTS \u003d"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Assign weights to the choices for calculating statistics.\";"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_PICTURE \u003d \"Upload a profile picture\";"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_SHORTNAME \u003d \"This is the name you prefer to be called by\";"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_EMAIL \u003d \"This is a long term contact email\";"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_INSTITUTION \u003d \"This is the institution that you represent\";"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_NATIONALITY \u003d \"This is your nationality\";"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_MOREINFO \u003d \"You may specify miscellaneous info about yourself \""
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"e.g. links to home page, online CV, portfolio etc.\";"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String VISIBILITY_OPTIONS_RECIPIENT \u003d \"Control what feedback recipient(s) can view\";"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String VISIBILITY_OPTIONS_GIVER_TEAM_MEMBERS \u003d"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Control what team members of feedback giver can view\";"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String VISIBILITY_OPTIONS_RECIPIENT_TEAM_MEMBERS \u003d"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Control what team members of feedback recipients can view\";"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String VISIBILITY_OPTIONS_OTHER_STUDENTS \u003d \"Control what other students can view\";"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String VISIBILITY_OPTIONS_INSTRUCTORS \u003d \"Control what instructors can view\";"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COMMENT_ADD \u003d \"Add comment\";"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COMMENT_EDIT \u003d \"Edit this comment\";"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COMMENT_DELETE \u003d \"Delete this comment\";"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SEARCH_STUDENT \u003d \"Search for student\u0027s information, e.g. name, email\";"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ACTION_NOT_ALLOWED \u003d \"You do not have the permissions to access this feature\";"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class FeedbackQuestion {"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final Map\u003cString, String\u003e COMMON_VISIBILITY_OPTIONS;"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "        static {"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "            Map\u003cString, String\u003e visibilityOptionInit \u003d new LinkedHashMap\u003c\u003e();"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "            visibilityOptionInit.put(\"ANONYMOUS_TO_RECIPIENT_AND_INSTRUCTORS\","
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "                                     \"Shown anonymously to recipient and instructors\");"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "            visibilityOptionInit.put(\"ANONYMOUS_TO_RECIPIENT_VISIBLE_TO_INSTRUCTORS\","
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "                                     \"Shown anonymously to recipient, visible to instructors\");"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "            visibilityOptionInit.put(\"ANONYMOUS_TO_RECIPIENT_AND_TEAM_VISIBLE_TO_INSTRUCTORS\","
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "                                     \"Shown anonymously to recipient and team members, visible to instructors\");"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "            visibilityOptionInit.put(\"VISIBLE_TO_INSTRUCTORS_ONLY\", \"Visible to instructors only\");"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "            visibilityOptionInit.put(\"VISIBLE_TO_RECIPIENT_AND_INSTRUCTORS\", \"Visible to recipient and instructors\");"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "            COMMON_VISIBILITY_OPTIONS \u003d Collections.unmodifiableMap(visibilityOptionInit);"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final Map\u003cFeedbackParticipantType, List\u003cFeedbackParticipantType\u003e\u003e"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "                COMMON_FEEDBACK_PATHS;"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "        static {"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "            Map\u003cFeedbackParticipantType, List\u003cFeedbackParticipantType\u003e\u003e initializer \u003d new LinkedHashMap\u003c\u003e();"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "            initializer.put(FeedbackParticipantType.SELF,"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "                    new ArrayList\u003c\u003e("
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "                            Arrays.asList(FeedbackParticipantType.NONE,"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "                                    FeedbackParticipantType.SELF,"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "                                    FeedbackParticipantType.INSTRUCTORS)));"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "            initializer.put(FeedbackParticipantType.STUDENTS,"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "                    new ArrayList\u003c\u003e("
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "                            Arrays.asList(FeedbackParticipantType.NONE,"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "                                    FeedbackParticipantType.SELF,"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "                                    FeedbackParticipantType.INSTRUCTORS,"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "                                    FeedbackParticipantType.OWN_TEAM_MEMBERS,"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "                                    FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF)));"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "            initializer.put(FeedbackParticipantType.INSTRUCTORS,"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "                    new ArrayList\u003c\u003e("
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "                            Arrays.asList(FeedbackParticipantType.NONE,"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "                                    FeedbackParticipantType.SELF,"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "                                    FeedbackParticipantType.INSTRUCTORS)));"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "            COMMON_FEEDBACK_PATHS \u003d Collections.unmodifiableMap(initializer);"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "        // Mcq"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final int MCQ_MIN_NUM_OF_CHOICES \u003d 2;"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MCQ_ERROR_NOT_ENOUGH_CHOICES \u003d"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Too little choices for \" + Const.FeedbackQuestionTypeNames.MCQ + \". Minimum number of options is: \";"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MCQ_ERROR_INVALID_OPTION \u003d"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "                \" is not a valid option for the \" + Const.FeedbackQuestionTypeNames.MCQ + \".\";"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MCQ_ERROR_INVALID_WEIGHT \u003d"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The weights for the choices of a \" + Const.FeedbackQuestionTypeNames.MCQ"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" must be valid non-negative numbers with precision up to 2 decimal places.\";"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "        // Msq"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final int MSQ_MIN_NUM_OF_CHOICES \u003d 2;"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ_ERROR_NOT_ENOUGH_CHOICES \u003d"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Too little choices for \" + Const.FeedbackQuestionTypeNames.MSQ + \". Minimum number of options is: \";"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ_ERROR_INVALID_OPTION \u003d"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "                \" is not a valid option for the \" + Const.FeedbackQuestionTypeNames.MSQ + \".\";"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ_ERROR_MAX_SELECTABLE_EXCEEDED_TOTAL \u003d"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Maximum selectable choices exceeds the total number of options for \" + Const.FeedbackQuestionTypeNames.MSQ;"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ_ERROR_MIN_SELECTABLE_EXCEEDED_MAX_SELECTABLE \u003d"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Minimum selectable choices exceeds maximum selectable choices for \""
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "                + Const.FeedbackQuestionTypeNames.MSQ;"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ_ERROR_MIN_FOR_MAX_SELECTABLE_CHOICES \u003d"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Maximum selectable choices for \" + Const.FeedbackQuestionTypeNames.MSQ + \" must be at least 2.\";"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ_ERROR_MIN_FOR_MIN_SELECTABLE_CHOICES \u003d"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Minimum selectable choices for \" + Const.FeedbackQuestionTypeNames.MSQ + \" must be at least 1.\";"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ_ERROR_INVALID_WEIGHT \u003d"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The weights for the choices of a \" + Const.FeedbackQuestionTypeNames.MSQ"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" must be valid numbers with precision up to 2 decimal places.\";"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "        // Numscale"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String NUMSCALE_ERROR_MIN_MAX \u003d"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Minimum value must be \u003c maximum value for \" + Const.FeedbackQuestionTypeNames.NUMSCALE + \".\";"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String NUMSCALE_ERROR_STEP \u003d"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Step value must be \u003e 0 for \" + Const.FeedbackQuestionTypeNames.NUMSCALE + \".\";"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String NUMSCALE_ERROR_OUT_OF_RANGE \u003d"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "                \" is out of the range for \" + Const.FeedbackQuestionTypeNames.NUMSCALE + \".\";"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "        // Contribution"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONTRIB_ERROR_INVALID_OPTION \u003d"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Invalid option for the \" + Const.FeedbackQuestionTypeNames.CONTRIB + \".\";"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONTRIB_ERROR_INVALID_FEEDBACK_PATH \u003d"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.FeedbackQuestionTypeNames.CONTRIB + \" must have \""
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "                + FeedbackParticipantType.STUDENTS.toDisplayGiverName()"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" and \" + FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF.toDisplayRecipientName()"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" as the feedback giver and recipient respectively.\""
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" These values will be used instead.\";"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONTRIB_ERROR_INVALID_VISIBILITY_OPTIONS \u003d"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.FeedbackQuestionTypeNames.CONTRIB + \" must use one of the common visibility options. The \\\"\""
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "                + Const.FeedbackQuestion.COMMON_VISIBILITY_OPTIONS"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "                                        .get(\"ANONYMOUS_TO_RECIPIENT_AND_TEAM_VISIBLE_TO_INSTRUCTORS\")"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\\\" option will be used instead.\";"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "        // Constant sum"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final int CONST_SUM_MIN_NUM_OF_OPTIONS \u003d 2;"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final int CONST_SUM_MIN_NUM_OF_POINTS \u003d 1;"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONST_SUM_ERROR_NOT_ENOUGH_OPTIONS \u003d"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Too little options for \" + Const.FeedbackQuestionTypeNames.CONSTSUM_OPTION"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "                + \". Minimum number of options is: \";"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONST_SUM_ERROR_DUPLICATE_OPTIONS \u003d \"Duplicate options are not allowed.\";"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONST_SUM_ERROR_NOT_ENOUGH_POINTS \u003d"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Too little points for \" + Const.FeedbackQuestionTypeNames.CONSTSUM_RECIPIENT"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "                + \". Minimum number of points is: \";"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONST_SUM_ERROR_MISMATCH \u003d"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Please distribute all the points for distribution questions. \""
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"To skip a distribution question, leave the boxes blank.\";"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONST_SUM_ERROR_NEGATIVE \u003d \"Points given must be 0 or more.\";"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONST_SUM_ERROR_UNIQUE \u003d \"Every option must be given a different number of points.\";"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONST_SUM_ERROR_SOME_UNIQUE \u003d"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "                \"At least some options must be given a different number of points.\";"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "        // Rubric"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final int RUBRIC_MIN_NUM_OF_CHOICES \u003d 2;"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RUBRIC_ERROR_NOT_ENOUGH_CHOICES \u003d"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Too little choices for \" + Const.FeedbackQuestionTypeNames.RUBRIC + \". Minimum number of options is: \";"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final int RUBRIC_MIN_NUM_OF_SUB_QUESTIONS \u003d 1;"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RUBRIC_ERROR_NOT_ENOUGH_SUB_QUESTIONS \u003d"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Too little sub-questions for \" + Const.FeedbackQuestionTypeNames.RUBRIC + \". \""
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Minimum number of sub-questions is: \";"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RUBRIC_ERROR_DESC_INVALID_SIZE \u003d"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Invalid number of descriptions for \" + Const.FeedbackQuestionTypeNames.RUBRIC;"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RUBRIC_ERROR_EMPTY_SUB_QUESTION \u003d"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Sub-questions for \" + Const.FeedbackQuestionTypeNames.RUBRIC + \" cannot be empty.\";"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RUBRIC_ERROR_INVALID_WEIGHT \u003d"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The weights for the choices of a \""
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "                + Const.FeedbackQuestionTypeNames.RUBRIC"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" must be valid numbers with precision up to 2 decimal places.\";"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class FeedbackQuestionTypeNames {"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String TEXT \u003d \"Essay question\";"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MCQ \u003d \"Multiple-choice (single answer) question\";"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ \u003d \"Multiple-choice (multiple answers) question\";"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String NUMSCALE \u003d \"Numerical-scale question\";"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONSTSUM_OPTION \u003d \"Distribute points (among options) question\";"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONSTSUM_RECIPIENT \u003d \"Distribute points (among recipients) question\";"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RANK_OPTION \u003d \"Rank (options) question\";"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RANK_RECIPIENT \u003d \"Rank (recipients) question\";"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONTRIB \u003d \"Team contribution question\";"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RUBRIC \u003d \"Rubric question\";"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class FeedbackSessionResults {"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String QUESTION_SORT_TYPE \u003d \"question\";"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String GRQ_SORT_TYPE \u003d \"giver-recipient-question\";"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RGQ_SORT_TYPE \u003d \"recipient-giver-question\";"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String GQR_SORT_TYPE \u003d \"giver-question-recipient\";"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RQG_SORT_TYPE \u003d \"recipient-question-giver\";"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class InstructorPermissionRoleNames {"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_ROLE_COOWNER \u003d \"Co-owner\";"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_ROLE_MANAGER \u003d \"Manager\";"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_ROLE_OBSERVER \u003d \"Observer\";"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_ROLE_TUTOR \u003d \"Tutor\";"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_ROLE_CUSTOM \u003d \"Custom\";"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class GenderTypes {"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MALE \u003d \"male\";"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEMALE \u003d \"female\";"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String OTHER \u003d \"other\";"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class ParamsNames {"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String IS_USING_AJAX \u003d \"isusingAjax\";"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String IS_STUDENT_REJOINING \u003d \"isstudentrejoining\";"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String BLOB_KEY \u003d \"blob-key\";"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SESSION_TOKEN \u003d \"token\";"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COPIED_FEEDBACK_SESSION_NAME \u003d \"copiedfsname\";"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COPIED_COURSE_ID \u003d \"copiedcourseid\";"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COPIED_COURSES_ID \u003d \"copiedcoursesid\";"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CSV_TO_HTML_TABLE_NEEDED \u003d \"csvtohtmltable\";"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_ID \u003d \"courseid\";"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_NAME \u003d \"coursename\";"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_INDEX \u003d \"courseidx\";"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_TIME_ZONE \u003d \"coursetimezone\";"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_EDIT_MAIN_INDEX \u003d \"courseeditmainindex\";"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_ID \u003d \"instructorid\";"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_EMAIL \u003d \"instructoremail\";"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_INSTITUTION \u003d \"instructorinstitution\";"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_NAME \u003d \"instructorname\";"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENTS_ENROLLMENT_INFO \u003d \"enrollstudents\";"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_IS_DISPLAYED_TO_STUDENT \u003d \"instructorisdisplayed\";"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_DISPLAY_NAME \u003d \"instructordisplayname\";"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_ROLE_NAME \u003d \"instructorrole\";"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_SECTION \u003d \"section\";"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_SECTION_GROUP \u003d \"sectiongroup\";"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_MODIFY_COURSE \u003d \"canmodifycourse\";"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_MODIFY_INSTRUCTOR \u003d \"canmodifyinstructor\";"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_MODIFY_SESSION \u003d \"canmodifysession\";"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_MODIFY_STUDENT \u003d \"canmodifystudent\";"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_VIEW_STUDENT_IN_SECTIONS \u003d \"canviewstudentinsection\";"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_VIEW_SESSION_IN_SECTIONS \u003d \"canviewsessioninsection\";"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_SUBMIT_SESSION_IN_SECTIONS \u003d \"cansubmitsessioninsection\";"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_MODIFY_SESSION_COMMENT_IN_SECTIONS \u003d"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": "                \"canmodifysessioncommentinsection\";"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_REMIND_STUDENT_IS_FROM \u003d \"pagenameremindstudentisfrom\";"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_SORTING_CRITERIA \u003d \"sortby\";"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_TO_LOAD \u003d \"coursetoload\";"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_ARCHIVE_STATUS \u003d \"archive\";"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String IMAGE_TO_UPLOAD \u003d \"imagetoupload\";"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_SEARCH_KEY \u003d \"searchkey\";"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_SEARCH_BUTTON_HIT \u003d \"searchbuttonhit\";"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_EMAIL_CONTENT \u003d \"emailcontent\";"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_EMAIL_SUBJECT \u003d \"emailsubject\";"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_EMAIL_RECEIVER \u003d \"emailreceiver\";"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_EMAIL_ADDRESS_RECEIVERS \u003d \"adminemailaddressreceivers\";"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_EMAIL_GROUP_RECEIVER_LIST_FILE_KEY \u003d \"adminemailgroupreceiverlistfilekey\";"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_EMAIL_IMAGE_TO_UPLOAD \u003d \"emailimagetoupload\";"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_EMAIL_GROUP_RECEIVER_LIST_TO_UPLOAD \u003d \"emailgroupreceiverlisttoupload\";"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_EMAIL_ID \u003d \"emailid\";"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_EMAIL_EMPTY_TRASH_BIN \u003d \"emptytrashbin\";"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_EMAIL_TRASH_ACTION_REDIRECT \u003d \"redirect\";"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_GROUP_RECEIVER_EMAIL_LIST_INDEX \u003d \"emaillistindex\";"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_GROUP_RECEIVER_EMAIL_INDEX \u003d \"emailindex\";"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_NAME \u003d \"fsname\";"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_INDEX \u003d \"fsindex\";"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_STARTDATE \u003d \"startdate\";"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_STARTTIME \u003d \"starttime\";"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_STARTHOUR \u003d \"starthour\";"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_STARTMINUTE \u003d \"startminute\";"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_ENDDATE \u003d \"enddate\";"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_ENDTIME \u003d \"endtime\";"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_ENDHOUR \u003d \"endhour\";"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_ENDMINUTE \u003d \"endminute\";"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_VISIBLEDATE \u003d \"visibledate\";"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_VISIBLETIME \u003d \"visibletime\";"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_PUBLISHDATE \u003d \"publishdate\";"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_PUBLISHTIME \u003d \"publishtime\";"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_TIMEZONE \u003d \"timezone\";"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_GRACEPERIOD \u003d \"graceperiod\";"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SESSION_TEMPLATE_TYPE \u003d \"sessionTemplateType\";"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_SESSIONVISIBLEBUTTON \u003d \"sessionVisibleFromButton\";"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_RESULTSVISIBLEBUTTON \u003d \"resultsVisibleFromButton\";"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_SENDREMINDEREMAIL \u003d \"sendreminderemail\";"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_INSTRUCTIONS \u003d \"instructions\";"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_MODERATED_PERSON \u003d \"moderatedperson\";"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_MODERATED_QUESTION_ID \u003d \"moderatedquestionid\";"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_ENABLE_EDIT \u003d \"editsessiondetails\";"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_ID \u003d \"questionid\";"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_NUMBER \u003d \"questionnum\";"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_NUMBER_STATIC \u003d \"questionnum-static\";"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_TEXT \u003d \"questiontext\";"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_TEXT_RECOMMENDEDLENGTH \u003d \"recommendedlength\";"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_DESCRIPTION \u003d \"questiondescription\";"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_TYPE \u003d \"questiontype\";"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_NUMBEROFCHOICECREATED \u003d \"noofchoicecreated\";"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MCQCHOICE \u003d \"mcqOption\";"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MCQOTHEROPTION \u003d \"mcqOtherOption\";"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MCQOTHEROPTIONFLAG \u003d \"mcqOtherOptionFlag\";"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MCQ_ISOTHEROPTIONANSWER \u003d \"mcqIsOtherOptionAnswer\";"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MCQ_HAS_WEIGHTS_ASSIGNED \u003d \"mcqHasAssignedWeights\";"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MCQ_WEIGHT \u003d \"mcqWeight\";"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MCQ_OTHER_WEIGHT \u003d \"mcqOtherWeight\";"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQCHOICE \u003d \"msqOption\";"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQOTHEROPTION \u003d \"msqOtherOption\";"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQOTHEROPTIONFLAG \u003d \"msqOtherOptionFlag\";"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQ_ISOTHEROPTIONANSWER \u003d \"msqIsOtherOptionAnswer\";"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQ_MAX_SELECTABLE_CHOICES \u003d \"msqMaxSelectableChoices\";"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQ_MIN_SELECTABLE_CHOICES \u003d \"msqMinSelectableChoices\";"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQ_ENABLE_MAX_SELECTABLE_CHOICES \u003d \"msqEnableMaxSelectableChoices\";"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQ_ENABLE_MIN_SELECTABLE_CHOICES \u003d \"msqEnableMinSelectableChoices\";"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQ_HAS_WEIGHTS_ASSIGNED \u003d \"msqHasAssignedWeights\";"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQ_WEIGHT \u003d \"msqWeight\";"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQ_OTHER_WEIGHT \u003d \"msqOtherWeight\";"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMOPTION \u003d \"constSumOption\";"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMTORECIPIENTS \u003d \"constSumToRecipients\";"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMNUMOPTION \u003d \"constSumNumOption\";"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": "        // TODO: rename FEEDBACK_QUESTION_CONSTSUMPOINTSPEROPTION to a more accurate name"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMPOINTSPEROPTION \u003d \"constSumPointsPerOption\";"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMPOINTS \u003d \"constSumPoints\";"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMPOINTSFOREACHOPTION \u003d \"constSumPointsForEachOption\";"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMPOINTSFOREACHRECIPIENT \u003d \"constSumPointsForEachRecipient\";"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMDISTRIBUTEUNEVENLY \u003d \"constSumUnevenDistribution\";"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMDISTRIBUTEPOINTSOPTIONS \u003d \"constSumDistributePointsOptions\";"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMALLUNEVENDISTRIBUTION \u003d \"All options\";"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMSOMEUNEVENDISTRIBUTION \u003d \"At least some options\";"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMNOUNEVENDISTRIBUTION \u003d \"None\";"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONTRIBISNOTSUREALLOWED \u003d \"isNotSureAllowedCheck\";"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MCQ_GENERATED_OPTIONS \u003d \"mcqGeneratedOptions\";"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQ_GENERATED_OPTIONS \u003d \"msqGeneratedOptions\";"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_GIVERTYPE \u003d \"givertype\";"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RECIPIENTTYPE \u003d \"recipienttype\";"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_NUMBEROFENTITIES \u003d \"numofrecipients\";"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_NUMBEROFENTITIESTYPE \u003d \"numofrecipientstype\";"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_EDITTEXT \u003d \"questionedittext\";"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_DISCARDCHANGES \u003d \"questiondiscardchanges\";"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_EDITTYPE \u003d \"questionedittype\";"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_SAVECHANGESTEXT \u003d \"questionsavechangestext\";"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_SHOWRESPONSESTO \u003d \"showresponsesto\";"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_SHOWGIVERTO \u003d \"showgiverto\";"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_SHOWRECIPIENTTO \u003d \"showrecipientto\";"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RESPONSETOTAL \u003d \"questionresponsetotal\";"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_NUMSCALE_MIN \u003d \"numscalemin\";"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_NUMSCALE_MAX \u003d \"numscalemax\";"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_NUMSCALE_STEP \u003d \"numscalestep\";"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RUBRIC_EDIT_TABLE \u003d \"rubricEditTable\";"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RUBRIC_SUBQUESTION \u003d \"rubricSubQn\";"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RUBRIC_CHOICE \u003d \"rubricChoice\";"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RUBRIC_DESCRIPTION \u003d \"rubricDesc\";"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RUBRIC_WEIGHTS_ASSIGNED \u003d \"rubricAssignWeights\";"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RUBRIC_WEIGHT \u003d \"rubricWeight\";"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RUBRIC_NUM_ROWS \u003d \"rubricNumRows\";"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RUBRIC_NUM_COLS \u003d \"rubricNumCols\";"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RUBRIC_MOVE_COL_LEFT \u003d \"rubric-move-col-left\";"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RUBRIC_MOVE_COL_RIGHT \u003d \"rubric-move-col-right\";"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RANKOPTION \u003d \"rankOption\";"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RANKTORECIPIENTS \u003d \"rankToRecipients\";"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RANKNUMOPTIONS \u003d \"rankNumOptions\";"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RANKISDUPLICATESALLOWED \u003d \"rankAreDuplicatesAllowed\";"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RANK_IS_MIN_OPTIONS_TO_BE_RANKED_ENABLED \u003d"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": "                \"minOptionsToBeRankedEnabled\";"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RANK_IS_MAX_OPTIONS_TO_BE_RANKED_ENABLED \u003d"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": "                \"maxOptionsToBeRankedEnabled\";"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RANK_MIN_OPTIONS_TO_BE_RANKED \u003d \"minOptionsToBeRanked\";"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RANK_MAX_OPTIONS_TO_BE_RANKED \u003d \"maxOptionsToBeRanked\";"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RANK_IS_MIN_RECIPIENTS_TO_BE_RANKED_ENABLED \u003d"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "-"
        },
        "content": "                \"minRecipientsToBeRankedEnabled\";"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RANK_IS_MAX_RECIPIENTS_TO_BE_RANKED_ENABLED \u003d"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": "                \"maxRecipientsToBeRankedEnabled\";"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RANK_MIN_RECIPIENTS_TO_BE_RANKED \u003d \"minRecipientsToBeRanked\";"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RANK_MAX_RECIPIENTS_TO_BE_RANKED \u003d \"maxRecipientsToBeRanked\";"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_ID \u003d \"responseid\";"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_RECIPIENT \u003d \"responserecipient\";"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_TEXT \u003d \"responsetext\";"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_COMMENT_ID \u003d \"responsecommentid\";"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_COMMENT_TEXT \u003d \"responsecommenttext\";"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESULTS_UPLOADDOWNLOADBUTTON \u003d \"fruploaddownloadbtn\";"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESULTS_SORTTYPE \u003d \"frsorttype\";"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESULTS_GROUPBYTEAM \u003d \"frgroupbyteam\";"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESULTS_GROUPBYSECTION \u003d \"frgroupbysection\";"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESULTS_SHOWSTATS \u003d \"frshowstats\";"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESULTS_INDICATE_MISSING_RESPONSES \u003d \"frindicatemissingresponses\";"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESULTS_NEED_AJAX \u003d \"frneedajax\";"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESULTS_MAIN_INDEX \u003d \"frmainindex\";"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String PREVIEWAS \u003d \"previewas\";"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_ID \u003d \"googleid\";"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INVITER_ID \u003d \"invitergoogleid\";"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String REGKEY \u003d \"key\";"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_EMAIL \u003d \"studentemail\";"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String NEW_STUDENT_EMAIL \u003d \"newstudentemail\";"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_SHORT_NAME \u003d \"studentshortname\";"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_EMAIL \u003d \"studentprofileemail\";"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_INSTITUTION \u003d \"studentprofileinstitute\";"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_NATIONALITY \u003d \"studentnationality\";"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_GENDER \u003d \"studentgender\";"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_MOREINFO \u003d \"studentprofilemoreinfo\";"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_PHOTO \u003d \"studentprofilephoto\";"
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_PHOTOEDIT \u003d \"editphoto\";"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_NAME \u003d \"studentname\";"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RESPONSE_COMMENTS_SHOWCOMMENTSTO \u003d \"showresponsecommentsto\";"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RESPONSE_COMMENTS_SHOWGIVERTO \u003d \"showresponsegiverto\";"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SECTION_NAME \u003d \"sectionname\";"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String TEAM_NAME \u003d \"teamname\";"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COMMENTS \u003d \"comments\";"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String TEAMMATES \u003d \"teammates\";"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STATUS_MESSAGES_LIST \u003d \"statusMessagesToUser\";"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ERROR \u003d \"error\";"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String NEXT_URL \u003d \"next\";"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String USER_ID \u003d \"user\";"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String HINT \u003d \"hint\";"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_NOT_VISIBLE \u003d \"feedbacksessionnotvisible\";"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String LOGIN_ADMIN \u003d \"admin\";"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String LOGIN_INSTRUCTOR \u003d \"instructor\";"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String LOGIN_STUDENT \u003d \"student\";"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "-"
        },
        "content": "        //Email parameters"
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String EMAIL_RECEIVER \u003d \"user\";"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String EMAIL_COURSE \u003d \"course\";"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String EMAIL_FEEDBACK \u003d \"feedback\";"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String EMAIL_TYPE \u003d \"type\";"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SESSION_SUMMARY_EMAIL_SEND_CHECK \u003d \"sessionsummarysendemail\";"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String OPEN_OR_PUBLISHED_EMAIL_SEND_CHECK \u003d \"openorpublishedemailsent\";"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String EMAIL_CONTENT \u003d \"content\";"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String EMAIL_SENDER \u003d \"sender\";"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String EMAIL_SENDERNAME \u003d \"sendername\";"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String EMAIL_SUBJECT \u003d \"subject\";"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String EMAIL_REPLY_TO_ADDRESS \u003d \"reply\";"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COMMENT_EDITTYPE \u003d \"commentedittype\";"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COMMENT_ID \u003d \"commentid\";"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COMMENT_TEXT \u003d \"commenttext\";"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SEND_SUBMISSION_EMAIL \u003d \"sendsubmissionemail\";"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "-"
        },
        "content": "        //Submission parameters for Task Queue"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SUBMISSION_COURSE \u003d \"course\";"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SUBMISSION_FEEDBACK \u003d \"feedback\";"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SUBMISSION_REMIND_USERLIST \u003d \"usersToRemind\";"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SUBMISSION_RESEND_PUBLISHED_EMAIL_USER_LIST \u003d \"usersToResendEmail\";"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ENROLLMENT_DETAILS \u003d \"enrollmentdetails\";"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SEARCH_KEY \u003d \"searchkey\";"
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String DISPLAY_ARCHIVE \u003d \"displayarchive\";"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RESPONDENT_EMAIL \u003d \"respondentemail\";"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RESPONDENT_IS_INSTRUCTOR \u003d \"respondentisinstructor\";"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RESPONDENT_IS_TO_BE_REMOVED \u003d \"respondentistoberemoved\";"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "-"
        },
        "content": "        //Parameters for checking persistence of data during Eventual Consistency"
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CHECK_PERSISTENCE_COURSE \u003d \"persistencecourse\";"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String PROFILE_PICTURE_LEFTX \u003d \"cropboxleftx\";"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String PROFILE_PICTURE_TOPY \u003d \"cropboxtopy\";"
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String PROFILE_PICTURE_RIGHTX \u003d \"cropboxrightx\";"
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String PROFILE_PICTURE_BOTTOMY \u003d \"cropboxbottomy\";"
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String PROFILE_PICTURE_HEIGHT \u003d \"pictureheight\";"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String PROFILE_PICTURE_WIDTH \u003d \"picturewidth\";"
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String PROFILE_PICTURE_ROTATE \u003d \"picturerotate\";"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SEARCH_STUDENTS \u003d \"searchstudents\";"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SEARCH_FEEDBACK_SESSION_DATA \u003d \"searchfeedbacksessiondata\";"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ERROR_FEEDBACK_EMAIL_RECEIVER_ADDRESS \u003d \"errorfeedbackemailreceiveraddress\";"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ERROR_FEEDBACK_EMAIL_SUBJECT \u003d \"errorfeedbackemailsubject\";"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ERROR_FEEDBACK_EMAIL_CONTENT \u003d \"errorfeedbackemailcontent\";"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ERROR_FEEDBACK_URL_REQUESTED \u003d \"errorfeedbackrequestedurl\";"
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class SearchIndex {"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_COMMENT \u003d \"feedbackresponsecomment\";"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT \u003d \"student\";"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR \u003d \"instructor\";"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class SearchDocumentField {"
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_ATTRIBUTE \u003d \"studentAttribute\";"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_ATTRIBUTE \u003d \"instructorAttribute\";"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_COMMENT_ATTRIBUTE \u003d \"frCommentAttibute\";"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_COMMENT_GIVER_NAME \u003d \"frCommentGiverName\";"
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_COMMENT_GIVER_EMAIL \u003d \"frCommentGiverEmail\";"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_ATTRIBUTE \u003d \"feedbackResponseAttibute\";"
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_GIVER_NAME \u003d \"feedbackResponseGiverName\";"
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_RECEIVER_NAME \u003d \"feedbackResponseReceiverName\";"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_ATTRIBUTE \u003d \"feedbackQuestionAttibute\";"
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_ATTRIBUTE \u003d \"feedbackSessionAttibute\";"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SEARCHABLE_TEXT \u003d \"searchableText\";"
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CREATED_DATE \u003d \"createdDate\";"
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_ID \u003d \"courseId\";"
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String GIVER_EMAIL \u003d \"giverEmail\";"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String GIVER_SECTION \u003d \"giverSection\";"
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RECIPIENT_EMAIL \u003d \"recipientEmail\";"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RECIPIENT_SECTION \u003d \"recipientSection\";"
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String IS_VISIBLE_TO_INSTRUCTOR \u003d \"isVisibleToInstructor\";"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String IS_VISIBLE_TO_RECEIVER \u003d \"isVisibleToReceiver\";"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String IS_VISIBLE_TO_GIVER \u003d \"isVisibleToGiver\";"
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class ActionURIs {"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "-"
        },
        "content": "        /* _PAGE/Page in the Action URI name means \u0027show page\u0027 */"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String LOGOUT \u003d \"/logout\";"
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_HOME_PAGE \u003d \"/page/instructorHomePage\";"
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSES_PAGE \u003d \"/page/instructorCoursesPage\";"
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_ADD \u003d \"/page/instructorCourseAdd\";"
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_DELETE \u003d \"/page/instructorCourseDelete\";"
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_ARCHIVE \u003d \"/page/instructorCourseArchive\";"
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_RECOVERY_COURSE_RESTORE \u003d \"/page/instructorRecoveryRestoreCourse\";"
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_RECOVERY_COURSE_RESTORE_ALL \u003d"
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \"/page/instructorRecoveryRestoreAllCourses\";"
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_RECOVERY_COURSE_DELETE \u003d \"/page/instructorRecoveryDeleteCourse\";"
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_RECOVERY_COURSE_DELETE_ALL \u003d"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \"/page/instructorRecoveryDeleteAllCourses\";"
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_DETAILS_PAGE \u003d \"/page/instructorCourseDetailsPage\";"
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_EDIT_PAGE \u003d \"/page/instructorCourseEditPage\";"
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_EDIT_SAVE \u003d \"/page/instructorCourseEditSave\";"
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_STUDENT_DETAILS_PAGE \u003d \"/page/instructorCourseStudentDetailsPage\";"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_STUDENT_DETAILS_EDIT \u003d \"/page/instructorCourseStudentDetailsEdit\";"
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_STUDENT_DETAILS_EDIT_SAVE \u003d"
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/page/instructorCourseStudentDetailsEditSave\";"
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_STUDENT_DELETE \u003d \"/page/instructorCourseStudentDelete\";"
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_STUDENT_DELETE_ALL \u003d \"/page/instructorCourseStudentDeleteAll\";"
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_STUDENT_LIST_DOWNLOAD \u003d \"/page/instructorCourseStudentListDownload\";"
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_ENROLL_PAGE \u003d \"/page/instructorCourseEnrollPage\";"
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_ENROLL_SAVE \u003d \"/page/instructorCourseEnrollSave\";"
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_REMIND \u003d \"/page/instructorCourseRemind\";"
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_INSTRUCTOR_ADD \u003d \"/page/instructorCourseInstructorAdd\";"
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_INSTRUCTOR_EDIT_SAVE \u003d \"/page/instructorCourseInstructorEditSave\";"
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_INSTRUCTOR_DELETE \u003d \"/page/instructorCourseInstructorDelete\";"
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_JOIN \u003d \"/page/instructorCourseJoin\";"
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_JOIN_AUTHENTICATED \u003d \"/page/instructorCourseJoinAuthenticated\";"
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_SEARCH_PAGE \u003d \"/page/instructorSearchPage\";"
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_STUDENT_LIST_PAGE \u003d \"/page/instructorStudentListPage\";"
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_STUDENT_LIST_AJAX_PAGE \u003d \"/page/instructorStudentListAjaxPage\";"
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_STUDENT_RECORDS_PAGE \u003d \"/page/instructorStudentRecordsPage\";"
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_STUDENT_RECORDS_AJAX_PAGE \u003d \"/page/instructorStudentRecordsAjaxPage\";"
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_EDIT_STUDENT_FEEDBACK_PAGE \u003d \"/page/instructorEditStudentFeedbackPage\";"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_EDIT_STUDENT_FEEDBACK_SAVE \u003d \"/page/instructorEditStudentFeedbackSave\";"
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_EDIT_INSTRUCTOR_FEEDBACK_PAGE \u003d \"/page/instructorEditInstructorFeedbackPage\";"
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_EDIT_INSTRUCTOR_FEEDBACK_SAVE \u003d \"/page/instructorEditInstructorFeedbackSave\";"
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_SESSIONS_PAGE \u003d \"/page/instructorFeedbackSessionsPage\";"
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_ADD \u003d \"/page/instructorFeedbackAdd\";"
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_COPY \u003d \"/page/instructorFeedbackCopy\";"
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_DELETE \u003d \"/page/instructorFeedbackDelete\";"
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_REMIND \u003d \"/page/instructorFeedbackRemind\";"
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_REMIND_PARTICULAR_STUDENTS_PAGE \u003d"
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/page/instructorFeedbackRemindParticularStudentsPage\";"
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_REMIND_PARTICULAR_STUDENTS \u003d"
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/page/instructorFeedbackRemindParticularStudents\";"
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_PUBLISH \u003d \"/page/instructorFeedbackPublish\";"
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_UNPUBLISH \u003d \"/page/instructorFeedbackUnpublish\";"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_RESEND_PUBLISHED_EMAIL_PAGE \u003d"
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/page/instructorFeedbackResendPublishedEmailPage\";"
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_RESEND_PUBLISHED_EMAIL \u003d"
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/page/instructorFeedbackResendPublishedEmail\";"
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_EDIT_COPY_PAGE \u003d \"/page/instructorFeedbackEditCopyPage\";"
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_EDIT_COPY \u003d \"/page/instructorFeedbackEditCopy\";"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_EDIT_PAGE \u003d \"/page/instructorFeedbackEditPage\";"
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_EDIT_SAVE \u003d \"/page/instructorFeedbackEditSave\";"
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_RESULTS_PAGE \u003d \"/page/instructorFeedbackResultsPage\";"
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_RESULTS_DOWNLOAD \u003d \"/page/instructorFeedbackResultsDownload\";"
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_PREVIEW_ASSTUDENT \u003d \"/page/instructorFeedbackPreviewAsStudent\";"
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_PREVIEW_ASINSTRUCTOR \u003d \"/page/instructorFeedbackPreviewAsInstructor\";"
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_QUESTION_ADD \u003d \"/page/instructorFeedbackQuestionAdd\";"
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_QUESTION_COPY_PAGE \u003d \"/page/instructorFeedbackQuestionCopyPage\";"
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_QUESTION_COPY \u003d \"/page/instructorFeedbackQuestionCopy\";"
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_QUESTION_EDIT \u003d \"/page/instructorFeedbackQuestionEdit\";"
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_QUESTION_VISIBILITY_MESSAGE \u003d"
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/page/instructorFeedbackQuestionvisibilityMessage\";"
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_RESPONSE_COMMENT_ADD \u003d \"/page/instructorFeedbackResponseCommentAdd\";"
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_RESPONSE_COMMENT_EDIT \u003d \"/page/instructorFeedbackResponseCommentEdit\";"
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_RESPONSE_COMMENT_DELETE \u003d"
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/page/instructorFeedbackResponseCommentDelete\";"
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_STATS_PAGE \u003d \"/page/courseStatsPage\";"
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_STATS_PAGE \u003d \"/page/feedbackSessionStatsPage\";"
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_SUBMISSION_EDIT_PAGE \u003d \"/page/instructorFeedbackSubmissionEditPage\";"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_SUBMISSION_EDIT_SAVE \u003d \"/page/instructorFeedbackSubmissionEditSave\";"
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CREATE_IMAGE_UPLOAD_URL \u003d \"/page/createImageUploadUrl\";"
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String IMAGE_UPLOAD \u003d \"/page/imageUpload\";"
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_HOME_PAGE \u003d \"/page/studentHomePage\";"
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_COURSE_JOIN \u003d \"/page/studentCourseJoin\";"
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_COURSE_JOIN_NEW \u003d \"/page/studentCourseJoinAuthentication\";"
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_COURSE_JOIN_AUTHENTICATED \u003d \"/page/studentCourseJoinAuthenticated\";"
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_COURSE_DETAILS_PAGE \u003d \"/page/studentCourseDetailsPage\";"
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_FEEDBACK_SUBMISSION_EDIT_PAGE \u003d \"/page/studentFeedbackSubmissionEditPage\";"
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_FEEDBACK_SUBMISSION_EDIT_SAVE \u003d \"/page/studentFeedbackSubmissionEditSave\";"
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_FEEDBACK_RESULTS_PAGE \u003d \"/page/studentFeedbackResultsPage\";"
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_PAGE \u003d \"/page/studentProfilePage\";"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_EDIT_SAVE \u003d \"/page/studentProfileEditSave\";"
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_PICTURE \u003d \"/page/studentProfilePic\";"
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_PICTURE_UPLOAD \u003d \"/page/studentProfilePictureUpload\";"
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_PICTURE_EDIT \u003d \"/page/studentProfilePictureEdit\";"
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_CREATEUPLOADFORMURL \u003d \"/page/studentProfileCreateFormUrl\";"
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_EMAIL_LOG_PAGE \u003d \"/admin/adminEmailLogPage\";"
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_HOME_PAGE \u003d \"/admin/adminHomePage\";"
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_INSTRUCTORACCOUNT_ADD \u003d \"/admin/adminInstructorAccountAdd\";"
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_ACCOUNT_MANAGEMENT_PAGE \u003d \"/admin/adminAccountManagementPage\";"
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_ACCOUNT_DETAILS_PAGE \u003d \"/admin/adminAccountDetailsPage\";"
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_ACCOUNT_DELETE \u003d \"/admin/adminAccountDelete\";"
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_EXCEPTION_TEST \u003d \"/admin/adminExceptionTest\";"
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_ACTIVITY_LOG_PAGE \u003d \"/admin/adminActivityLogPage\";"
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_SESSIONS_PAGE \u003d \"/admin/adminSessionsPage\";"
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_SEARCH_PAGE \u003d \"/admin/adminSearchPage\";"
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_EMAIL_COMPOSE_PAGE \u003d \"/admin/adminEmailComposePage\";"
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_EMAIL_COMPOSE_SAVE \u003d \"/admin/adminEmailComposeSave\";"
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_EMAIL_COMPOSE_SEND \u003d \"/admin/adminEmailComposeSend\";"
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_EMAIL_SENT_PAGE \u003d \"/admin/adminEmailSentPage\";"
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_EMAIL_TRASH_PAGE \u003d \"/admin/adminEmailTrashPage\";"
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_EMAIL_TRASH_DELETE \u003d \"/admin/adminEmailTrashDelete\";"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_EMAIL_DRAFT_PAGE \u003d \"/admin/adminEmailDraftPage\";"
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_EMAIL_MOVE_TO_TRASH \u003d \"/admin/adminEmailMoveToTrash\";"
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_EMAIL_MOVE_OUT_TRASH \u003d \"/admin/adminEmailMoveOutTrash\";"
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_EMAIL_IMAGE_UPLOAD \u003d \"/admin/adminEmailImageUpload\";"
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_EMAIL_CREATE_IMAGE_UPLOAD_URL \u003d \"/admin/adminEmailCreateImageUploadUrl\";"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_EMAIL_GROUP_RECEIVER_LIST_UPLOAD \u003d \"/admin/adminEmailGroupReceiverListUpload\";"
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_EMAIL_CREATE_GROUP_RECEIVER_LIST_UPLOAD_URL \u003d"
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/admin/adminEmailCreateGroupReceiverListUploadUrl\";"
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String PUBLIC_IMAGE_SERVE \u003d \"/public/publicImageServe\";"
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String PUBLIC_EMAIL_FILE_SERVE \u003d \"/public/publicEmailImageServe\";"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_STUDENT_GOOGLE_ID_RESET \u003d \"/admin/adminStudentGoogleIdReset\";"
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String AUTOMATED_LOG_COMPILATION \u003d \"/auto/compileLogs\";"
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String AUTOMATED_FEEDBACK_OPENING_REMINDERS \u003d \"/auto/feedbackSessionOpeningReminders\";"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String AUTOMATED_FEEDBACK_CLOSED_REMINDERS \u003d \"/auto/feedbackSessionClosedReminders\";"
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String AUTOMATED_FEEDBACK_CLOSING_REMINDERS \u003d \"/auto/feedbackSessionClosingReminders\";"
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String AUTOMATED_FEEDBACK_PUBLISHED_REMINDERS \u003d \"/auto/feedbackSessionPublishedReminders\";"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ERROR_FEEDBACK_SUBMIT \u003d \"/page/errorFeedbackSubmit\";"
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String BACKDOOR \u003d \"/backdoor\";"
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "-"
        },
        "content": "     * Configurations for task queue."
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class TaskQueue {"
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_PREPARE_EMAIL_ADDRESS_MODE_QUEUE_NAME \u003d \"admin-prepare-email-address-mode-queue\";"
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_PREPARE_EMAIL_ADDRESS_MODE_WORKER_URL \u003d \"/worker/adminPrepareEmailAddressMode\";"
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_PREPARE_EMAIL_GROUP_MODE_QUEUE_NAME \u003d \"admin-prepare-email-group-mode-queue\";"
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_PREPARE_EMAIL_GROUP_MODE_WORKER_URL \u003d \"/worker/adminPrepareEmailGroupMode\";"
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_SEND_EMAIL_QUEUE_NAME \u003d \"admin-send-email-queue\";"
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_SEND_EMAIL_WORKER_URL \u003d \"/worker/adminSendEmail\";"
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_ADJUSTMENT_QUEUE_NAME \u003d \"feedback-response-adjustment-queue\";"
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_ADJUSTMENT_WORKER_URL \u003d \"/worker/feedbackResponseAdjustment\";"
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_PUBLISHED_EMAIL_QUEUE_NAME \u003d"
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "-"
        },
        "content": "                \"feedback-session-published-email-queue\";"
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_PUBLISHED_EMAIL_WORKER_URL \u003d"
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/worker/feedbackSessionPublishedEmail\";"
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_RESEND_PUBLISHED_EMAIL_QUEUE_NAME \u003d"
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "-"
        },
        "content": "                \"feedback-session-resend-published-email-queue\";"
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_RESEND_PUBLISHED_EMAIL_WORKER_URL \u003d"
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/worker/feedbackSessionResendPublishedEmail\";"
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_REMIND_EMAIL_QUEUE_NAME \u003d \"feedback-session-remind-email-queue\";"
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_REMIND_EMAIL_WORKER_URL \u003d \"/worker/feedbackSessionRemindEmail\";"
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_REMIND_PARTICULAR_USERS_EMAIL_QUEUE_NAME \u003d"
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "-"
        },
        "content": "                \"feedback-session-remind-particular-users-email-queue\";"
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_REMIND_PARTICULAR_USERS_EMAIL_WORKER_URL \u003d"
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/worker/feedbackSessionRemindParticularUsersEmail\";"
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_UNPUBLISHED_EMAIL_QUEUE_NAME \u003d"
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "-"
        },
        "content": "                \"feedback-session-unpublished-email-queue\";"
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_UNPUBLISHED_EMAIL_WORKER_URL \u003d"
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/worker/feedbackSessionUnpublishedEmail\";"
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_UPDATE_RESPONDENT_QUEUE_NAME \u003d"
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "-"
        },
        "content": "                \"feedback-session-update-respondent-queue\";"
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_UPDATE_RESPONDENT_WORKER_URL \u003d"
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/worker/feedbackSessionUpdateRespondent\";"
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_JOIN_EMAIL_QUEUE_NAME \u003d \"instructor-course-join-email-queue\";"
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_JOIN_EMAIL_WORKER_URL \u003d \"/worker/instructorCourseJoinEmail\";"
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SEND_EMAIL_QUEUE_NAME \u003d \"send-email-queue\";"
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SEND_EMAIL_WORKER_URL \u003d \"/worker/sendEmail\";"
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_COURSE_JOIN_EMAIL_QUEUE_NAME \u003d \"student-course-join-email-queue\";"
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_COURSE_JOIN_EMAIL_WORKER_URL \u003d \"/worker/studentCourseJoinEmail\";"
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class PublicActionNames {"
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String PUBLIC_IMAGE_SERVE_ACTION \u003d \"publicImageServeAction\";"
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class PageNames {"
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_HOME_PAGE \u003d \"instructorHomePage\";"
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_DETAILS_PAGE \u003d \"instructorCourseDetailsPage\";"
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_SESSIONS_PAGE \u003d \"instructorFeedbackSessionsPage\";"
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_EDIT_PAGE \u003d \"instructorFeedbackEditPage\";"
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_COPY \u003d \"instructorFeedbackCopy\";"
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_STUDENT_LIST_PAGE \u003d \"instructorStudentListPage\";"
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class ViewURIs {"
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "-"
        },
        "content": "        /* We omit adding the \u0027page\u0027 prefix to views because all of them are \"pages\" */"
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_HOME \u003d \"/jsp/instructorHome.jsp\";"
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_HOME_AJAX_COURSE_TABLE \u003d \"/jsp/instructorHomeAjaxCourse.jsp\";"
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_RESPONSE_COMMENTS_ADD \u003d"
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/jsp/instructorFeedbackResponseCommentsAdd.jsp\";"
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSES \u003d \"/jsp/instructorCourses.jsp\";"
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_EDIT \u003d \"/jsp/instructorCourseEdit.jsp\";"
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_DETAILS \u003d \"/jsp/instructorCourseDetails.jsp\";"
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_STUDENT_DETAILS \u003d \"/jsp/instructorCourseStudentDetails.jsp\";"
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_STUDENT_EDIT \u003d \"/jsp/instructorCourseStudentEdit.jsp\";"
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_ENROLL \u003d \"/jsp/instructorCourseEnroll.jsp\";"
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_ENROLL_RESULT \u003d \"/jsp/instructorCourseEnrollResult.jsp\";"
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_JOIN_CONFIRMATION \u003d \"/jsp/instructorCourseJoinConfirmation.jsp\";"
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_SESSIONS \u003d \"/jsp/instructorFeedbacks.jsp\";"
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_COPY_MODAL \u003d \"/jsp/instructorFeedbackCopyModal.jsp\";"
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_AJAX_REMIND_PARTICULAR_STUDENTS_MODAL \u003d"
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/jsp/instructorFeedbackAjaxRemindParticularStudentsModal.jsp\";"
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_AJAX_RESEND_PUBLISHED_EMAIL_MODAL \u003d"
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/jsp/instructorFeedbackAjaxResendPublishedEmailModal.jsp\";"
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_EDIT \u003d \"/jsp/instructorFeedbackEdit.jsp\";"
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_RESULTS_TOP \u003d \"/jsp/instructorFeedbackResultsTop.jsp\";"
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_RESULTS_BOTTOM \u003d \"/jsp/instructorFeedbackResultsBottom.jsp\";"
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_RESULTS_BY_GIVER_RECIPIENT_QUESTION \u003d"
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/jsp/instructorFeedbackResultsByGiverRecipientQuestion.jsp\";"
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_RESULTS_BY_RECIPIENT_GIVER_QUESTION \u003d"
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/jsp/instructorFeedbackResultsByRecipientGiverQuestion.jsp\";"
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_RESULTS_BY_GIVER_QUESTION_RECIPIENT \u003d"
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/jsp/instructorFeedbackResultsByGiverQuestionRecipient.jsp\";"
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_RESULTS_BY_RECIPIENT_QUESTION_GIVER \u003d"
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/jsp/instructorFeedbackResultsByRecipientQuestionGiver.jsp\";"
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_RESULTS_BY_QUESTION \u003d \"/jsp/instructorFeedbackResultsByQuestion.jsp\";"
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_SUBMISSION_EDIT \u003d \"/jsp/instructorFeedbackSubmissionEdit.jsp\";"
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_QUESTION_SUBMISSION_EDIT \u003d"
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/jsp/instructorFeedbackQuestionSubmissionEdit.jsp\";"
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_QUESTION_COPY_MODAL \u003d"
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/jsp/instructorFeedbackQuestionCopyModal.jsp\";"
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_SEARCH \u003d \"/jsp/instructorSearch.jsp\";"
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_STUDENT_LIST \u003d \"/jsp/instructorStudentList.jsp\";"
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_STUDENT_LIST_AJAX \u003d \"/jsp/instructorStudentListAjax.jsp\";"
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_STUDENT_RECORDS \u003d \"/jsp/instructorStudentRecords.jsp\";"
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_STUDENT_RECORDS_AJAX \u003d \"/jsp/instructorStudentRecordsAjax.jsp\";"
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_HOME \u003d \"/jsp/studentHome.jsp\";"
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_COURSE_JOIN_CONFIRMATION \u003d \"/jsp/studentCourseJoinConfirmation.jsp\";"
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_COURSE_DETAILS \u003d \"/jsp/studentCourseDetails.jsp\";"
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_FEEDBACK_SUBMISSION_EDIT \u003d \"/jsp/studentFeedbackSubmissionEdit.jsp\";"
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_FEEDBACK_QUESTION_SUBMISSION_EDIT \u003d"
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/jsp/studentFeedbackQuestionSubmissionEdit.jsp\";"
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_FEEDBACK_RESULTS \u003d \"/jsp/studentFeedbackResults.jsp\";"
      },
      {
        "lineNumber": 1219,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_PAGE \u003d \"/jsp/studentProfilePage.jsp\";"
      },
      {
        "lineNumber": 1220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1221,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_HOME \u003d \"/jsp/adminHome.jsp\";"
      },
      {
        "lineNumber": 1222,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_ACCOUNT_MANAGEMENT \u003d \"/jsp/adminAccountManagement.jsp\";"
      },
      {
        "lineNumber": 1223,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_SEARCH \u003d \"/jsp/adminSearch.jsp\";"
      },
      {
        "lineNumber": 1224,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_EMAIL \u003d \"/jsp/adminEmail.jsp\";"
      },
      {
        "lineNumber": 1225,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_ACTIVITY_LOG \u003d \"/jsp/adminActivityLog.jsp\";"
      },
      {
        "lineNumber": 1226,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_ACTIVITY_LOG_AJAX \u003d \"/jsp/adminActivityLogAjax.jsp\";"
      },
      {
        "lineNumber": 1227,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_ACCOUNT_DETAILS \u003d \"/jsp/adminAccountDetails.jsp\";"
      },
      {
        "lineNumber": 1228,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_SESSIONS \u003d \"/jsp/adminSessions.jsp\";"
      },
      {
        "lineNumber": 1229,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_EMAIL_LOG \u003d \"/jsp/adminEmailLog.jsp\";"
      },
      {
        "lineNumber": 1230,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_EMAIL_LOG_AJAX \u003d \"/jsp/adminEmailLogAjax.jsp\";"
      },
      {
        "lineNumber": 1231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1232,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String GOOGLE_ACCOUNT_HINT \u003d \"/googleAccountHint.jsp\";"
      },
      {
        "lineNumber": 1233,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ENABLE_JS \u003d \"/enableJs.jsp\";"
      },
      {
        "lineNumber": 1234,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INVALID_ORIGIN \u003d \"/invalidOrigin.jsp\";"
      },
      {
        "lineNumber": 1235,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String UNAUTHORIZED \u003d \"/unauthorized.jsp\";"
      },
      {
        "lineNumber": 1236,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ERROR_PAGE \u003d \"/errorPage.jsp\";"
      },
      {
        "lineNumber": 1237,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String DEADLINE_EXCEEDED_ERROR_PAGE \u003d \"/deadlineExceededErrorPage.jsp\";"
      },
      {
        "lineNumber": 1238,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ENTITY_NOT_FOUND_PAGE \u003d \"/entityNotFoundPage.jsp\";"
      },
      {
        "lineNumber": 1239,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ACTION_NOT_FOUND_PAGE \u003d \"/pageNotFound.jsp\";"
      },
      {
        "lineNumber": 1240,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_NOT_VISIBLE \u003d \"/feedbackSessionNotVisible.jsp\";"
      },
      {
        "lineNumber": 1241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1242,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String JS_UNIT_TEST \u003d \"/test/allJsUnitTests.jsp\";"
      },
      {
        "lineNumber": 1243,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MASHUP \u003d \"/test/mashup.jsp\";"
      },
      {
        "lineNumber": 1244,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String TABLE_SORT \u003d \"/test/tableSort.jsp\";"
      },
      {
        "lineNumber": 1245,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String TIMEZONE \u003d \"/test/timezone.jsp\";"
      },
      {
        "lineNumber": 1246,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1248,
        "author": {
          "gitId": "-"
        },
        "content": "    /* These are status messages that may be shown to the user */"
      },
      {
        "lineNumber": 1249,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class StatusMessages {"
      },
      {
        "lineNumber": 1250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1251,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String IMAGE_TOO_LARGE \u003d \"The uploaded image was too large. \";"
      },
      {
        "lineNumber": 1252,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FILE_NOT_A_PICTURE \u003d \"The file that you have uploaded is not a picture. \";"
      },
      {
        "lineNumber": 1253,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String NO_IMAGE_GIVEN \u003d \"Please specify a image to be uploaded.\";"
      },
      {
        "lineNumber": 1254,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String EMAIL_NOT_FOUND \u003d \"The requested email was not found\";"
      },
      {
        "lineNumber": 1255,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String DUPLICATE_EMAIL_INFO \u003d \"Same email address as the student in line\";"
      },
      {
        "lineNumber": 1256,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String EMAIL_DRAFT_SAVED \u003d \"Email draft has been saved\";"
      },
      {
        "lineNumber": 1257,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1258,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String NOT_A_RECEIVER_LIST_FILE \u003d"
      },
      {
        "lineNumber": 1259,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The file that you have uploaded is not a receiver list file. \";"
      },
      {
        "lineNumber": 1260,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String NO_GROUP_RECEIVER_LIST_FILE_GIVEN \u003d \"Please specify a receiver list file to be uploaded.\";"
      },
      {
        "lineNumber": 1261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1262,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_FIRST_TIME \u003d"
      },
      {
        "lineNumber": 1263,
        "author": {
          "gitId": "-"
        },
        "content": "                \"\u003cdiv class\u003d\\\"align-left\\\"\u003e\""
      },
      {
        "lineNumber": 1264,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"\u003cdiv class\u003d\\\"align-center text-color-red text-bold\\\"\u003e\""
      },
      {
        "lineNumber": 1265,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \"Ooops! Your Google account is not known to TEAMMATES\""
      },
      {
        "lineNumber": 1266,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"\u003c/div\u003e\""
      },
      {
        "lineNumber": 1267,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"\u003cbr\u003e\""
      },
      {
        "lineNumber": 1268,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"To access a course on TEAMMATES, you need to wait until an instructor adds you to \""
      },
      {
        "lineNumber": 1269,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"that course. As a confirmation, TEAMMATES will send you instructions on how to access \""
      },
      {
        "lineNumber": 1270,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"that particular course.\""
      },
      {
        "lineNumber": 1271,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"\u003cbr\u003e\u003cbr\u003e\""
      },
      {
        "lineNumber": 1272,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"If you \u0027joined\u0027 the course in TEAMMATES using a Google account before, but cannot login \""
      },
      {
        "lineNumber": 1273,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"anymore, these are the possible reasons:\""
      },
      {
        "lineNumber": 1274,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"\u003col\u003e\""
      },
      {
        "lineNumber": 1275,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \"\u003cli\u003e\""
      },
      {
        "lineNumber": 1276,
        "author": {
          "gitId": "-"
        },
        "content": "                            + \"You used a different Google account to access TEAMMATES in the past. \""
      },
      {
        "lineNumber": 1277,
        "author": {
          "gitId": "-"
        },
        "content": "                            + \"In that case, you need to use the same Google account to access TEAMMATES again. \""
      },
      {
        "lineNumber": 1278,
        "author": {
          "gitId": "-"
        },
        "content": "                            + \"Logout and re-login using the other Google account. \""
      },
      {
        "lineNumber": 1279,
        "author": {
          "gitId": "-"
        },
        "content": "                            + \"If you don\u0027t remember which Google account you used previously, \""
      },
      {
        "lineNumber": 1280,
        "author": {
          "gitId": "-"
        },
        "content": "                            + \"email us from the same email account to which you receive TEAMMATES emails.\""
      },
      {
        "lineNumber": 1281,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \"\u003c/li\u003e\""
      },
      {
        "lineNumber": 1282,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \"\u003cli\u003e\""
      },
      {
        "lineNumber": 1283,
        "author": {
          "gitId": "-"
        },
        "content": "                            + \"You changed the primary email from a non-Gmail address to a Gmail address recently. \""
      },
      {
        "lineNumber": 1284,
        "author": {
          "gitId": "-"
        },
        "content": "                            + \"In that case, \u003ca href\u003d\\\"/contact.jsp\\\"\u003eemail us\u003c/a\u003e \""
      },
      {
        "lineNumber": 1285,
        "author": {
          "gitId": "-"
        },
        "content": "                            + \"so that we can reconfigure your account to use the new Gmail address.\""
      },
      {
        "lineNumber": 1286,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \"\u003c/li\u003e\""
      },
      {
        "lineNumber": 1287,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \"\u003cli\u003e\""
      },
      {
        "lineNumber": 1288,
        "author": {
          "gitId": "-"
        },
        "content": "                            + \"You joined this course just a few seconds ago and your data \""
      },
      {
        "lineNumber": 1289,
        "author": {
          "gitId": "-"
        },
        "content": "                            + \"may be still in the process of propagating through our servers. \""
      },
      {
        "lineNumber": 1290,
        "author": {
          "gitId": "-"
        },
        "content": "                            + \"In that case, please click on the \""
      },
      {
        "lineNumber": 1291,
        "author": {
          "gitId": "-"
        },
        "content": "                            + \"\u003ca href\u003d\" + ActionURIs.STUDENT_HOME_PAGE + \"\u003eHome\u003c/a\u003e link above in a few minutes. \""
      },
      {
        "lineNumber": 1292,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \"\u003c/li\u003e\""
      },
      {
        "lineNumber": 1293,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"\u003c/ol\u003e\""
      },
      {
        "lineNumber": 1294,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\u003c/div\u003e\";"
      },
      {
        "lineNumber": 1295,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1296,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_ADDED \u003d"
      },
      {
        "lineNumber": 1297,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The course has been added. Click \u003ca href\u003d\\\"${courseEnrollLink}\\\"\u003ehere\u003c/a\u003e to add students to the course \""
      },
      {
        "lineNumber": 1298,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"or click \u003ca href\u003d\\\"${courseEditLink}\\\"\u003ehere\u003c/a\u003e to add other instructors.\u003cbr\u003e\""
      },
      {
        "lineNumber": 1299,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"If you don\u0027t see the course in the list below, please refresh the page after a few moments.\";"
      },
      {
        "lineNumber": 1300,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_EXISTS \u003d"
      },
      {
        "lineNumber": 1301,
        "author": {
          "gitId": "-"
        },
        "content": "                \"A course by the same ID already exists in the system, possibly created by another user. \""
      },
      {
        "lineNumber": 1302,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Please choose a different course ID\";"
      },
      {
        "lineNumber": 1303,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_EDITED \u003d \"The course has been edited.\";"
      },
      {
        "lineNumber": 1304,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_ARCHIVED \u003d"
      },
      {
        "lineNumber": 1305,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The course %s has been archived. It will not appear in the home page any more.\";"
      },
      {
        "lineNumber": 1306,
        "author": {
          "gitId": "-"
        },
        "content": "        // TODO: Let undo process to be in the Course page for now."
      },
      {
        "lineNumber": 1307,
        "author": {
          "gitId": "-"
        },
        "content": "        // Should implement to be able to undo the archiving from the home page later."
      },
      {
        "lineNumber": 1308,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_ARCHIVED_FROM_HOMEPAGE \u003d"
      },
      {
        "lineNumber": 1309,
        "author": {
          "gitId": "-"
        },
        "content": "                COURSE_ARCHIVED + \" You can access archived courses from the \u0027Courses\u0027 tab.\u003cbr\u003e\""
      },
      {
        "lineNumber": 1310,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Go there to undo the archiving and bring the course back to the home page.\";"
      },
      {
        "lineNumber": 1311,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_UNARCHIVED \u003d \"The course %s has been unarchived.\";"
      },
      {
        "lineNumber": 1312,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        public static final String COURSE_MOVED_TO_RECYCLE_BIN_FROM_HOMEPAGE \u003d"
      },
      {
        "lineNumber": 1313,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \"The course %s has been deleted. You can restore it from the \u0027Courses\u0027 tab.\";"
      },
      {
        "lineNumber": 1314,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        public static final String COURSE_MOVED_TO_RECYCLE_BIN \u003d"
      },
      {
        "lineNumber": 1315,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \"The course %s has been deleted. You can restore it from the deleted courses table below.\";"
      },
      {
        "lineNumber": 1316,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        public static final String COURSE_RESTORED \u003d \"The course %s has been restored.\";"
      },
      {
        "lineNumber": 1317,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        public static final String COURSE_ALL_RESTORED \u003d \"All courses have been restored.\";"
      },
      {
        "lineNumber": 1318,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        public static final String COURSE_DELETED \u003d"
      },
      {
        "lineNumber": 1319,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \"The course %s has been permanently deleted.\";"
      },
      {
        "lineNumber": 1320,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        public static final String COURSE_ALL_DELETED \u003d \"All courses have been permanently deleted.\";"
      },
      {
        "lineNumber": 1321,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_EMPTY \u003d"
      },
      {
        "lineNumber": 1322,
        "author": {
          "gitId": "-"
        },
        "content": "                \"You have not created any courses yet. Use the form above to create a course.\";"
      },
      {
        "lineNumber": 1323,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_EMPTY_IN_INSTRUCTOR_FEEDBACKS \u003d"
      },
      {
        "lineNumber": 1324,
        "author": {
          "gitId": "-"
        },
        "content": "                \"You have not created any courses yet, or you have no active courses. Go \u003ca href\u003d\\\"\""
      },
      {
        "lineNumber": 1325,
        "author": {
          "gitId": "-"
        },
        "content": "                + ActionURIs.INSTRUCTOR_COURSES_PAGE + \"${user}\\\"\u003ehere\u003c/a\u003e to create or unarchive a course.\";"
      },
      {
        "lineNumber": 1326,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_REMINDER_SENT_TO \u003d \"An email has been sent to \";"
      },
      {
        "lineNumber": 1327,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_REMINDERS_SENT \u003d \"Emails have been sent to unregistered students.\";"
      },
      {
        "lineNumber": 1328,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1329,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_ENROLL_POSSIBLE_DATA_LOSS \u003d \"There are existing feedback responses \""
      },
      {
        "lineNumber": 1330,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"for this course. Modifying records of enrolled students will result in some existing \""
      },
      {
        "lineNumber": 1331,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"responses from those modified students to be deleted. You may wish to download the data \""
      },
      {
        "lineNumber": 1332,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"before you make the changes.\";"
      },
      {
        "lineNumber": 1333,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_ENROLL_STUDENTS_ERROR \u003d \"Errors on %d student(s):\";"
      },
      {
        "lineNumber": 1334,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_ENROLL_STUDENTS_ADDED \u003d \"%d student(s) added:\";"
      },
      {
        "lineNumber": 1335,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_ENROLL_STUDENTS_MODIFIED \u003d \"%d student(s) modified:\";"
      },
      {
        "lineNumber": 1336,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_ENROLL_STUDENTS_UNMODIFIED \u003d \"%d student(s) updated with no changes:\";"
      },
      {
        "lineNumber": 1337,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_ENROLL_STUDENTS_NOT_IN_LIST \u003d \"%d student(s) remain unmodified:\";"
      },
      {
        "lineNumber": 1338,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_ENROLL_STUDENTS_UNKNOWN \u003d \"%d student(s) with unknown enrolment status:\";"
      },
      {
        "lineNumber": 1339,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1340,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String TEAM_INVALID_SECTION_EDIT \u003d"
      },
      {
        "lineNumber": 1341,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The team \\\"%s\\\" is in multiple sections. \""
      },
      {
        "lineNumber": 1342,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"The team ID should be unique across the entire course \""
      },
      {
        "lineNumber": 1343,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"and a team cannot be spread across multiple sections.\u003cbr\u003e\";"
      },
      {
        "lineNumber": 1344,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SECTION_QUOTA_EXCEED \u003d"
      },
      {
        "lineNumber": 1345,
        "author": {
          "gitId": "-"
        },
        "content": "                \"You are trying enroll more than 100 students in section \\\"%s\\\". \""
      },
      {
        "lineNumber": 1346,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"To avoid performance problems, please do not enroll more than 100 students in a single section.\u003cbr\u003e\";"
      },
      {
        "lineNumber": 1347,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String QUOTA_PER_ENROLLMENT_EXCEED \u003d"
      },
      {
        "lineNumber": 1348,
        "author": {
          "gitId": "-"
        },
        "content": "                \"You are trying to enroll more than 100 students. \""
      },
      {
        "lineNumber": 1349,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"To avoid performance problems, please enroll no more than 100 students at a time.\";"
      },
      {
        "lineNumber": 1350,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1351,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_INSTRUCTOR_ADDED \u003d \"The instructor %s has been added successfully. \""
      },
      {
        "lineNumber": 1352,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"An email containing how to \u0027join\u0027 this course will be sent to %s in a few minutes.\";"
      },
      {
        "lineNumber": 1353,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_INSTRUCTOR_EXISTS \u003d"
      },
      {
        "lineNumber": 1354,
        "author": {
          "gitId": "-"
        },
        "content": "                \"An instructor with the same email address already exists in the course.\";"
      },
      {
        "lineNumber": 1355,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_INSTRUCTOR_EDITED \u003d \"The changes to the instructor %s has been updated.\";"
      },
      {
        "lineNumber": 1356,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_INSTRUCTOR_DELETED \u003d \"The instructor has been deleted from the course.\";"
      },
      {
        "lineNumber": 1357,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_INSTRUCTOR_DELETE_NOT_ALLOWED \u003d"
      },
      {
        "lineNumber": 1358,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The instructor you are trying to delete is the last instructor in the course. \""
      },
      {
        "lineNumber": 1359,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Deleting the last instructor from the course is not allowed.\";"
      },
      {
        "lineNumber": 1360,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1361,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String JOIN_COURSE_KEY_BELONGS_TO_DIFFERENT_USER \u003d"
      },
      {
        "lineNumber": 1362,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The join link used belongs to a different user whose Google ID is \""
      },
      {
        "lineNumber": 1363,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"%s (only part of the Google ID is shown to protect privacy). \""
      },
      {
        "lineNumber": 1364,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"If that Google ID is owned by you, please logout and re-login \""
      },
      {
        "lineNumber": 1365,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"using that Google account. If it doesn’t belong to you, please \""
      },
      {
        "lineNumber": 1366,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\u003ca href\u003d\\\"mailto:\" + Config.SUPPORT_EMAIL + \"?\""
      },
      {
        "lineNumber": 1367,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"body\u003dYour name:%%0AYour course:%%0AYour university:\\\"\u003e\""
      },
      {
        "lineNumber": 1368,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"contact us\u003c/a\u003e so that we can investigate.\";"
      },
      {
        "lineNumber": 1369,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String JOIN_COURSE_GOOGLE_ID_BELONGS_TO_DIFFERENT_USER \u003d"
      },
      {
        "lineNumber": 1370,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The Google ID %s belongs to an existing user in the course.\""
      },
      {
        "lineNumber": 1371,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Please login again using a different Google account, and try to join the course again.\";"
      },
      {
        "lineNumber": 1372,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1373,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_GOOGLEID_RESET \u003d \"The student\u0027s google id has been reset\";"
      },
      {
        "lineNumber": 1374,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_GOOGLEID_RESET_FAIL \u003d"
      },
      {
        "lineNumber": 1375,
        "author": {
          "gitId": "-"
        },
        "content": "                \"An error occurred when trying to reset student\u0027s google id\";"
      },
      {
        "lineNumber": 1376,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1377,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_EVENTUAL_CONSISTENCY \u003d"
      },
      {
        "lineNumber": 1378,
        "author": {
          "gitId": "-"
        },
        "content": "                \"If the student was created during the last few minutes, \""
      },
      {
        "lineNumber": 1379,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"try again in a few more minutes as the student may still be being saved.\";"
      },
      {
        "lineNumber": 1380,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1381,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_EDITED \u003d \"The student has been edited successfully.\";"
      },
      {
        "lineNumber": 1382,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_EDITED_AND_EMAIL_SENT \u003d STUDENT_EDITED"
      },
      {
        "lineNumber": 1383,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" A summary of the course has been sent to the new email.\";"
      },
      {
        "lineNumber": 1384,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_NOT_FOUND_FOR_EDIT \u003d"
      },
      {
        "lineNumber": 1385,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The student you tried to edit does not exist. \" + STUDENT_EVENTUAL_CONSISTENCY;"
      },
      {
        "lineNumber": 1386,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_DELETED \u003d \"The student has been removed from the course\";"
      },
      {
        "lineNumber": 1387,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENTS_DELETED \u003d \"All the students have been removed from the course\";"
      },
      {
        "lineNumber": 1388,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_EDITED \u003d \"Your profile has been edited successfully\";"
      },
      {
        "lineNumber": 1389,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_PICTURE_SAVED \u003d \"Your profile picture has been saved successfully\";"
      },
      {
        "lineNumber": 1390,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_PIC_TOO_LARGE \u003d \"The uploaded profile picture was too large. \""
      },
      {
        "lineNumber": 1391,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Please try again with a smaller picture.\";"
      },
      {
        "lineNumber": 1392,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_PIC_SERVICE_DOWN \u003d \"We were unable to upload your picture at this time. \""
      },
      {
        "lineNumber": 1393,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Please try again after some time\";"
      },
      {
        "lineNumber": 1394,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_EMAIL_TAKEN_MESSAGE \u003d"
      },
      {
        "lineNumber": 1395,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Trying to update to an email that is already used by: %s/%s\";"
      },
      {
        "lineNumber": 1396,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1397,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_ADDED \u003d"
      },
      {
        "lineNumber": 1398,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The feedback session has been added. \""
      },
      {
        "lineNumber": 1399,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Click the \\\"Add New Question\\\" button below to begin adding questions for the feedback session.\";"
      },
      {
        "lineNumber": 1400,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_ADD_DB_INCONSISTENCY \u003d"
      },
      {
        "lineNumber": 1401,
        "author": {
          "gitId": "-"
        },
        "content": "                \"If you do not see existing feedback sessions in the list below, \""
      },
      {
        "lineNumber": 1402,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"please refresh the page after a few moments\";"
      },
      {
        "lineNumber": 1403,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_COPIED \u003d"
      },
      {
        "lineNumber": 1404,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The feedback session has been copied. Please modify settings/questions as necessary.\";"
      },
      {
        "lineNumber": 1405,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_COPY_NONESELECTED \u003d"
      },
      {
        "lineNumber": 1406,
        "author": {
          "gitId": "-"
        },
        "content": "                \"You have not selected any course to copy the feedback session to\";"
      },
      {
        "lineNumber": 1407,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_COPY_ALREADYEXISTS \u003d"
      },
      {
        "lineNumber": 1408,
        "author": {
          "gitId": "-"
        },
        "content": "                \"A feedback session with the name \\\"%s\\\" already exists in the following course(s): %s.\";"
      },
      {
        "lineNumber": 1409,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_EDITED \u003d \"The feedback session has been updated.\";"
      },
      {
        "lineNumber": 1410,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_END_TIME_EARLIER_THAN_START_TIME \u003d"
      },
      {
        "lineNumber": 1411,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The end time for this feedback session cannot be earlier than the start time.\";"
      },
      {
        "lineNumber": 1412,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_DELETED \u003d \"The feedback session has been deleted.\";"
      },
      {
        "lineNumber": 1413,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_DELETED_NO_ACCESS \u003d"
      },
      {
        "lineNumber": 1414,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The feedback session has been deleted and is no longer accessible.\";"
      },
      {
        "lineNumber": 1415,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_DOWNLOAD_FILE_SIZE_EXCEEDED \u003d \"This session has more responses than \""
      },
      {
        "lineNumber": 1416,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"that can be downloaded in one go. Please download responses for one question at a time instead. \""
      },
      {
        "lineNumber": 1417,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"To download responses for a specific question, click on the corresponding question number.\";"
      },
      {
        "lineNumber": 1418,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_PUBLISHED \u003d"
      },
      {
        "lineNumber": 1419,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The feedback session has been published. \""
      },
      {
        "lineNumber": 1420,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Please allow up to 1 hour for all the notification emails to be sent out.\";"
      },
      {
        "lineNumber": 1421,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_RESEND_EMAIL_NOT_PUBLISHED \u003d"
      },
      {
        "lineNumber": 1422,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The feedback session is not published. \""
      },
      {
        "lineNumber": 1423,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"You cannot resend published notification emails for a session that is not published.\";"
      },
      {
        "lineNumber": 1424,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_RESEND_EMAIL_EMPTY_RECIPIENT \u003d"
      },
      {
        "lineNumber": 1425,
        "author": {
          "gitId": "-"
        },
        "content": "                \"You have not selected any student to email.\";"
      },
      {
        "lineNumber": 1426,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_RESEND_EMAIL_SENT \u003d"
      },
      {
        "lineNumber": 1427,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Session published notification emails have been resent to those students and instructors. \""
      },
      {
        "lineNumber": 1428,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Please allow up to 1 hour for all the notification emails to be sent out.\";"
      },
      {
        "lineNumber": 1429,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_UNPUBLISHED \u003d \"The feedback session has been unpublished.\";"
      },
      {
        "lineNumber": 1430,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_REMINDERSSENT \u003d"
      },
      {
        "lineNumber": 1431,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Reminder e-mails have been sent out to those students and instructors. \""
      },
      {
        "lineNumber": 1432,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Please allow up to 1 hour for all the notification emails to be sent out.\";"
      },
      {
        "lineNumber": 1433,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_REMINDERSSESSIONNOTOPEN \u003d"
      },
      {
        "lineNumber": 1434,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The feedback session is not open for submissions. \""
      },
      {
        "lineNumber": 1435,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"You cannot send reminders for a session that is not open.\";"
      },
      {
        "lineNumber": 1436,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_REMINDERSEMPTYRECIPIENT \u003d \"You have not selected any student to remind.\";"
      },
      {
        "lineNumber": 1437,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_EXISTS \u003d"
      },
      {
        "lineNumber": 1438,
        "author": {
          "gitId": "-"
        },
        "content": "                \"A feedback session by this name already exists under this course\";"
      },
      {
        "lineNumber": 1439,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_EMPTY \u003d"
      },
      {
        "lineNumber": 1440,
        "author": {
          "gitId": "-"
        },
        "content": "                \"You have not created any sessions yet. Use the form above to create a session.\";"
      },
      {
        "lineNumber": 1441,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1442,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_ADDED \u003d \"The question has been added to this feedback session.\";"
      },
      {
        "lineNumber": 1443,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_DUPLICATED \u003d \"The question has been duplicated below.\";"
      },
      {
        "lineNumber": 1444,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_EDITED \u003d \"The changes to the question have been updated.\";"
      },
      {
        "lineNumber": 1445,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_DELETED \u003d \"The question has been deleted.\";"
      },
      {
        "lineNumber": 1446,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_EMPTY \u003d"
      },
      {
        "lineNumber": 1447,
        "author": {
          "gitId": "-"
        },
        "content": "                \"You have not created any questions for this feedback session yet. \""
      },
      {
        "lineNumber": 1448,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Click the button below to add a feedback question.\";"
      },
      {
        "lineNumber": 1449,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_NUMBEROFENTITIESINVALID \u003d"
      },
      {
        "lineNumber": 1450,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Please enter the maximum number of recipients each respondents should give feedback to.\";"
      },
      {
        "lineNumber": 1451,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_TEXTINVALID \u003d"
      },
      {
        "lineNumber": 1452,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Please enter a valid question. The question text cannot be empty.\";"
      },
      {
        "lineNumber": 1453,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1454,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSES_SAVED \u003d \"All responses submitted successfully!\";"
      },
      {
        "lineNumber": 1455,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSES_MISSING_RECIPIENT \u003d"
      },
      {
        "lineNumber": 1456,
        "author": {
          "gitId": "-"
        },
        "content": "                \"You did not specify a recipient for your response in question %s.\";"
      },
      {
        "lineNumber": 1457,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSES_WRONG_QUESTION_TYPE \u003d"
      },
      {
        "lineNumber": 1458,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Incorrect question type for response in question %s.\";"
      },
      {
        "lineNumber": 1459,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSES_INVALID_ID \u003d \"You are modifying an invalid response in question %s\";"
      },
      {
        "lineNumber": 1460,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSES_MSQ_MIN_CHECK \u003d \"Minimum selectable choices for question %d is %d.\";"
      },
      {
        "lineNumber": 1461,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSES_MSQ_MAX_CHECK \u003d \"Maximum selectable choices for question %d is %d.\";"
      },
      {
        "lineNumber": 1462,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1463,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_COMMENT_EMPTY \u003d \"Comment cannot be empty\";"
      },
      {
        "lineNumber": 1464,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_INVALID_RECIPIENT \u003d"
      },
      {
        "lineNumber": 1465,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Trying to update recipient to an invalid recipient for question %d.\";"
      },
      {
        "lineNumber": 1466,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1467,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SUBMISSIONS_NOT_OPEN \u003d"
      },
      {
        "lineNumber": 1468,
        "author": {
          "gitId": "-"
        },
        "content": "                \"\u003cstrong\u003eThe feedback session is currently not open for submissions.\u003c/strong\u003e \""
      },
      {
        "lineNumber": 1469,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"You can view the questions and any submitted responses for this feedback session \""
      },
      {
        "lineNumber": 1470,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"but cannot submit new responses.\";"
      },
      {
        "lineNumber": 1471,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SUBMISSIONS_CAN_SUBMIT_PARTIAL_ANSWER \u003d"
      },
      {
        "lineNumber": 1472,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Note that you can use the Submit button to save responses already entered, \""
      },
      {
        "lineNumber": 1473,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"and continue to answer remaining questions after that. \""
      },
      {
        "lineNumber": 1474,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"You may also edit your submission any number of times before the closing time of this session.\";"
      },
      {
        "lineNumber": 1475,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_UNANSWERED_QUESTIONS \u003d \"Note that some questions are yet to be answered. \""
      },
      {
        "lineNumber": 1476,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"They are: \";"
      },
      {
        "lineNumber": 1477,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1478,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESULTS_SOMETHINGNEW \u003d"
      },
      {
        "lineNumber": 1479,
        "author": {
          "gitId": "-"
        },
        "content": "                \"You have received feedback from others. Please see below.\";"
      },
      {
        "lineNumber": 1480,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESULTS_NOTHINGNEW \u003d"
      },
      {
        "lineNumber": 1481,
        "author": {
          "gitId": "-"
        },
        "content": "                \"You have not received any new feedback but you may review your own submissions below.\";"
      },
      {
        "lineNumber": 1482,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESULTS_SECTIONVIEWWARNING \u003d"
      },
      {
        "lineNumber": 1483,
        "author": {
          "gitId": "-"
        },
        "content": "                \"This session seems to have a large number of responses. \""
      },
      {
        "lineNumber": 1484,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"It is recommended to view the results one question/section at a time. \""
      },
      {
        "lineNumber": 1485,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"To view responses for a particular question, click on the question below. \""
      },
      {
        "lineNumber": 1486,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"To view response for a particular section, click the \u0027Edit View\u0027 button above and choose a section.\";"
      },
      {
        "lineNumber": 1487,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESULTS_QUESTIONVIEWWARNING \u003d"
      },
      {
        "lineNumber": 1488,
        "author": {
          "gitId": "-"
        },
        "content": "                \"This session seems to have a large number of responses. \""
      },
      {
        "lineNumber": 1489,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"It is recommended to view the results for one question at a time. \""
      },
      {
        "lineNumber": 1490,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"To view responses for a particular question, click on the question below.\";"
      },
      {
        "lineNumber": 1491,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ENROLL_LINE_EMPTY \u003d \"Please input at least one student detail.\";"
      },
      {
        "lineNumber": 1492,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ENROLL_LINES_PROBLEM_DETAIL_PREFIX \u003d \"\u0026bull;\";"
      },
      {
        "lineNumber": 1493,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ENROLL_LINES_PROBLEM \u003d"
      },
      {
        "lineNumber": 1494,
        "author": {
          "gitId": "-"
        },
        "content": "                \"\u003cp\u003e\u003cspan class\u003d\\\"bold\\\"\u003eProblem in line : \u003cspan class\u003d\\\"invalidLine\\\"\u003e%s\u003c/span\u003e\u003c/span\u003e\""
      },
      {
        "lineNumber": 1495,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\u003cbr\u003e\u003cspan class\u003d\\\"problemDetail\\\"\u003e\" + ENROLL_LINES_PROBLEM_DETAIL_PREFIX + \" %s\u003c/span\u003e\u003c/p\u003e\";"
      },
      {
        "lineNumber": 1496,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1497,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String EVENTUAL_CONSISTENCY_MESSAGE_STUDENT \u003d"
      },
      {
        "lineNumber": 1498,
        "author": {
          "gitId": "-"
        },
        "content": "                \"You have successfully joined the course %1$s. \""
      },
      {
        "lineNumber": 1499,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\u003cbr\u003eUpdating of the course data on our servers is currently in progress \""
      },
      {
        "lineNumber": 1500,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"and will be completed in a few minutes. \""
      },
      {
        "lineNumber": 1501,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\u003cbr\u003ePlease refresh this page in a few minutes to see the course %1$s in the list below.\";"
      },
      {
        "lineNumber": 1502,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1503,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String NULL_POST_PARAMETER_MESSAGE \u003d"
      },
      {
        "lineNumber": 1504,
        "author": {
          "gitId": "-"
        },
        "content": "                \"You have been redirected to this page due to a possible expiry of the previous login.\""
      },
      {
        "lineNumber": 1505,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\u003cbr\u003eIf you have previously typed some data and wish to retrieve it, \""
      },
      {
        "lineNumber": 1506,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"you may use the \u0027Back\u0027 button of your Browser to navigate to the \""
      },
      {
        "lineNumber": 1507,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"previous page containing the data you typed in.\";"
      },
      {
        "lineNumber": 1508,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1509,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_STATUS_DELETED \u003d \"The Instructor status has been deleted\";"
      },
      {
        "lineNumber": 1510,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_ACCOUNT_DELETED \u003d \"The Account has been deleted\";"
      },
      {
        "lineNumber": 1511,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_REMOVED_FROM_COURSE \u003d \"The Instructor has been removed from the Course\";"
      },
      {
        "lineNumber": 1512,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1513,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_EMPTY \u003d"
      },
      {
        "lineNumber": 1514,
        "author": {
          "gitId": "-"
        },
        "content": "                \"There are no students in this course. Click \u003ca href\u003d\\\"%s\\\"\u003ehere\u003c/a\u003e to enroll students.\";"
      },
      {
        "lineNumber": 1515,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERSISTENCE_ISSUE \u003d"
      },
      {
        "lineNumber": 1516,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Account creation is still in progress. Please reload the page\""
      },
      {
        "lineNumber": 1517,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" after sometime.\";"
      },
      {
        "lineNumber": 1518,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_NO_MODIFY_PERMISSION_FOR_ACTIVE_COURSES_SESSIONS \u003d"
      },
      {
        "lineNumber": 1519,
        "author": {
          "gitId": "-"
        },
        "content": "                \"No permission to modify any sessions in un-archived courses\";"
      },
      {
        "lineNumber": 1520,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_NO_ACTIVE_COURSES \u003d \"No un-archived courses\";"
      },
      {
        "lineNumber": 1521,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_NO_COURSE_AND_STUDENTS \u003d"
      },
      {
        "lineNumber": 1522,
        "author": {
          "gitId": "-"
        },
        "content": "                \"There are no course or students information to be displayed\";"
      },
      {
        "lineNumber": 1523,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_NO_STUDENT_RECORDS \u003d \"No records were found for this student\";"
      },
      {
        "lineNumber": 1524,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_SEARCH_NO_RESULTS \u003d \"No results found.\";"
      },
      {
        "lineNumber": 1525,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_SEARCH_TIPS \u003d"
      },
      {
        "lineNumber": 1526,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Search Tips:\u003cbr\u003e\""
      },
      {
        "lineNumber": 1527,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\u003cul\u003e\""
      },
      {
        "lineNumber": 1528,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"\u003cli\u003ePut more keywords to search for more precise results.\u003c/li\u003e\""
      },
      {
        "lineNumber": 1529,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"\u003cli\u003ePut quotation marks around words \u003cb\u003e\\\"[any word]\\\"\u003c/b\u003e\""
      },
      {
        "lineNumber": 1530,
        "author": {
          "gitId": "-"
        },
        "content": "                            + \" to search for an exact phrase in an exact order.\u003c/li\u003e\""
      },
      {
        "lineNumber": 1531,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\u003c/ul\u003e\";"
      },
      {
        "lineNumber": 1532,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1533,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String HINT_FOR_NEW_INSTRUCTOR \u003d \"New to TEAMMATES? You may wish to have a look at our \""
      },
      {
        "lineNumber": 1534,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\u003ca href\u003d\\\"/gettingStarted.jsp\\\" target\u003d\\\"_blank\\\"\u003eGetting Started Guide\u003c/a\u003e.\u003cbr\u003eA video tour\""
      },
      {
        "lineNumber": 1535,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" is also available in our \u003ca href\u003d\\\"/\\\" target\u003d\\\"_blank\\\"\u003ehome page\u003c/a\u003e.\";"
      },
      {
        "lineNumber": 1536,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1537,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String NEW_INSTRUCTOR_TEXT_MESSAGE \u003d \"New to TEAMMATES? You may wish to have a look at our \""
      },
      {
        "lineNumber": 1538,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Getting Started Guide.\\n\""
      },
      {
        "lineNumber": 1539,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"A video tour is also available in our home page.\";"
      },
      {
        "lineNumber": 1540,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1541,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String HINT_FOR_NO_SESSIONS_STUDENT \u003d"
      },
      {
        "lineNumber": 1542,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Currently, there are no open feedback sessions in the course %s. \""
      },
      {
        "lineNumber": 1543,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"When a session is open for submission you will be notified.\";"
      },
      {
        "lineNumber": 1544,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_UPDATE_PROFILE \u003d"
      },
      {
        "lineNumber": 1545,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Meanwhile, you can update your profile \u003ca href\u003d\\\"\" + Const.ActionURIs.STUDENT_PROFILE_PAGE + \"\\\"\u003ehere\u003c/a\u003e.\";"
      },
      {
        "lineNumber": 1546,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_UPDATE_PROFILE_SHORTNAME \u003d"
      },
      {
        "lineNumber": 1547,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Meanwhile, you can provide a name that you would prefer to be called by \""
      },
      {
        "lineNumber": 1548,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\u003ca href\u003d\\\"\" + Const.ActionURIs.STUDENT_PROFILE_PAGE + \"\\\"\u003ehere\u003c/a\u003e.\";"
      },
      {
        "lineNumber": 1549,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_UPDATE_PROFILE_EMAIL \u003d"
      },
      {
        "lineNumber": 1550,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Meanwhile, you can provide an email for your instructors to contact you beyond graduation \""
      },
      {
        "lineNumber": 1551,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\u003ca href\u003d\\\"\" + Const.ActionURIs.STUDENT_PROFILE_PAGE + \"\\\"\u003ehere\u003c/a\u003e.\";"
      },
      {
        "lineNumber": 1552,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_UPDATE_PROFILE_PICTURE \u003d"
      },
      {
        "lineNumber": 1553,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Meanwhile, you can upload a profile picture \""
      },
      {
        "lineNumber": 1554,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\u003ca href\u003d\\\"\" + Const.ActionURIs.STUDENT_PROFILE_PAGE + \"\\\"\u003ehere\u003c/a\u003e.\";"
      },
      {
        "lineNumber": 1555,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_UPDATE_PROFILE_MOREINFO \u003d"
      },
      {
        "lineNumber": 1556,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Meanwhile, you can provide more information about yourself \""
      },
      {
        "lineNumber": 1557,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\u003ca href\u003d\\\"\" + Const.ActionURIs.STUDENT_PROFILE_PAGE + \"\\\"\u003ehere\u003c/a\u003e.\";"
      },
      {
        "lineNumber": 1558,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_UPDATE_PROFILE_NATIONALITY \u003d"
      },
      {
        "lineNumber": 1559,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Meanwhile, you can provide your nationality \""
      },
      {
        "lineNumber": 1560,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\u003ca href\u003d\\\"\" + Const.ActionURIs.STUDENT_PROFILE_PAGE + \"\\\"\u003ehere\u003c/a\u003e.\";"
      },
      {
        "lineNumber": 1561,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1562,
        "author": {
          "gitId": "-"
        },
        "content": "        // Messages that are templates only"
      },
      {
        "lineNumber": 1563,
        "author": {
          "gitId": "-"
        },
        "content": "        /** Template String. Parameters: Student\u0027s name, Course ID */"
      },
      {
        "lineNumber": 1564,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_COURSE_JOIN_SUCCESSFUL \u003d \"You have been successfully added to the course %s.\";"
      },
      {
        "lineNumber": 1565,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1566,
        "author": {
          "gitId": "-"
        },
        "content": "        /** Template String. Parameters:  Course ID */"
      },
      {
        "lineNumber": 1567,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String NON_EXISTENT_STUDENT_ATTEMPTING_TO_JOIN_COURSE \u003d"
      },
      {
        "lineNumber": 1568,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Unable to join course %s as you are currently not in the student list of that course. \""
      },
      {
        "lineNumber": 1569,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Please contact your course instructor for assistance.\";"
      },
      {
        "lineNumber": 1570,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_NOT_A_PICTURE \u003d \"The file that you have uploaded is not a picture. \""
      },
      {
        "lineNumber": 1571,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Please upload a picture (usually it ends with .jpg or .png)\";"
      },
      {
        "lineNumber": 1572,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_NO_PICTURE_GIVEN \u003d \"Please specify a file to be uploaded.\";"
      },
      {
        "lineNumber": 1573,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_NOT_FOUND_FOR_RECORDS \u003d"
      },
      {
        "lineNumber": 1574,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The student you tried to view records for does not exist. \" + STUDENT_EVENTUAL_CONSISTENCY;"
      },
      {
        "lineNumber": 1575,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_NOT_FOUND_FOR_COURSE_DETAILS \u003d"
      },
      {
        "lineNumber": 1576,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The student you tried to view details for does not exist. \" + STUDENT_EVENTUAL_CONSISTENCY;"
      },
      {
        "lineNumber": 1577,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_PICTURE_EDIT_FAILED \u003d"
      },
      {
        "lineNumber": 1578,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The photo that was edited did not belong to the user. \""
      },
      {
        "lineNumber": 1579,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Please upload another picture to begin editing\";"
      },
      {
        "lineNumber": 1580,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_NOT_JOINED_YET_FOR_RECORDS \u003d"
      },
      {
        "lineNumber": 1581,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Normally, we would show the student’s profile here. \""
      },
      {
        "lineNumber": 1582,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"However, this student has not created a profile yet\";"
      },
      {
        "lineNumber": 1583,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_UNACCESSIBLE_TO_INSTRUCTOR \u003d"
      },
      {
        "lineNumber": 1584,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Normally, we would show the student’s profile here. \""
      },
      {
        "lineNumber": 1585,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"However, you do not have access to view this student\u0027s profile\";"
      },
      {
        "lineNumber": 1586,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1587,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String UNREGISTERED_STUDENT_MESSAGE \u003d \"You may submit feedback for sessions \""
      },
      {
        "lineNumber": 1588,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"that are currently open and view results without logging in. To access other features \""
      },
      {
        "lineNumber": 1589,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"you need \u003ca href\u003d\u0027%s\u0027 class\u003d\u0027link\u0027\u003eto login using a Google account\u003c/a\u003e (recommended).\";"
      },
      {
        "lineNumber": 1590,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String UNREGISTERED_STUDENT \u003d \"You are submitting feedback as \""
      },
      {
        "lineNumber": 1591,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\u003cspan class\u003d\u0027text-danger text-bold text-large\u0027\u003e%s\u003c/span\u003e. \""
      },
      {
        "lineNumber": 1592,
        "author": {
          "gitId": "-"
        },
        "content": "                + UNREGISTERED_STUDENT_MESSAGE;"
      },
      {
        "lineNumber": 1593,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String UNREGISTERED_STUDENT_RESULTS \u003d \"You are viewing feedback results as \""
      },
      {
        "lineNumber": 1594,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\u003cspan class\u003d\u0027text-danger text-bold text-large\u0027\u003e%s\u003c/span\u003e. \""
      },
      {
        "lineNumber": 1595,
        "author": {
          "gitId": "-"
        },
        "content": "                + UNREGISTERED_STUDENT_MESSAGE;"
      },
      {
        "lineNumber": 1596,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_LOG_INSTRUCTOR_COURSE_ENROLL_PAGE_LOAD \u003d"
      },
      {
        "lineNumber": 1597,
        "author": {
          "gitId": "-"
        },
        "content": "                \"instructorCourseEnroll Page Load\" + Const.HTML_BR_TAG"
      },
      {
        "lineNumber": 1598,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Enrollment for Course \u003cspan class\u003d\\\"bold\\\"\u003e[%s]\u003c/span\u003e\";"
      },
      {
        "lineNumber": 1599,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1600,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String AMBIGUOUS_LOCAL_DATE_TIME_GAP \u003d"
      },
      {
        "lineNumber": 1601,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The %s, %s, falls within the gap period when clocks spring forward at the start of DST. \""
      },
      {
        "lineNumber": 1602,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \"It was resolved to %s.\";"
      },
      {
        "lineNumber": 1603,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1604,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String AMBIGUOUS_LOCAL_DATE_TIME_OVERLAP \u003d"
      },
      {
        "lineNumber": 1605,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The %s, %s, falls within the overlap period when clocks fall back at the end of DST. \""
      },
      {
        "lineNumber": 1606,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \"It can refer to %s or %s. It was resolved to %s.\";"
      },
      {
        "lineNumber": 1607,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1608,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ERROR_FEEDBACK_SUBMIT_SUCCESS \u003d \"Your error report has been recorded. \""
      },
      {
        "lineNumber": 1609,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"We will follow up with you in due course, usually, within 24 hours.\";"
      },
      {
        "lineNumber": 1610,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1611,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1612,
        "author": {
          "gitId": "-"
        },
        "content": "    /* These indicate status of an operation, but they are not shown to the user */"
      },
      {
        "lineNumber": 1613,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class StatusCodes {"
      },
      {
        "lineNumber": 1614,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1615,
        "author": {
          "gitId": "-"
        },
        "content": "        // Backdoor responses"
      },
      {
        "lineNumber": 1616,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String BACKDOOR_STATUS_SUCCESS \u003d \"[BACKDOOR_STATUS_SUCCESS]\";"
      },
      {
        "lineNumber": 1617,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String BACKDOOR_STATUS_FAILURE \u003d \"[BACKDOOR_STATUS_FAILURE]\";"
      },
      {
        "lineNumber": 1618,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1619,
        "author": {
          "gitId": "-"
        },
        "content": "        // General Error codes"
      },
      {
        "lineNumber": 1620,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ALREADY_JOINED \u003d \"ERRORCODE_ALREADY_JOINED\";"
      },
      {
        "lineNumber": 1621,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String NULL_PARAMETER \u003d \"ERRORCODE_NULL_PARAMETER\";"
      },
      {
        "lineNumber": 1622,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INVALID_KEY \u003d \"ERRORCODE_INVALID_KEY\";"
      },
      {
        "lineNumber": 1623,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String KEY_BELONGS_TO_DIFFERENT_USER \u003d \"ERRORCODE_KEY_BELONGS_TO_DIFFERENT_USER\";"
      },
      {
        "lineNumber": 1624,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1625,
        "author": {
          "gitId": "-"
        },
        "content": "        // Error message used across DB level"
      },
      {
        "lineNumber": 1626,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String DBLEVEL_NULL_INPUT \u003d \"Supplied parameter was null\";"
      },
      {
        "lineNumber": 1627,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1628,
        "author": {
          "gitId": "-"
        },
        "content": "        // POST parameter null message"
      },
      {
        "lineNumber": 1629,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String NULL_POST_PARAMETER \u003d \"The %s POST parameter is null%n\";"
      },
      {
        "lineNumber": 1630,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1631,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1632,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class PlaceholderText {"
      },
      {
        "lineNumber": 1633,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION \u003d \"A concise version of the question e.g. \""
      },
      {
        "lineNumber": 1634,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\u0026quot;How well did the team member communicate?\u0026quot;\";"
      },
      {
        "lineNumber": 1635,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_DESCRIPTION \u003d \"More details about the question e.g. \u0026quot;In answering \""
      },
      {
        "lineNumber": 1636,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"the question, do consider communications made informally within the team, and formal communications with \""
      },
      {
        "lineNumber": 1637,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"the instructors and tutors.\u0026quot;\";"
      },
      {
        "lineNumber": 1638,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1639,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1640,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1641,
        "author": {
          "gitId": "-"
        },
        "content": "     * These are constants that may be used in {@link ActivityLogEntry}."
      },
      {
        "lineNumber": 1642,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1643,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class ActivityLog {"
      },
      {
        "lineNumber": 1644,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String TEAMMATESLOG \u003d \"TEAMMATESLOG\";"
      },
      {
        "lineNumber": 1645,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1646,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String UNKNOWN \u003d \"Unknown\";"
      },
      {
        "lineNumber": 1647,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1648,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ROLE_ADMIN \u003d \"Admin\";"
      },
      {
        "lineNumber": 1649,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ROLE_INSTRUCTOR \u003d \"Instructor\";"
      },
      {
        "lineNumber": 1650,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ROLE_STUDENT \u003d \"Student\";"
      },
      {
        "lineNumber": 1651,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ROLE_AUTO \u003d \"Auto\";"
      },
      {
        "lineNumber": 1652,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ROLE_UNREGISTERED \u003d \"Unregistered\";"
      },
      {
        "lineNumber": 1653,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ROLE_MASQUERADE_POSTFIX \u003d \"(M)\";"
      },
      {
        "lineNumber": 1654,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1655,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String PREFIX_STUDENT_PAGE \u003d \"student\";"
      },
      {
        "lineNumber": 1656,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String PREFIX_INSTRUCTOR_PAGE \u003d \"instructor\";"
      },
      {
        "lineNumber": 1657,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String PREFIX_AUTO_PAGE \u003d \"/auto\";"
      },
      {
        "lineNumber": 1658,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1659,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String AUTH_NOT_LOGIN \u003d \"Unknown\";"
      },
      {
        "lineNumber": 1660,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1661,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FIELD_SEPARATOR \u003d \"|||\";"
      },
      {
        "lineNumber": 1662,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FIELD_CONNECTOR \u003d \"%\";"
      },
      {
        "lineNumber": 1663,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1664,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String TIME_FORMAT_LOGID \u003d \"yyyyMMddHHmmssSS\";"
      },
      {
        "lineNumber": 1665,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1666,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String TESTING_DATA_EMAIL_POSTFIX \u003d \".tmt\";"
      },
      {
        "lineNumber": 1667,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1668,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final int TIME_TAKEN_EXPECTED \u003d 10000;"
      },
      {
        "lineNumber": 1669,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final int TIME_TAKEN_MODERATE \u003d 20000;"
      },
      {
        "lineNumber": 1670,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1671,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MESSAGE_ERROR_ACTION_NAME \u003d \"Error when getting ActionName for requestUrl : %1$s\";"
      },
      {
        "lineNumber": 1672,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MESSAGE_ERROR_LOG_MESSAGE_FORMAT \u003d \"Log message format not as expected: %1$s\";"
      },
      {
        "lineNumber": 1673,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1674,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1675,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1676,
        "author": {
          "gitId": "-"
        },
        "content": "     * These are constants that may be used in {@link EmailLogEntry}."
      },
      {
        "lineNumber": 1677,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1678,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class EmailLog {"
      },
      {
        "lineNumber": 1679,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String TEAMMATES_EMAIL_LOG \u003d \"TEAMMATESEMAILLOG\";"
      },
      {
        "lineNumber": 1680,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FIELD_SEPARATOR \u003d \"|||\";"
      },
      {
        "lineNumber": 1681,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1682,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String TEST_DATA_POSTFIX \u003d \".tmt\";"
      },
      {
        "lineNumber": 1683,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1684,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ERROR_LOG_FORMAT \u003d \"Email log message is not in expected format.\""
      },
      {
        "lineNumber": 1685,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" Raw log message: %1$s\";"
      },
      {
        "lineNumber": 1686,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1687,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1688,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalessr": 30,
      "-": 1658
    }
  },
  {
    "path": "src/main/java/teammates/logic/api/Logic.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.logic.api;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import com.google.appengine.api.blobstore.BlobKey;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.CourseDetailsBundle;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.CourseEnrollmentResult;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.CourseRoster;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.CourseSummaryBundle;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackResponseCommentSearchResultBundle;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackSessionDetailsBundle;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackSessionQuestionsBundle;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackSessionResponseStatus;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackSessionResultsBundle;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.InstructorPrivileges;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.InstructorSearchResultBundle;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.SectionDetailsBundle;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.StudentEnrollDetails;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.StudentSearchResultBundle;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.TeamDetailsBundle;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.AccountAttributes;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.AdminEmailAttributes;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.CourseAttributes;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentAttributes;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentProfileAttributes;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EnrollException;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityAlreadyExistsException;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityDoesNotExistException;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.ExceedingRangeException;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.InvalidParametersException;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.JoinCourseException;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Assumption;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.GoogleCloudStorageHelper;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.AccountsLogic;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.AdminEmailsLogic;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.CoursesLogic;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.FeedbackQuestionsLogic;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.FeedbackResponseCommentsLogic;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.FeedbackResponsesLogic;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.FeedbackSessionsLogic;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.InstructorsLogic;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.ProfilesLogic;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.StudentsLogic;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": " * Provides the business logic for production usage of the system."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": " * \u003cp\u003eThis is a Facade class which simply forwards the method to internal classes."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "public class Logic {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final AccountsLogic accountsLogic \u003d AccountsLogic.inst();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final StudentsLogic studentsLogic \u003d StudentsLogic.inst();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final InstructorsLogic instructorsLogic \u003d InstructorsLogic.inst();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final CoursesLogic coursesLogic \u003d CoursesLogic.inst();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final FeedbackSessionsLogic feedbackSessionsLogic \u003d FeedbackSessionsLogic.inst();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final FeedbackQuestionsLogic feedbackQuestionsLogic \u003d FeedbackQuestionsLogic.inst();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final FeedbackResponsesLogic feedbackResponsesLogic \u003d FeedbackResponsesLogic.inst();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final FeedbackResponseCommentsLogic feedbackResponseCommentsLogic \u003d"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackResponseCommentsLogic.inst();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final AdminEmailsLogic adminEmailsLogic \u003d AdminEmailsLogic.inst();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final ProfilesLogic profilesLogic \u003d ProfilesLogic.inst();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new Account based on given values. If a profile is not given,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     * a default empty profile is created for the user\u003cbr\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    public void createAccount(String googleId, String name, boolean isInstructor, String email, String institute,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                              StudentProfileAttributes studentProfileParam) throws InvalidParametersException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(name);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(isInstructor);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(institute);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentProfileAttributes studentProfile \u003d studentProfileParam;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        if (studentProfile \u003d\u003d null) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            studentProfile \u003d StudentProfileAttributes.builder(googleId).build();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        AccountAttributes accountToAdd \u003d AccountAttributes.builder()"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                .withGoogleId(googleId)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                .withName(name)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                .withEmail(email)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                .withInstitute(institute)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                .withIsInstructor(isInstructor)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                .withStudentProfileAttributes(studentProfile)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        accountsLogic.createAccount(accountToAdd);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "     * This is just for legacy code that creates an Account without the profile parameter"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    public void createAccount(String googleId, String name, boolean isInstructor, String email, String institute)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        createAccount(googleId, name, isInstructor, email, institute, null);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    public AccountAttributes getAccount(String googleId) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        return accountsLogic.getAccount(googleId, false);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    public AccountAttributes getAccount(String googleId, boolean retrieveStudentProfile) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        return accountsLogic.getAccount(googleId, retrieveStudentProfile);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Details of accounts with instruction privileges. Returns empty"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "     *         list if no such accounts are found."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    @Deprecated //Not scalable."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cAccountAttributes\u003e getInstructorAccounts() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        return accountsLogic.getInstructorAccounts();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null.\u003cbr\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "     * * {@code newAccountAttributes} represents an existing account."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updateAccount(AccountAttributes newAccountAttributes)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(newAccountAttributes);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        accountsLogic.updateAccount(newAccountAttributes);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null.\u003cbr\u003e"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "     * * {@code newAccountAttributes} represents an existing account."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updateStudentProfile(StudentProfileAttributes newStudentProfileAttributes)"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(newStudentProfileAttributes);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        profilesLogic.updateStudentProfile(newStudentProfileAttributes);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null.\u003cbr\u003e"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "     * * {@code newAccountAttributes} represents an existing account."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updateStudentProfilePicture(String googleId, String newPictureKey)"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(newPictureKey);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        profilesLogic.updateStudentProfilePicture(googleId, newPictureKey);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes both instructor and student privileges."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "     * Does not delete courses. Can result in orphan courses"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "     * (to be rectified in future)."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "     * Fails silently if no such account. \u003cbr\u003e"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteAccount(String googleId) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        accountsLogic.deleteAccountCascade(googleId);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteStudentProfilePicture(String googleId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        profilesLogic.deleteStudentProfilePicture(googleId);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deletePicture(BlobKey key) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(key);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        profilesLogic.deletePicture(key);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates an instructor and an new account if the instructor doesn\u0027t not have account yet.\u003cbr\u003e"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "     * Used as a shorthand when the account entity is not important and is"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "     * only needed for completeness\u003cbr\u003e"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cb\u003eNote: Now used for the purpose of testing only.\u003c/b\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "    @Deprecated"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "    public void createInstructorAccount(String googleId, String courseId, String name, String email,"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "                                        Boolean isArchived, String roleParam, boolean isDisplayedToStudents,"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "                                        String displayedNameParam, String privileges, String institute)"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityAlreadyExistsException, InvalidParametersException {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(name);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(institute);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        if (accountsLogic.getAccount(googleId) \u003d\u003d null) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "            AccountAttributes account \u003d AccountAttributes.builder()"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "                    .withGoogleId(googleId)"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "                    .withName(name)"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "                    .withEmail(email)"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "                    .withInstitute(institute)"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "                    .withIsInstructor(true)"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "                    .withDefaultStudentProfileAttributes(googleId)"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "                    .build();"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "            accountsLogic.createAccount(account);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "        // In case when roleParam is null, default values used both for role and for privileges."
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        // If privileges is null and roleParam is not null, for privileges will be created value based on roleParam"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor \u003d InstructorAttributes.builder(googleId, courseId, name, email)"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "                .withRole(roleParam).withDisplayedName(displayedNameParam)"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "                .withPrivileges(privileges).withIsDisplayedToStudents(isDisplayedToStudents)"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "                .withIsArchived(isArchived)"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorsLogic.createInstructor(instructor);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "     * Add an instructor for a course. \u003cbr\u003e"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "    @Deprecated"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addInstructor(String courseId, String name, String email, String role)"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(name);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor \u003d InstructorAttributes.builder(null, courseId, name, email)"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "                .withRole(role).withPrivileges(new InstructorPrivileges(role))"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorsLogic.createInstructor(instructor);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorAttributes createInstructor(InstructorAttributes instructor)"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.createInstructor(instructor);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "     * This method should be used by admin only since the searching does not restrict the"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "     * visibility according to the logged-in user\u0027s google ID. This is used by admin to"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "     * search instructors in the whole system."
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Null if no match found."
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorSearchResultBundle searchInstructorsInWholeSystem(String queryString) {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(queryString);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.searchInstructorsInWholeSystem(queryString);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "     * Batch creates or updates documents for the given Instructors."
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see InstructorsLogic#putDocuments(List)"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "    public void putInstructorDocuments(List\u003cInstructorAttributes\u003e instructors) {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorsLogic.putDocuments(instructors);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "     * Removes document for the given Instructor."
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see InstructorsLogic#deleteDocument(InstructorAttributes)"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteDocument(InstructorAttributes instructor) {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorsLogic.deleteDocument(instructor);"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return null if not found."
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorAttributes getInstructorForEmail(String courseId, String email) {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.getInstructorForEmail(courseId, email);"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return null if not found."
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorAttributes getInstructorById(String courseId, String email) {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.getInstructorById(courseId, email);"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return null if not found."
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorAttributes getInstructorForGoogleId(String courseId, String googleId) {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.getInstructorForGoogleId(courseId, googleId);"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return null if not found."
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorAttributes getInstructorForRegistrationKey(String encryptedKey) {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(encryptedKey);"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.getInstructorForRegistrationKey(encryptedKey);"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Empty list if none found."
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cInstructorAttributes\u003e getInstructorsForGoogleId(String googleId) {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.getInstructorsForGoogleId(googleId);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cInstructorAttributes\u003e getInstructorsForGoogleId(String googleId, boolean omitArchived) {"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.getInstructorsForGoogleId(googleId, omitArchived);"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Empty list if none found."
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cInstructorAttributes\u003e getInstructorsForCourse(String courseId) {"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.getInstructorsForCourse(courseId);"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "     * Get the encrypted registration key for the instructor."
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getEncryptedKeyForInstructor(String courseId, String email)"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.getEncryptedKeyForInstructor(courseId, email);"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getAllOpenFeedbackSessions(Instant rangeStart, Instant rangeEnd) {"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getAllOpenFeedbackSessions(rangeStart, rangeEnd);"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if this user has instructor privileges."
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isInstructor(String googleId) {"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "        return accountsLogic.isAccountAnInstructor(googleId);"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if this user is an instructor of the course."
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isInstructorOfCourse(String googleId, String courseId) {"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.isGoogleIdOfInstructorOfCourse(googleId, courseId);"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if this email belongs to an instructor of the course."
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isInstructorEmailOfCourse(String email, String courseId) {"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.isEmailOfInstructorOfCourse(email, courseId);"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the instructor is a new user."
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see InstructorsLogic#isNewInstructor(String)"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isNewInstructor(String googleId) {"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.isNewInstructor(googleId);"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "     * Update the name and email address of an instructor with the specific Google ID."
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param instr InstructorAttributes object containing the details to be updated"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updateInstructorByGoogleId(String googleId, InstructorAttributes instr)"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instr);"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorsLogic.updateInstructorByGoogleId(googleId, instr);"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updateInstructorByEmail(String email, InstructorAttributes instr)"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instr);"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorsLogic.updateInstructorByEmail(email, instr);"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "     * Make the instructor join the course, i.e. associate the Google ID to the instructor.\u003cbr\u003e"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "     * Create an account for the instructor if there is no account exist for him."
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "    public void joinCourseForInstructor(String encryptedKey, String googleId, String institute)"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "            throws JoinCourseException, InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(encryptedKey);"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(institute);"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "        accountsLogic.joinCourseForInstructor(encryptedKey, googleId, institute);"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "    public void joinCourseForInstructor(String encryptedKey, String googleId)"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "            throws JoinCourseException, InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(encryptedKey);"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "        accountsLogic.joinCourseForInstructor(encryptedKey, googleId);"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "    public void verifyInputForAdminHomePage(String name, String institute, String email)"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException {"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e invalidityInfo \u003d instructorsLogic.getInvalidityInfoForNewInstructorData(name,"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                              institute, email);"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!invalidityInfo.isEmpty()) {"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new InvalidParametersException(invalidityInfo);"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "     * Removes instructor access but does not delete the account."
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "     * The account will continue to have student access. \u003cbr\u003e"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "     * Fails silently if no match found.\u003cbr\u003e"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "    public void downgradeInstructorToStudentCascade(String googleId) {"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "        accountsLogic.downgradeInstructorToStudentCascade(googleId);"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "     * Fails silently if no match found."
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteInstructor(String courseId, String email) {"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorsLogic.deleteInstructorCascade(courseId, email);"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a course and an instructor for it. \u003cbr\u003e"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null. \u003cbr\u003e"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "     * * {@code instructorGoogleId} already has instructor privileges."
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "    public void createCourseAndInstructor(String instructorGoogleId, String courseId, String courseName,"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "                                          String courseTimeZone)"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityAlreadyExistsException, InvalidParametersException {"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructorGoogleId);"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseName);"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseTimeZone);"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesLogic.createCourseAndInstructor(instructorGoogleId, courseId, courseName, courseTimeZone);"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return null if not found."
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "    public CourseAttributes getCourse(String courseId) {"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCourse(courseId);"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a detailed version of course data. \u003cbr\u003e"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "    public CourseDetailsBundle getCourseDetails(String courseId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCourseSummary(courseId);"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a course data, including its feedback sessions, according to the instructor passed in.\u003cbr\u003e"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "    public CourseSummaryBundle getCourseSummaryWithFeedbackSessions(InstructorAttributes instructor)"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructor);"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCourseSummaryWithFeedbackSessionsForInstructor(instructor);"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cCourseAttributes\u003e getCoursesForStudentAccount(String googleId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCoursesForStudentAccount(googleId);"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "     * Omits archived courses if omitArchived \u003d\u003d true\u003cbr\u003e"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return A less detailed version of courses for this instructor without stats."
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "     *         Returns an empty list if none found."
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "    public Map\u003cString, CourseSummaryBundle\u003e getCourseSummariesWithoutStatsForInstructor(String googleId,"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                            boolean omitArchived) {"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCoursesSummaryWithoutStatsForInstructor(googleId, omitArchived);"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return A less detailed version of courses for this instructor."
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "     *         Returns an empty list if none found."
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "    public Map\u003cString, CourseDetailsBundle\u003e getCourseSummariesForInstructor(String googleId)"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCourseSummariesForInstructor(googleId, false);"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return A less detailed version of courses for the specified instructor attributes."
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "     *         Returns an empty list if none found."
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "    public Map\u003cString, CourseDetailsBundle\u003e getCourseSummariesForInstructors(List\u003cInstructorAttributes\u003e instructorList) {"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructorList);"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCourseSummariesForInstructor(instructorList);"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Details of courses the student is in. CourseData objects"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "     *         returned contain details of feedback sessions too (except the ones"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "     *         still AWAITING)."
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cCourseDetailsBundle\u003e getCourseDetailsListForStudent(String googleId)"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCourseDetailsListForStudent(googleId);"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Courses the instructor is in."
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cCourseAttributes\u003e getCoursesForInstructor(String googleId) {"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "        return getCoursesForInstructor(googleId, false);"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "     * Omits archived courses if omitArchived \u003d\u003d true\u003cbr\u003e"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Courses the instructor is in."
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cCourseAttributes\u003e getCoursesForInstructor(String googleId, boolean omitArchived) {"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCoursesForInstructor(googleId, omitArchived);"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     * @return Courses the given instructors is in except for courses in recycle bin."
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cCourseAttributes\u003e getCoursesForInstructor(List\u003cInstructorAttributes\u003e instructorList) {"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructorList);"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCoursesForInstructor(instructorList);"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     * @return Courses in Recycle Bin that the given instructors is in."
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public List\u003cCourseAttributes\u003e getRecoveryCoursesForInstructors(List\u003cInstructorAttributes\u003e instructorList) {"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        Assumption.assertNotNull(instructorList);"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        return coursesLogic.getRecoveryCoursesForInstructors(instructorList);"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public CourseAttributes getRecoveryCourseForInstructor(InstructorAttributes instructor) {"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        Assumption.assertNotNull(instructor);"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        return coursesLogic.getRecoveryCourseForInstructor(instructor);"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates the details of a course."
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see CoursesLogic#updateCourse(String, String, String)"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updateCourse(String courseId, String courseName, String courseTimeZone)"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseName);"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseTimeZone);"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesLogic.updateCourse(courseId, courseName, courseTimeZone);"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": "     * Change the archive status of a course for a instructor.\u003cbr\u003e"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param courseId The course of which the archive status is to be changed"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param archiveStatus The archive status to be set"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setArchiveStatusOfInstructor(String googleId, String courseId, boolean archiveStatus)"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(archiveStatus);"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorsLogic.setArchiveStatusOfInstructor(googleId, courseId, archiveStatus);"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     * Permanently deletes a course and all data related to the course"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     * (instructors, students, feedback sessions) from Recycle Bin."
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": "     * Fails silently if no such account. \u003cbr\u003e"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteCourse(String courseId) {"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesLogic.deleteCourseCascade(courseId);"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     * Permanently deletes all courses and all data related to these courses"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     * (instructors, students, feedback sessions) from Recycle Bin."
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public void deleteAllCourses(List\u003cInstructorAttributes\u003e instructorList) {"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        Assumption.assertNotNull(instructorList);"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        coursesLogic.deleteAllCoursesCascade(instructorList);"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     * Moves a course to Recycle Bin by its given corresponding ID."
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     * All data related will not be deleted."
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public void moveCourseToRecovery(String courseId) throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        coursesLogic.moveCourseToRecovery(courseId);"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     * Restores a course and all data related to the course from Recycle Bin by"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     * its given corresponding ID."
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public void restoreCourseFromRecovery(String courseId)"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        coursesLogic.restoreCourseFromRecovery(courseId);"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     * Restores all courses and all data related to these courses from Recycle Bin."
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public void restoreAllCoursesFromRecovery(List\u003cInstructorAttributes\u003e instructorList)"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        Assumption.assertNotNull(instructorList);"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        coursesLogic.restoreAllCoursesFromRecovery(instructorList);"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a student. \u003cbr\u003e"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": "    public void createStudent(StudentAttributes student)"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityAlreadyExistsException, InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(student);"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsLogic.createStudentCascade(student);"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": "    public void createStudentWithoutDocument(StudentAttributes student) throws EntityAlreadyExistsException,"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                               InvalidParametersException,"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                               EntityDoesNotExistException {"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(student);"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsLogic.createStudentCascadeWithoutDocument(student);"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": "     * Search for students. Preconditions: all parameters are non-null."
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param instructors   a list of InstructorAttributes associated to a googleId,"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": "     *                      used for filtering of search result"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Null if no match found"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentSearchResultBundle searchStudents(String queryString, List\u003cInstructorAttributes\u003e instructors) {"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(queryString);"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructors);"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.searchStudents(queryString, instructors);"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": "     * This method should be used by admin only since the searching does not restrict the"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": "     * visibility according to the logged-in user\u0027s google ID. This is used by admin to"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": "     * search students in the whole system."
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Null if no match found."
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentSearchResultBundle searchStudentsInWholeSystem(String queryString) {"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(queryString);"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.searchStudentsInWholeSystem(queryString);"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Null if no match found."
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentAttributes getStudentForRegistrationKey(String registrationKey) {"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(registrationKey);"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getStudentForRegistrationKey(registrationKey);"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Null if no match found."
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentAttributes getStudentForEmail(String courseId, String email) {"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getStudentForEmail(courseId, email);"
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Null if no match found."
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentAttributes getStudentForGoogleId(String courseId, String googleId) {"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getStudentForCourseIdAndGoogleId(courseId, googleId);"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Null if no match found."
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentProfileAttributes getStudentProfile(String googleId) {"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "-"
        },
        "content": "        return profilesLogic.getStudentProfile(googleId);"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Empty list if no match found."
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cStudentAttributes\u003e getStudentsForGoogleId(String googleId) {"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getStudentsForGoogleId(googleId);"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Empty list if none found."
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cStudentAttributes\u003e getStudentsForCourse(String courseId) {"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getStudentsForCourse(courseId);"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Empty list if none found."
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cStudentAttributes\u003e getStudentsForSection(String section, String courseId) {"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(section);"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getStudentsForSection(section, courseId);"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Empty list if none found."
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cStudentAttributes\u003e getStudentsForTeam(String team, String courseId) {"
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(team);"
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getStudentsForTeam(team, courseId);"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a list of section names for the course with ID courseId."
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see CoursesLogic#getSectionsNameForCourse(String)"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cString\u003e getSectionNamesForCourse(String courseId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getSectionsNameForCourse(courseId);"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a list of section names for the specified course."
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see CoursesLogic#getSectionsNameForCourse(CourseAttributes)"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cString\u003e getSectionNamesForCourse(CourseAttributes course) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(course);"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getSectionsNameForCourse(course);"
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a list of {@link SectionDetailsBundle} for a given course using courseId."
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see CoursesLogic#getSectionsForCourseWithoutStats(String)"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cSectionDetailsBundle\u003e getSectionsForCourse(String courseId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getSectionsForCourseWithoutStats(courseId);"
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cTeamDetailsBundle\u003e getTeamsForCourse(String courseId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getTeamsForCourse(courseId);"
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "-"
        },
        "content": "    public TeamDetailsBundle getTeamDetailsForStudent(StudentAttributes student) {"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(student);"
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getTeamDetailsForStudent(student);"
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getEncryptedKeyForStudent(String courseId, String email) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getEncryptedKeyForStudent(courseId, email);"
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "-"
        },
        "content": "    public void resetStudentGoogleId(String originalEmail, String courseId) throws InvalidParametersException,"
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                   EntityDoesNotExistException {"
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(originalEmail);"
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsLogic.resetStudentGoogleId(originalEmail, courseId, true);"
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "-"
        },
        "content": "     * All attributes except courseId be changed. Trying to change courseId will"
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "-"
        },
        "content": "     * be treated as trying to edit a student in a different course.\u003cbr\u003e"
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "-"
        },
        "content": "     * Changing team name will not delete existing submissions under that team \u003cbr\u003e"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "-"
        },
        "content": "     * Cascade logic: Email changed-\u003e changes email in all existing submissions \u003cbr\u003e"
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "-"
        },
        "content": "     * Team changed-\u003e creates new submissions for the new team, deletes"
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "-"
        },
        "content": "     * submissions for previous team structure. \u003cbr\u003e"
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updateStudent(String originalEmail, StudentAttributes student)"
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(originalEmail);"
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(student);"
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsLogic.updateStudentCascade(originalEmail, student);"
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updateStudentWithoutDocument(String originalEmail, StudentAttributes student)"
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(originalEmail);"
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(student);"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsLogic.updateStudentCascadeWithoutDocument(originalEmail, student);"
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "-"
        },
        "content": "     * Make the student join the course, i.e. associate the Google ID to the student.\u003cbr\u003e"
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "-"
        },
        "content": "     * Create an account for the student if there is no account exist for him."
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param key the encrypted registration key"
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "-"
        },
        "content": "    public void joinCourseForStudent(String key, String googleId) throws JoinCourseException, InvalidParametersException {"
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(key);"
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "-"
        },
        "content": "        accountsLogic.joinCourseForStudent(key, googleId);"
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "-"
        },
        "content": "     * Enrolls new students in the course or modifies existing students. But it"
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "-"
        },
        "content": "     * will not delete any students. It will not edit email address either. If"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "-"
        },
        "content": "     * an existing student was enrolled with a different email address, that"
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "-"
        },
        "content": "     * student will be treated as a new student.\u003cbr\u003e"
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "-"
        },
        "content": "     * If there is an error in the enrollLines, there will be no changes to the"
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "-"
        },
        "content": "     * datastore \u003cbr\u003e"
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return StudentData objects in the return value contains the status of"
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "-"
        },
        "content": "     *         enrollment. It also includes data for other students in the"
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "-"
        },
        "content": "     *         course that were not touched by the operation."
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "-"
        },
        "content": "    public CourseEnrollmentResult enrollStudents(String enrollLines, String courseId)"
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EnrollException, EntityDoesNotExistException, InvalidParametersException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(enrollLines);"
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.enrollStudents(enrollLines.trim(), courseId);"
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cStudentAttributes\u003e getUnregisteredStudentsForCourse(String courseId) {"
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getUnregisteredStudentsForCourse(courseId);"
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isFeedbackSessionCompletedByInstructor(FeedbackSessionAttributes fsa, String userEmail)"
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(fsa);"
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.isFeedbackSessionCompletedByInstructor(fsa, userEmail);"
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isFeedbackSessionCompletedByStudent(FeedbackSessionAttributes fsa, String userEmail) {"
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(fsa);"
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.isFeedbackSessionCompletedByStudent(fsa, userEmail);"
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes the student from the course including any submissions to/from"
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "-"
        },
        "content": "     * for this student in this course."
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "-"
        },
        "content": "     * Fails silently if no match found. \u003cbr\u003e"
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteStudent(String courseId, String studentEmail) {"
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(studentEmail);"
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsLogic.deleteStudentCascade(courseId, studentEmail);"
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes all the students in the course."
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param courseId course id for the students"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteAllStudentsInCourse(String courseId) {"
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsLogic.deleteAllStudentsInCourse(courseId);"
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteStudentWithoutDocument(String courseId, String studentEmail) {"
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(studentEmail);"
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsLogic.deleteStudentCascadeWithoutDocument(courseId, studentEmail);"
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "-"
        },
        "content": "     *  Checks if a course has sections for each team"
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "-"
        },
        "content": "     *  Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "-"
        },
        "content": "     *  * All parameters are non-null."
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean hasIndicatedSections(String courseId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.hasIndicatedSections(courseId);"
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "-"
        },
        "content": "     * Validates sections for any limit violations and teams for any team name violations."
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see StudentsLogic#validateSectionsAndTeams(List, String)"
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "-"
        },
        "content": "    public void validateSectionsAndTeams(List\u003cStudentAttributes\u003e studentList, String courseId) throws EnrollException {"
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(studentList);"
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsLogic.validateSectionsAndTeams(studentList, courseId);"
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "-"
        },
        "content": "     * Validates teams for any team name violations."
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see StudentsLogic#validateTeams(List, String)"
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "-"
        },
        "content": "    public void validateTeams(List\u003cStudentAttributes\u003e studentList, String courseId) throws EnrollException {"
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(studentList);"
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsLogic.validateTeams(studentList, courseId);"
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "-"
        },
        "content": "     * Batch creates or updates search documents for the given students."
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "-"
        },
        "content": "    public void putStudentDocuments(List\u003cStudentAttributes\u003e students) {"
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsLogic.putDocuments(students);"
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "-"
        },
        "content": "     * Generates students list of a course in CSV format. \u003cbr\u003e"
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null. \u003cbr\u003e"
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getCourseStudentListAsCsv(String courseId, String googleId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCourseStudentListAsCsv(courseId, googleId);"
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "-"
        },
        "content": "    public void createFeedbackSession(FeedbackSessionAttributes feedbackSession)"
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityAlreadyExistsException, InvalidParametersException {"
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSession);"
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsLogic.createFeedbackSession(feedbackSession);"
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionAttributes copyFeedbackSession(String newFeedbackSessionName, String newCourseId,"
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "-"
        },
        "content": "            ZoneId newTimeZone, String feedbackSessionName, String courseId, String instructorEmail)"
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityAlreadyExistsException, InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(newFeedbackSessionName);"
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(newCourseId);"
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(newTimeZone);"
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructorEmail);"
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.copyFeedbackSession(newFeedbackSessionName, newCourseId, newTimeZone,"
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionName, courseId, instructorEmail);"
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionAttributes getFeedbackSession(String feedbackSessionName, String courseId) {"
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsForCourse(String courseId) {"
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionsForCourse(courseId);"
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1219,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1220,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1221,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1222,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionDetailsBundle getFeedbackSessionDetails(String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1223,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1225,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1226,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1228,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes fsa \u003d feedbackSessionsLogic.getFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1230,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionDetails(fsa);"
      },
      {
        "lineNumber": 1231,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1233,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1234,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code List} of all feedback sessions bundled with their"
      },
      {
        "lineNumber": 1235,
        "author": {
          "gitId": "-"
        },
        "content": "     * response statistics for a instructor given by his googleId."
      },
      {
        "lineNumber": 1236,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1237,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1238,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1239,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1240,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackSessionsLogic#getFeedbackSessionDetailsForInstructor(String)"
      },
      {
        "lineNumber": 1241,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1242,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionDetailsBundle\u003e getFeedbackSessionDetailsForInstructor("
      },
      {
        "lineNumber": 1243,
        "author": {
          "gitId": "-"
        },
        "content": "            String googleId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1244,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 1245,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionDetailsForInstructor(googleId);"
      },
      {
        "lineNumber": 1246,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1248,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1249,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code List} of all feedback sessions WITHOUT their response"
      },
      {
        "lineNumber": 1250,
        "author": {
          "gitId": "-"
        },
        "content": "     * statistics for a instructor given by his googleId."
      },
      {
        "lineNumber": 1251,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1252,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1253,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1254,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1255,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackSessionsLogic#getFeedbackSessionsListForInstructor(String, boolean)"
      },
      {
        "lineNumber": 1256,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1257,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsListForInstructor(String googleId, boolean omitArchived) {"
      },
      {
        "lineNumber": 1258,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 1259,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionsListForInstructor(googleId, omitArchived);"
      },
      {
        "lineNumber": 1260,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1262,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsListForInstructor("
      },
      {
        "lineNumber": 1263,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cInstructorAttributes\u003e instructorList) {"
      },
      {
        "lineNumber": 1264,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructorList);"
      },
      {
        "lineNumber": 1265,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionsListForInstructor(instructorList);"
      },
      {
        "lineNumber": 1266,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1267,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1268,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1269,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets {@code FeedbackQuestions} and previously filled"
      },
      {
        "lineNumber": 1270,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code FeedbackResponses} that an instructor can view/submit as a"
      },
      {
        "lineNumber": 1271,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@link FeedbackSessionQuestionsBundle}."
      },
      {
        "lineNumber": 1272,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1273,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1274,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1275,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1276,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackSessionsLogic#getFeedbackSessionQuestionsForInstructor(String, String, String)"
      },
      {
        "lineNumber": 1277,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1278,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionQuestionsBundle getFeedbackSessionQuestionsBundleForInstructor(String feedbackSessionName,"
      },
      {
        "lineNumber": 1279,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                         String courseId,"
      },
      {
        "lineNumber": 1280,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                         String userEmail)"
      },
      {
        "lineNumber": 1281,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1282,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1283,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1284,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1285,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1286,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1287,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionQuestionsForInstructor(feedbackSessionName, courseId, userEmail);"
      },
      {
        "lineNumber": 1288,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1290,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionQuestionsBundle getFeedbackSessionQuestionsBundleForInstructor("
      },
      {
        "lineNumber": 1291,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String questionId, String userEmail)"
      },
      {
        "lineNumber": 1292,
        "author": {
          "gitId": "-"
        },
        "content": "                throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1293,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1294,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1295,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1296,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1298,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic"
      },
      {
        "lineNumber": 1299,
        "author": {
          "gitId": "-"
        },
        "content": "                   .getFeedbackSessionQuestionsForInstructor(feedbackSessionName, courseId, questionId, userEmail);"
      },
      {
        "lineNumber": 1300,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1301,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1302,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1303,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets {@code FeedbackQuestions} and previously filled"
      },
      {
        "lineNumber": 1304,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code FeedbackResponses} that a student can view/submit as a"
      },
      {
        "lineNumber": 1305,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@link FeedbackSessionQuestionsBundle}."
      },
      {
        "lineNumber": 1306,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1307,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1308,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1309,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1310,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackSessionsLogic#getFeedbackSessionQuestionsForStudent(String, String, String)"
      },
      {
        "lineNumber": 1311,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1312,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionQuestionsBundle getFeedbackSessionQuestionsBundleForStudent(String feedbackSessionName,"
      },
      {
        "lineNumber": 1313,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                      String courseId,"
      },
      {
        "lineNumber": 1314,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                      String userEmail)"
      },
      {
        "lineNumber": 1315,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1316,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1317,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1318,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1319,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1320,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1321,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionQuestionsForStudent(feedbackSessionName, courseId, userEmail);"
      },
      {
        "lineNumber": 1322,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1323,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1324,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionQuestionsBundle getFeedbackSessionQuestionsBundleForStudent("
      },
      {
        "lineNumber": 1325,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String questionId, String userEmail)"
      },
      {
        "lineNumber": 1326,
        "author": {
          "gitId": "-"
        },
        "content": "                throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1327,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1328,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1329,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1330,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1331,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1332,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic"
      },
      {
        "lineNumber": 1333,
        "author": {
          "gitId": "-"
        },
        "content": "                   .getFeedbackSessionQuestionsForStudent(feedbackSessionName, courseId, questionId, userEmail);"
      },
      {
        "lineNumber": 1334,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1335,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1336,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackQuestionAttributes getFeedbackQuestion(String feedbackSessionName,"
      },
      {
        "lineNumber": 1337,
        "author": {
          "gitId": "-"
        },
        "content": "                                                          String courseId,"
      },
      {
        "lineNumber": 1338,
        "author": {
          "gitId": "-"
        },
        "content": "                                                          int questionNumber) {"
      },
      {
        "lineNumber": 1339,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1340,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1341,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1342,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackQuestionsLogic.getFeedbackQuestion(feedbackSessionName, courseId, questionNumber);"
      },
      {
        "lineNumber": 1343,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1344,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1345,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1346,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1347,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null. \u003cbr\u003e"
      },
      {
        "lineNumber": 1348,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1349,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1350,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackQuestionAttributes getFeedbackQuestion(String feedbackQuestionId) {"
      },
      {
        "lineNumber": 1351,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackQuestionId);"
      },
      {
        "lineNumber": 1352,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackQuestionsLogic.getFeedbackQuestion(feedbackQuestionId);"
      },
      {
        "lineNumber": 1353,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1354,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1355,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1356,
        "author": {
          "gitId": "-"
        },
        "content": "     * Generates summary results (without comments) in CSV format. \u003cbr\u003e"
      },
      {
        "lineNumber": 1357,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1358,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters(except questionId) are non-null. \u003cbr\u003e"
      },
      {
        "lineNumber": 1359,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackSessionsLogic#getFeedbackSessionResultsSummaryAsCsv(String, String,"
      },
      {
        "lineNumber": 1360,
        "author": {
          "gitId": "-"
        },
        "content": "     *      String, String, boolean, boolean)"
      },
      {
        "lineNumber": 1361,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1362,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getFeedbackSessionResultSummaryAsCsv("
      },
      {
        "lineNumber": 1363,
        "author": {
          "gitId": "-"
        },
        "content": "            String courseId, String feedbackSessionName, String instructorEmail,"
      },
      {
        "lineNumber": 1364,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean isMissingResponsesShown, boolean isStatsShown, String questionId)"
      },
      {
        "lineNumber": 1365,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, ExceedingRangeException {"
      },
      {
        "lineNumber": 1366,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1367,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1368,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1369,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1370,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsSummaryAsCsv("
      },
      {
        "lineNumber": 1371,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionName, courseId, instructorEmail, questionId,"
      },
      {
        "lineNumber": 1372,
        "author": {
          "gitId": "-"
        },
        "content": "                isMissingResponsesShown, isStatsShown);"
      },
      {
        "lineNumber": 1373,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1374,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1375,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1376,
        "author": {
          "gitId": "-"
        },
        "content": "     * Generates summary results (without comments) within a section in CSV format. \u003cbr\u003e"
      },
      {
        "lineNumber": 1377,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1378,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters(except questionId) are non-null. \u003cbr\u003e"
      },
      {
        "lineNumber": 1379,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackSessionsLogic#getFeedbackSessionResultsSummaryInSectionAsCsv(String, String, String,"
      },
      {
        "lineNumber": 1380,
        "author": {
          "gitId": "-"
        },
        "content": "     *      String, String, boolean, boolean)"
      },
      {
        "lineNumber": 1381,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1382,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getFeedbackSessionResultSummaryInSectionAsCsv("
      },
      {
        "lineNumber": 1383,
        "author": {
          "gitId": "-"
        },
        "content": "            String courseId, String feedbackSessionName, String instructorEmail,"
      },
      {
        "lineNumber": 1384,
        "author": {
          "gitId": "-"
        },
        "content": "            String section, String questionId, boolean isMissingResponsesShown, boolean isStatsShown)"
      },
      {
        "lineNumber": 1385,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, ExceedingRangeException {"
      },
      {
        "lineNumber": 1386,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1387,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1388,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1389,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(section);"
      },
      {
        "lineNumber": 1390,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1391,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsSummaryInSectionAsCsv("
      },
      {
        "lineNumber": 1392,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionName, courseId, instructorEmail, section,"
      },
      {
        "lineNumber": 1393,
        "author": {
          "gitId": "-"
        },
        "content": "                questionId, isMissingResponsesShown, isStatsShown);"
      },
      {
        "lineNumber": 1394,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1395,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1396,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1397,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1398,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1399,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return a list of viewable feedback sessions for any user in the course."
      },
      {
        "lineNumber": 1400,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1401,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsForUserInCourse(String courseId, String userEmail)"
      },
      {
        "lineNumber": 1402,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1403,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1404,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1405,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1406,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionsForUserInCourse(courseId, userEmail);"
      },
      {
        "lineNumber": 1407,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1408,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1409,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1410,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1411,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1412,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1413,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean hasStudentSubmittedFeedback(FeedbackSessionAttributes fsa, String studentEmail) {"
      },
      {
        "lineNumber": 1414,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1415,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(fsa);"
      },
      {
        "lineNumber": 1416,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(studentEmail);"
      },
      {
        "lineNumber": 1417,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1418,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.isFeedbackSessionCompletedByStudent(fsa, studentEmail);"
      },
      {
        "lineNumber": 1419,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1420,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1421,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1422,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates the details of a feedback session \u003cbr\u003e"
      },
      {
        "lineNumber": 1423,
        "author": {
          "gitId": "-"
        },
        "content": "     * Does not affect the questions and responses associated with it."
      },
      {
        "lineNumber": 1424,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1425,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1426,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1427,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updateFeedbackSession(FeedbackSessionAttributes updatedSession) throws InvalidParametersException,"
      },
      {
        "lineNumber": 1428,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                       EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1429,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1430,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(updatedSession);"
      },
      {
        "lineNumber": 1431,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsLogic.updateFeedbackSession(updatedSession);"
      },
      {
        "lineNumber": 1432,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1433,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1434,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updateRespondents(String feedbackSessionName, String courseId) throws InvalidParametersException,"
      },
      {
        "lineNumber": 1435,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                      EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1436,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1437,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1438,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1439,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsLogic.updateRespondentsForSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1440,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1441,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1442,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addInstructorRespondent(String email, String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1443,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1444,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1445,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 1446,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1447,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1448,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1449,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsLogic.addInstructorRespondent(email, feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1450,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1451,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1452,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addStudentRespondent(String email, String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1453,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1454,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1455,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 1456,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1457,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1458,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1459,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsLogic.addStudentRespondent(email, feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1460,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1461,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1462,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteInstructorRespondent(String email, String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1463,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1464,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1465,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 1466,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1467,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1468,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1469,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsLogic.deleteInstructorRespondent(email, feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1470,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1471,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1472,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteStudentRespondent(String email, String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1473,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1474,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1475,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 1476,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1477,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1478,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1479,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsLogic.deleteStudentFromRespondentList(email, feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1480,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1481,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1482,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1483,
        "author": {
          "gitId": "-"
        },
        "content": "     * Publishes the feedback session and send email alerts to students."
      },
      {
        "lineNumber": 1484,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1485,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null. \u003cbr\u003e"
      },
      {
        "lineNumber": 1486,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException"
      },
      {
        "lineNumber": 1487,
        "author": {
          "gitId": "-"
        },
        "content": "     *             if the feedback session is not ready to be published."
      },
      {
        "lineNumber": 1488,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1489,
        "author": {
          "gitId": "-"
        },
        "content": "    public void publishFeedbackSession(FeedbackSessionAttributes session)"
      },
      {
        "lineNumber": 1490,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1491,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1492,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(session);"
      },
      {
        "lineNumber": 1493,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1494,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsLogic.publishFeedbackSession(session);"
      },
      {
        "lineNumber": 1495,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1496,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1497,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1498,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1499,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null. \u003cbr\u003e"
      },
      {
        "lineNumber": 1500,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException"
      },
      {
        "lineNumber": 1501,
        "author": {
          "gitId": "-"
        },
        "content": "     *             if the feedback session is not ready to be unpublished."
      },
      {
        "lineNumber": 1502,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1503,
        "author": {
          "gitId": "-"
        },
        "content": "    public void unpublishFeedbackSession(FeedbackSessionAttributes session)"
      },
      {
        "lineNumber": 1504,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1505,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1506,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(session);"
      },
      {
        "lineNumber": 1507,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1508,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsLogic.unpublishFeedbackSession(session);"
      },
      {
        "lineNumber": 1509,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1510,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1511,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1512,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes the feedback session but not the questions and"
      },
      {
        "lineNumber": 1513,
        "author": {
          "gitId": "-"
        },
        "content": "     * responses associated to it."
      },
      {
        "lineNumber": 1514,
        "author": {
          "gitId": "-"
        },
        "content": "     * Fails silently if no such feedback session. \u003cbr\u003e"
      },
      {
        "lineNumber": 1515,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1516,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1517,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1518,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteFeedbackSession(String feedbackSessionName, String courseId) {"
      },
      {
        "lineNumber": 1519,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1520,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1521,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1522,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1523,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsLogic.deleteFeedbackSessionCascade(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1524,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1525,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1526,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1527,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1528,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1529,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1530,
        "author": {
          "gitId": "-"
        },
        "content": "    public void createFeedbackQuestion(FeedbackQuestionAttributes feedbackQuestion) throws InvalidParametersException {"
      },
      {
        "lineNumber": 1531,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackQuestion);"
      },
      {
        "lineNumber": 1532,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackQuestionsLogic.createFeedbackQuestion(feedbackQuestion);"
      },
      {
        "lineNumber": 1533,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1534,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1535,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1536,
        "author": {
          "gitId": "-"
        },
        "content": "     * Used for creating initial questions for template sessions only."
      },
      {
        "lineNumber": 1537,
        "author": {
          "gitId": "-"
        },
        "content": "     * Does not check if feedback session exists."
      },
      {
        "lineNumber": 1538,
        "author": {
          "gitId": "-"
        },
        "content": "     * Does not check if question number supplied is valid(does not check for clashes, or make adjustments)"
      },
      {
        "lineNumber": 1539,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1540,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1541,
        "author": {
          "gitId": "-"
        },
        "content": "     * * questionNumber is \u003e 0"
      },
      {
        "lineNumber": 1542,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1543,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackQuestionAttributes createFeedbackQuestionForTemplate("
      },
      {
        "lineNumber": 1544,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes feedbackQuestion, int questionNumber)"
      },
      {
        "lineNumber": 1545,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException {"
      },
      {
        "lineNumber": 1546,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1547,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackQuestion);"
      },
      {
        "lineNumber": 1548,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertTrue(questionNumber \u003e 0);"
      },
      {
        "lineNumber": 1549,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackQuestionsLogic.createFeedbackQuestionNoIntegrityCheck(feedbackQuestion, questionNumber);"
      },
      {
        "lineNumber": 1550,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1551,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1552,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1553,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1554,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1555,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1556,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackQuestionAttributes copyFeedbackQuestion(String feedbackQuestionId, String feedbackSessionName,"
      },
      {
        "lineNumber": 1557,
        "author": {
          "gitId": "-"
        },
        "content": "                                                           String courseId, String instructorEmail)"
      },
      {
        "lineNumber": 1558,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException {"
      },
      {
        "lineNumber": 1559,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1560,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackQuestionId);"
      },
      {
        "lineNumber": 1561,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1562,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1563,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructorEmail);"
      },
      {
        "lineNumber": 1564,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1565,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackQuestionsLogic.copyFeedbackQuestion(feedbackQuestionId, feedbackSessionName,"
      },
      {
        "lineNumber": 1566,
        "author": {
          "gitId": "-"
        },
        "content": "                                                           courseId, instructorEmail);"
      },
      {
        "lineNumber": 1567,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1568,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1569,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1570,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates the question number of a Feedback Question.\u003cbr\u003e"
      },
      {
        "lineNumber": 1571,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1572,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1573,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1574,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updateFeedbackQuestionNumber(FeedbackQuestionAttributes updatedQuestion)"
      },
      {
        "lineNumber": 1575,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1576,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1577,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(updatedQuestion);"
      },
      {
        "lineNumber": 1578,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackQuestionsLogic.updateFeedbackQuestionNumber(updatedQuestion);"
      },
      {
        "lineNumber": 1579,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1580,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1581,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1582,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates the details of a Feedback Question.\u003cbr\u003e"
      },
      {
        "lineNumber": 1583,
        "author": {
          "gitId": "-"
        },
        "content": "     * The FeedbackQuestionAttributes should have the updated attributes"
      },
      {
        "lineNumber": 1584,
        "author": {
          "gitId": "-"
        },
        "content": "     * together with the original ID of the question. Preserves null"
      },
      {
        "lineNumber": 1585,
        "author": {
          "gitId": "-"
        },
        "content": "     * attributes."
      },
      {
        "lineNumber": 1586,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1587,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1588,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1589,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updateFeedbackQuestion(FeedbackQuestionAttributes updatedQuestion)"
      },
      {
        "lineNumber": 1590,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1591,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1592,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(updatedQuestion);"
      },
      {
        "lineNumber": 1593,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackQuestionsLogic.updateFeedbackQuestion(updatedQuestion);"
      },
      {
        "lineNumber": 1594,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1595,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1596,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1597,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes the feedback question and the responses associated to it. Fails"
      },
      {
        "lineNumber": 1598,
        "author": {
          "gitId": "-"
        },
        "content": "     * silently if there is no such feedback question. \u003cbr\u003e"
      },
      {
        "lineNumber": 1599,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1600,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1601,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1602,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteFeedbackQuestion(String questionId) {"
      },
      {
        "lineNumber": 1603,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(questionId);"
      },
      {
        "lineNumber": 1604,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackQuestionsLogic.deleteFeedbackQuestionCascade(questionId);"
      },
      {
        "lineNumber": 1605,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1606,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1607,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1608,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if there is at least one response for the given feedback question,"
      },
      {
        "lineNumber": 1609,
        "author": {
          "gitId": "-"
        },
        "content": "     * false if not."
      },
      {
        "lineNumber": 1610,
        "author": {
          "gitId": "-"
        },
        "content": "     * for the session."
      },
      {
        "lineNumber": 1611,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1612,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1613,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1614,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1615,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean areThereResponsesForQuestion(String feedbackQuestionId) {"
      },
      {
        "lineNumber": 1616,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackQuestionsLogic.areThereResponsesForQuestion(feedbackQuestionId);"
      },
      {
        "lineNumber": 1617,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1618,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1619,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1620,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets all copiable questions for an instructor\u003cbr\u003e"
      },
      {
        "lineNumber": 1621,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an empty list if they are no questions"
      },
      {
        "lineNumber": 1622,
        "author": {
          "gitId": "-"
        },
        "content": "     * for the session."
      },
      {
        "lineNumber": 1623,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1624,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1625,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1626,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackQuestionAttributes\u003e getCopiableFeedbackQuestionsForInstructor(String googleId)"
      },
      {
        "lineNumber": 1627,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1628,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 1629,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackQuestionsLogic.getCopiableFeedbackQuestionsForInstructor(googleId);"
      },
      {
        "lineNumber": 1630,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1631,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1632,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1633,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets all questions for a feedback session.\u003cbr\u003e"
      },
      {
        "lineNumber": 1634,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an empty list if they are no questions"
      },
      {
        "lineNumber": 1635,
        "author": {
          "gitId": "-"
        },
        "content": "     * for the session."
      },
      {
        "lineNumber": 1636,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1637,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1638,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1639,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackQuestionAttributes\u003e getFeedbackQuestionsForSession(String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1640,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1641,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1642,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1643,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1644,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackQuestionsLogic.getFeedbackQuestionsForSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1645,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1646,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1647,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1648,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the response rate status for a session."
      },
      {
        "lineNumber": 1649,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1650,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1651,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1652,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1653,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackSessionsLogic#getFeedbackSessionResponseStatus(String, String)"
      },
      {
        "lineNumber": 1654,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1655,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResponseStatus getFeedbackSessionResponseStatus(String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1656,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1657,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1658,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1659,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1660,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1661,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResponseStatus(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1662,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1663,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1664,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1665,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a question+response bundle for questions with responses that"
      },
      {
        "lineNumber": 1666,
        "author": {
          "gitId": "-"
        },
        "content": "     * is visible to the student for a feedback session."
      },
      {
        "lineNumber": 1667,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1668,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1669,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1670,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForStudent(String feedbackSessionName,"
      },
      {
        "lineNumber": 1671,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                            String courseId, String userEmail)"
      },
      {
        "lineNumber": 1672,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1673,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1674,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1675,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1676,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1677,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsForStudent(feedbackSessionName, courseId, userEmail);"
      },
      {
        "lineNumber": 1678,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1679,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1680,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1681,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a question+response bundle for questions with responses that"
      },
      {
        "lineNumber": 1682,
        "author": {
          "gitId": "-"
        },
        "content": "     * is visible to the student for a feedback session."
      },
      {
        "lineNumber": 1683,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1684,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1685,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1686,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForStudent(String feedbackSessionName,"
      },
      {
        "lineNumber": 1687,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                            String courseId, String userEmail,"
      },
      {
        "lineNumber": 1688,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                            CourseRoster roster)"
      },
      {
        "lineNumber": 1689,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1690,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1691,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1692,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1693,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1694,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(roster);"
      },
      {
        "lineNumber": 1695,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1696,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsForStudent(feedbackSessionName, courseId,"
      },
      {
        "lineNumber": 1697,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                         userEmail, roster);"
      },
      {
        "lineNumber": 1698,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1699,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1700,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1701,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a question+response bundle for questions with responses that"
      },
      {
        "lineNumber": 1702,
        "author": {
          "gitId": "-"
        },
        "content": "     * is visible to the instructor for a feedback session within the given range"
      },
      {
        "lineNumber": 1703,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1704,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1705,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1706,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorWithinRangeFromView("
      },
      {
        "lineNumber": 1707,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail, int range, String viewType)"
      },
      {
        "lineNumber": 1708,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1709,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1710,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1711,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1712,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1713,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(viewType);"
      },
      {
        "lineNumber": 1714,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1715,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsForInstructorWithinRangeFromView(feedbackSessionName,"
      },
      {
        "lineNumber": 1716,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                               courseId, userEmail,"
      },
      {
        "lineNumber": 1717,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                               range, viewType);"
      },
      {
        "lineNumber": 1718,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1719,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1720,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1721,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a question+response bundle for questions with responses that"
      },
      {
        "lineNumber": 1722,
        "author": {
          "gitId": "-"
        },
        "content": "     * is visible to the instructor for a feedback session in a section within the given range"
      },
      {
        "lineNumber": 1723,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1724,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1725,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1726,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorInSectionWithinRangeFromView("
      },
      {
        "lineNumber": 1727,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail, String section, int range, String viewType)"
      },
      {
        "lineNumber": 1728,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1729,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1730,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1731,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1732,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1733,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(viewType);"
      },
      {
        "lineNumber": 1734,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1735,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsForInstructorInSectionWithinRangeFromView("
      },
      {
        "lineNumber": 1736,
        "author": {
          "gitId": "-"
        },
        "content": "                                        feedbackSessionName, courseId, userEmail, section, range, viewType);"
      },
      {
        "lineNumber": 1737,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1738,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1739,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1740,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a question+response bundle for questions with responses that"
      },
      {
        "lineNumber": 1741,
        "author": {
          "gitId": "-"
        },
        "content": "     * is visible to the instructor for a feedback session from a section within the given range"
      },
      {
        "lineNumber": 1742,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1743,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1744,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1745,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorFromSectionWithinRange("
      },
      {
        "lineNumber": 1746,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail, String section, int range)"
      },
      {
        "lineNumber": 1747,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1748,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1749,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1750,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1751,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1752,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1753,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsForInstructorFromSectionWithinRange("
      },
      {
        "lineNumber": 1754,
        "author": {
          "gitId": "-"
        },
        "content": "                                        feedbackSessionName, courseId, userEmail, section, range);"
      },
      {
        "lineNumber": 1755,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1756,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1757,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1758,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a question+response bundle for questions with responses that"
      },
      {
        "lineNumber": 1759,
        "author": {
          "gitId": "-"
        },
        "content": "     * is visible to the instructor for a feedback session to a section within the given range"
      },
      {
        "lineNumber": 1760,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1761,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1762,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1763,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorToSectionWithinRange("
      },
      {
        "lineNumber": 1764,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail, String section, int range)"
      },
      {
        "lineNumber": 1765,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1766,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1767,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1768,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1769,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1770,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1771,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsForInstructorToSectionWithinRange("
      },
      {
        "lineNumber": 1772,
        "author": {
          "gitId": "-"
        },
        "content": "                                        feedbackSessionName, courseId, userEmail, section, range);"
      },
      {
        "lineNumber": 1773,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1774,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1775,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1776,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a question+response bundle for questions with responses that"
      },
      {
        "lineNumber": 1777,
        "author": {
          "gitId": "-"
        },
        "content": "     * is visible to the instructor for a feedback session from a given question number"
      },
      {
        "lineNumber": 1778,
        "author": {
          "gitId": "-"
        },
        "content": "     * This will not retrieve the list of comments for this question"
      },
      {
        "lineNumber": 1779,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1780,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1781,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1782,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorFromQuestion("
      },
      {
        "lineNumber": 1783,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail, String questionId)"
      },
      {
        "lineNumber": 1784,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1785,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1786,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1787,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1788,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1789,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1790,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsForInstructorFromQuestion(feedbackSessionName, courseId,"
      },
      {
        "lineNumber": 1791,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                        userEmail, questionId);"
      },
      {
        "lineNumber": 1792,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1793,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1794,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1795,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a question+response bundle for questions with responses that"
      },
      {
        "lineNumber": 1796,
        "author": {
          "gitId": "-"
        },
        "content": "     * is visible to the instructor for a feedback session from a given question number"
      },
      {
        "lineNumber": 1797,
        "author": {
          "gitId": "-"
        },
        "content": "     * in a given section."
      },
      {
        "lineNumber": 1798,
        "author": {
          "gitId": "-"
        },
        "content": "     * This will not retrieve the list of comments for this question"
      },
      {
        "lineNumber": 1799,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1800,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1801,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1802,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorFromQuestionInSection("
      },
      {
        "lineNumber": 1803,
        "author": {
          "gitId": "-"
        },
        "content": "                                    String feedbackSessionName, String courseId, String userEmail,"
      },
      {
        "lineNumber": 1804,
        "author": {
          "gitId": "-"
        },
        "content": "                                    String questionId, String selectedSection)"
      },
      {
        "lineNumber": 1805,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1806,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1807,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1808,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1809,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1810,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1811,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsForInstructorFromQuestionInSection("
      },
      {
        "lineNumber": 1812,
        "author": {
          "gitId": "-"
        },
        "content": "                                            feedbackSessionName, courseId, userEmail,"
      },
      {
        "lineNumber": 1813,
        "author": {
          "gitId": "-"
        },
        "content": "                                            questionId, selectedSection);"
      },
      {
        "lineNumber": 1814,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1815,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1816,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1817,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a question+response bundle for questions with responses that"
      },
      {
        "lineNumber": 1818,
        "author": {
          "gitId": "-"
        },
        "content": "     * is visible to the instructor for a feedback session."
      },
      {
        "lineNumber": 1819,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1820,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1821,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1822,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructor("
      },
      {
        "lineNumber": 1823,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail)"
      },
      {
        "lineNumber": 1824,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1825,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1826,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1827,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1828,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1829,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1830,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsForInstructor(feedbackSessionName, courseId, userEmail);"
      },
      {
        "lineNumber": 1831,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1832,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1833,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1834,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a question+response bundle for questions with responses that"
      },
      {
        "lineNumber": 1835,
        "author": {
          "gitId": "-"
        },
        "content": "     * is visible to the instructor for a feedback session in a specific section."
      },
      {
        "lineNumber": 1836,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1837,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1838,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1839,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorInSection(String feedbackSessionName,"
      },
      {
        "lineNumber": 1840,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                        String courseId,"
      },
      {
        "lineNumber": 1841,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                        String userEmail,"
      },
      {
        "lineNumber": 1842,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                        String section)"
      },
      {
        "lineNumber": 1843,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1844,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1845,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1846,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1847,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1848,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(section);"
      },
      {
        "lineNumber": 1849,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1850,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsForInstructorInSection(feedbackSessionName, courseId,"
      },
      {
        "lineNumber": 1851,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                     userEmail, section);"
      },
      {
        "lineNumber": 1852,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1853,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1854,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1855,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a question+response bundle for questions with responses that"
      },
      {
        "lineNumber": 1856,
        "author": {
          "gitId": "-"
        },
        "content": "     * is visible to the instructor for a feedback session in a specific section."
      },
      {
        "lineNumber": 1857,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1858,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1859,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1860,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorFromSection(String feedbackSessionName,"
      },
      {
        "lineNumber": 1861,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                          String courseId,"
      },
      {
        "lineNumber": 1862,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                          String userEmail,"
      },
      {
        "lineNumber": 1863,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                          String section)"
      },
      {
        "lineNumber": 1864,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1865,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1866,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1867,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1868,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1869,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(section);"
      },
      {
        "lineNumber": 1870,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1871,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsForInstructorFromSection(feedbackSessionName, courseId,"
      },
      {
        "lineNumber": 1872,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                       userEmail, section);"
      },
      {
        "lineNumber": 1873,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1874,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1875,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1876,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a question+response bundle for questions with responses that"
      },
      {
        "lineNumber": 1877,
        "author": {
          "gitId": "-"
        },
        "content": "     * is visible to the instructor for a feedback session in a specific section."
      },
      {
        "lineNumber": 1878,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1879,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1880,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1881,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorToSection(String feedbackSessionName,"
      },
      {
        "lineNumber": 1882,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                        String courseId,"
      },
      {
        "lineNumber": 1883,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                        String userEmail,"
      },
      {
        "lineNumber": 1884,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                        String section)"
      },
      {
        "lineNumber": 1885,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1886,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1887,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1888,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1889,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1890,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(section);"
      },
      {
        "lineNumber": 1891,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1892,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsForInstructorToSection(feedbackSessionName, courseId,"
      },
      {
        "lineNumber": 1893,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                     userEmail, section);"
      },
      {
        "lineNumber": 1894,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1895,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1896,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseAttributes getFeedbackResponse(String feedbackResponseId) {"
      },
      {
        "lineNumber": 1897,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackResponseId);"
      },
      {
        "lineNumber": 1898,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponsesLogic.getFeedbackResponse(feedbackResponseId);"
      },
      {
        "lineNumber": 1899,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1900,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1901,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseAttributes getFeedbackResponse(String feedbackQuestionId,"
      },
      {
        "lineNumber": 1902,
        "author": {
          "gitId": "-"
        },
        "content": "                                                          String giverEmail,"
      },
      {
        "lineNumber": 1903,
        "author": {
          "gitId": "-"
        },
        "content": "                                                          String recipient) {"
      },
      {
        "lineNumber": 1904,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1905,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackQuestionId);"
      },
      {
        "lineNumber": 1906,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(giverEmail);"
      },
      {
        "lineNumber": 1907,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(recipient);"
      },
      {
        "lineNumber": 1908,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1909,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponsesLogic.getFeedbackResponse(feedbackQuestionId, giverEmail, recipient);"
      },
      {
        "lineNumber": 1910,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1911,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1912,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1913,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1914,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1915,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1916,
        "author": {
          "gitId": "-"
        },
        "content": "    public void createFeedbackResponse(FeedbackResponseAttributes feedbackResponse)"
      },
      {
        "lineNumber": 1917,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1918,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1919,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackResponse);"
      },
      {
        "lineNumber": 1920,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackResponsesLogic.createFeedbackResponse(feedbackResponse);"
      },
      {
        "lineNumber": 1921,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1922,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1923,
        "author": {
          "gitId": "-"
        },
        "content": "    public void createFeedbackResponses(List\u003cFeedbackResponseAttributes\u003e feedbackResponses)"
      },
      {
        "lineNumber": 1924,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1925,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1926,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackResponses);"
      },
      {
        "lineNumber": 1927,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackResponsesLogic.createFeedbackResponses(feedbackResponses);"
      },
      {
        "lineNumber": 1928,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1929,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1930,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean hasGiverRespondedForSession(String userEmail, String feedbackSessionName, String courseId) {"
      },
      {
        "lineNumber": 1931,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1932,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1933,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1934,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1935,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponsesLogic.hasGiverRespondedForSession(userEmail, feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1936,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1937,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1938,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean hasResponsesForCourse(String courseId) {"
      },
      {
        "lineNumber": 1939,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponsesLogic.hasResponsesForCourse(courseId);"
      },
      {
        "lineNumber": 1940,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1941,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1942,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isOpenOrPublishedEmailSentForTheCourse(String courseId) {"
      },
      {
        "lineNumber": 1943,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1944,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.isOpenOrPublishedEmailSentForTheCourse(courseId);"
      },
      {
        "lineNumber": 1945,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1946,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1947,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1948,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1949,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1950,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1951,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updateFeedbackResponse(FeedbackResponseAttributes feedbackResponse)"
      },
      {
        "lineNumber": 1952,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 1953,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1954,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackResponse);"
      },
      {
        "lineNumber": 1955,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackResponsesLogic.updateFeedbackResponse(feedbackResponse);"
      },
      {
        "lineNumber": 1956,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1957,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1958,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1959,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1960,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1961,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1962,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteFeedbackResponse(FeedbackResponseAttributes feedbackResponse) {"
      },
      {
        "lineNumber": 1963,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackResponse);"
      },
      {
        "lineNumber": 1964,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackResponsesLogic.deleteFeedbackResponseAndCascade(feedbackResponse);"
      },
      {
        "lineNumber": 1965,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1966,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1967,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1968,
        "author": {
          "gitId": "-"
        },
        "content": "     * Create a feedback response comment, and return the created comment"
      },
      {
        "lineNumber": 1969,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1970,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1971,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1972,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseCommentAttributes createFeedbackResponseComment("
      },
      {
        "lineNumber": 1973,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackResponseCommentAttributes feedbackResponseComment)"
      },
      {
        "lineNumber": 1974,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1975,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackResponseComment);"
      },
      {
        "lineNumber": 1976,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponseCommentsLogic.createFeedbackResponseComment(feedbackResponseComment);"
      },
      {
        "lineNumber": 1977,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1978,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1979,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseCommentAttributes getFeedbackResponseComment(Long feedbackResponseCommentId) {"
      },
      {
        "lineNumber": 1980,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackResponseCommentId);"
      },
      {
        "lineNumber": 1981,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponseCommentsLogic.getFeedbackResponseComment(feedbackResponseCommentId);"
      },
      {
        "lineNumber": 1982,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1983,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1984,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseCommentAttributes\u003e getFeedbackResponseCommentForGiver(String courseId,"
      },
      {
        "lineNumber": 1985,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                      String giverEmail) {"
      },
      {
        "lineNumber": 1986,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1987,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(giverEmail);"
      },
      {
        "lineNumber": 1988,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1989,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponseCommentsLogic.getFeedbackResponseCommentsForGiver(courseId, giverEmail);"
      },
      {
        "lineNumber": 1990,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1991,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1992,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1993,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1994,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1995,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1996,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseCommentAttributes getFeedbackResponseComment("
      },
      {
        "lineNumber": 1997,
        "author": {
          "gitId": "-"
        },
        "content": "            String responseId, String giverEmail, Instant creationDate) {"
      },
      {
        "lineNumber": 1998,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(responseId);"
      },
      {
        "lineNumber": 1999,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(giverEmail);"
      },
      {
        "lineNumber": 2000,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(creationDate);"
      },
      {
        "lineNumber": 2001,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2002,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponseCommentsLogic.getFeedbackResponseComment(responseId, giverEmail, creationDate);"
      },
      {
        "lineNumber": 2003,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2004,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2005,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 2006,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates or updates document for the given comment."
      },
      {
        "lineNumber": 2007,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 2008,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackResponseCommentsLogic#putDocument(FeedbackResponseCommentAttributes)"
      },
      {
        "lineNumber": 2009,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 2010,
        "author": {
          "gitId": "-"
        },
        "content": "    public void putDocument(FeedbackResponseCommentAttributes comment) {"
      },
      {
        "lineNumber": 2011,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackResponseCommentsLogic.putDocument(comment);"
      },
      {
        "lineNumber": 2012,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2013,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2014,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 2015,
        "author": {
          "gitId": "-"
        },
        "content": "     * Batch creates or updates documents for the given comments."
      },
      {
        "lineNumber": 2016,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 2017,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackResponseCommentsLogic#putDocuments(List)"
      },
      {
        "lineNumber": 2018,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 2019,
        "author": {
          "gitId": "-"
        },
        "content": "    public void putFeedbackResponseCommentDocuments(List\u003cFeedbackResponseCommentAttributes\u003e comments) {"
      },
      {
        "lineNumber": 2020,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackResponseCommentsLogic.putDocuments(comments);"
      },
      {
        "lineNumber": 2021,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2022,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2023,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 2024,
        "author": {
          "gitId": "-"
        },
        "content": "     * Removes document for the given comment."
      },
      {
        "lineNumber": 2025,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 2026,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackResponseCommentsLogic#deleteDocument(FeedbackResponseCommentAttributes)"
      },
      {
        "lineNumber": 2027,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 2028,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteDocument(FeedbackResponseCommentAttributes comment) {"
      },
      {
        "lineNumber": 2029,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackResponseCommentsLogic.deleteDocument(comment);"
      },
      {
        "lineNumber": 2030,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2031,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2032,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 2033,
        "author": {
          "gitId": "-"
        },
        "content": "     * Removes document for the comment by given id."
      },
      {
        "lineNumber": 2034,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 2035,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackResponseCommentsLogic#deleteDocumentByCommentId(long)"
      },
      {
        "lineNumber": 2036,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 2037,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteDocumentByCommentId(long commentId) {"
      },
      {
        "lineNumber": 2038,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackResponseCommentsLogic.deleteDocumentByCommentId(commentId);"
      },
      {
        "lineNumber": 2039,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2040,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2041,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 2042,
        "author": {
          "gitId": "-"
        },
        "content": "     * Search for FeedbackResponseComment. Preconditions: all parameters are non-null."
      },
      {
        "lineNumber": 2043,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param instructors   a list of InstructorAttributes associated to a googleId,"
      },
      {
        "lineNumber": 2044,
        "author": {
          "gitId": "-"
        },
        "content": "     *                      used for filtering of search result"
      },
      {
        "lineNumber": 2045,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Null if no match found"
      },
      {
        "lineNumber": 2046,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 2047,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseCommentSearchResultBundle searchFeedbackResponseComments(String queryString,"
      },
      {
        "lineNumber": 2048,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                         List\u003cInstructorAttributes\u003e instructors) {"
      },
      {
        "lineNumber": 2049,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(queryString);"
      },
      {
        "lineNumber": 2050,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructors);"
      },
      {
        "lineNumber": 2051,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponseCommentsLogic.searchFeedbackResponseComments(queryString, instructors);"
      },
      {
        "lineNumber": 2052,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2053,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2054,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 2055,
        "author": {
          "gitId": "-"
        },
        "content": "     * Update a feedback response comment and return the updated feedback response comment"
      },
      {
        "lineNumber": 2056,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 2057,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 2058,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 2059,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseCommentAttributes updateFeedbackResponseComment("
      },
      {
        "lineNumber": 2060,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackResponseCommentAttributes feedbackResponseComment)"
      },
      {
        "lineNumber": 2061,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 2062,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2063,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackResponseComment);"
      },
      {
        "lineNumber": 2064,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponseCommentsLogic.updateFeedbackResponseComment(feedbackResponseComment);"
      },
      {
        "lineNumber": 2065,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2066,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2067,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 2068,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 2069,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 2070,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 2071,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteFeedbackResponseComment(FeedbackResponseCommentAttributes feedbackResponseComment) {"
      },
      {
        "lineNumber": 2072,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackResponseComment);"
      },
      {
        "lineNumber": 2073,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackResponseCommentsLogic.deleteFeedbackResponseComment(feedbackResponseComment);"
      },
      {
        "lineNumber": 2074,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2075,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2076,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 2077,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 2078,
        "author": {
          "gitId": "-"
        },
        "content": "     * * Id of comment is not null."
      },
      {
        "lineNumber": 2079,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 2080,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteFeedbackResponseCommentById(Long commentId) {"
      },
      {
        "lineNumber": 2081,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(commentId);"
      },
      {
        "lineNumber": 2082,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackResponseCommentsLogic.deleteFeedbackResponseCommentById(commentId);"
      },
      {
        "lineNumber": 2083,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2084,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2085,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 2086,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets an admin email by email id."
      },
      {
        "lineNumber": 2087,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 2088,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see AdminEmailsLogic#getAdminEmailById(String)"
      },
      {
        "lineNumber": 2089,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 2090,
        "author": {
          "gitId": "-"
        },
        "content": "    public AdminEmailAttributes getAdminEmailById(String emailId) {"
      },
      {
        "lineNumber": 2091,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(emailId);"
      },
      {
        "lineNumber": 2092,
        "author": {
          "gitId": "-"
        },
        "content": "        return adminEmailsLogic.getAdminEmailById(emailId);"
      },
      {
        "lineNumber": 2093,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2094,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2095,
        "author": {
          "gitId": "-"
        },
        "content": "    public Instant createAdminEmail(AdminEmailAttributes newAdminEmail) throws InvalidParametersException {"
      },
      {
        "lineNumber": 2096,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(newAdminEmail);"
      },
      {
        "lineNumber": 2097,
        "author": {
          "gitId": "-"
        },
        "content": "        return adminEmailsLogic.createAdminEmail(newAdminEmail);"
      },
      {
        "lineNumber": 2098,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2099,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2100,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 2101,
        "author": {
          "gitId": "-"
        },
        "content": "     * Move an admin email to trash bin.\u003cbr\u003e"
      },
      {
        "lineNumber": 2102,
        "author": {
          "gitId": "-"
        },
        "content": "     * After this the attribute isInTrashBin will be set to true"
      },
      {
        "lineNumber": 2103,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 2104,
        "author": {
          "gitId": "-"
        },
        "content": "    public void moveAdminEmailToTrashBin(String adminEmailId)"
      },
      {
        "lineNumber": 2105,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 2106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2107,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(adminEmailId);"
      },
      {
        "lineNumber": 2108,
        "author": {
          "gitId": "-"
        },
        "content": "        adminEmailsLogic.moveAdminEmailToTrashBin(adminEmailId);"
      },
      {
        "lineNumber": 2109,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2111,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 2112,
        "author": {
          "gitId": "-"
        },
        "content": "     * Move an admin email out of trash bin.\u003cbr\u003e"
      },
      {
        "lineNumber": 2113,
        "author": {
          "gitId": "-"
        },
        "content": "     * After this the attribute isInTrashBin will be set to false"
      },
      {
        "lineNumber": 2114,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 2115,
        "author": {
          "gitId": "-"
        },
        "content": "    public void moveAdminEmailOutOfTrashBin(String adminEmailId)"
      },
      {
        "lineNumber": 2116,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 2117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2118,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(adminEmailId);"
      },
      {
        "lineNumber": 2119,
        "author": {
          "gitId": "-"
        },
        "content": "        adminEmailsLogic.moveAdminEmailOutOfTrashBin(adminEmailId);"
      },
      {
        "lineNumber": 2120,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2122,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 2123,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets all admin emails that have been sent and not in trash bin."
      },
      {
        "lineNumber": 2124,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 2125,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see AdminEmailsLogic#getSentAdminEmails()"
      },
      {
        "lineNumber": 2126,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 2127,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cAdminEmailAttributes\u003e getSentAdminEmails() {"
      },
      {
        "lineNumber": 2128,
        "author": {
          "gitId": "-"
        },
        "content": "        return adminEmailsLogic.getSentAdminEmails();"
      },
      {
        "lineNumber": 2129,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2131,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 2132,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets all admin email drafts that have NOT been sent and NOT in trash bin."
      },
      {
        "lineNumber": 2133,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 2134,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see AdminEmailsLogic#getAdminEmailDrafts()"
      },
      {
        "lineNumber": 2135,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 2136,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cAdminEmailAttributes\u003e getAdminEmailDrafts() {"
      },
      {
        "lineNumber": 2137,
        "author": {
          "gitId": "-"
        },
        "content": "        return adminEmailsLogic.getAdminEmailDrafts();"
      },
      {
        "lineNumber": 2138,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2140,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 2141,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets all admin emails that have been moved into trash bin."
      },
      {
        "lineNumber": 2142,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 2143,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see AdminEmailsLogic#getAdminEmailsInTrashBin()"
      },
      {
        "lineNumber": 2144,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 2145,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cAdminEmailAttributes\u003e getAdminEmailsInTrashBin() {"
      },
      {
        "lineNumber": 2146,
        "author": {
          "gitId": "-"
        },
        "content": "        return adminEmailsLogic.getAdminEmailsInTrashBin();"
      },
      {
        "lineNumber": 2147,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2149,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 2150,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates an admin email by email id."
      },
      {
        "lineNumber": 2151,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 2152,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see AdminEmailsLogic#updateAdminEmailById(AdminEmailAttributes, String)"
      },
      {
        "lineNumber": 2153,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 2154,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updateAdminEmailById(AdminEmailAttributes newAdminEmail, String emailId)"
      },
      {
        "lineNumber": 2155,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 2156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2157,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(emailId);"
      },
      {
        "lineNumber": 2158,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(newAdminEmail);"
      },
      {
        "lineNumber": 2159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2160,
        "author": {
          "gitId": "-"
        },
        "content": "        adminEmailsLogic.updateAdminEmailById(newAdminEmail, emailId);"
      },
      {
        "lineNumber": 2161,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2163,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 2164,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets an admin email by subject and createDate."
      },
      {
        "lineNumber": 2165,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 2166,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see AdminEmailsLogic#getAdminEmail(String, Instant)"
      },
      {
        "lineNumber": 2167,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 2168,
        "author": {
          "gitId": "-"
        },
        "content": "    public AdminEmailAttributes getAdminEmail(String subject, Instant createDate) {"
      },
      {
        "lineNumber": 2169,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(subject);"
      },
      {
        "lineNumber": 2170,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(createDate);"
      },
      {
        "lineNumber": 2171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2172,
        "author": {
          "gitId": "-"
        },
        "content": "        return adminEmailsLogic.getAdminEmail(subject, createDate);"
      },
      {
        "lineNumber": 2173,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2175,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 2176,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes all emails in trash bin."
      },
      {
        "lineNumber": 2177,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 2178,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see AdminEmailsLogic#deleteAllEmailsInTrashBin()"
      },
      {
        "lineNumber": 2179,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 2180,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteAllEmailsInTrashBin() {"
      },
      {
        "lineNumber": 2181,
        "author": {
          "gitId": "-"
        },
        "content": "        adminEmailsLogic.deleteAllEmailsInTrashBin();"
      },
      {
        "lineNumber": 2182,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2184,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 2185,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes files uploaded in admin email compose page."
      },
      {
        "lineNumber": 2186,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 2187,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see AdminEmailsLogic#deleteAdminEmailUploadedFile(BlobKey)"
      },
      {
        "lineNumber": 2188,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 2189,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteAdminEmailUploadedFile(BlobKey key) {"
      },
      {
        "lineNumber": 2190,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(key);"
      },
      {
        "lineNumber": 2191,
        "author": {
          "gitId": "-"
        },
        "content": "        adminEmailsLogic.deleteAdminEmailUploadedFile(key);"
      },
      {
        "lineNumber": 2192,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2193,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2194,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 2195,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes uploaded file."
      },
      {
        "lineNumber": 2196,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param key the GCS blobkey used to fetch the file in Google Cloud Storage"
      },
      {
        "lineNumber": 2197,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 2198,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteUploadedFile(BlobKey key) {"
      },
      {
        "lineNumber": 2199,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(key);"
      },
      {
        "lineNumber": 2200,
        "author": {
          "gitId": "-"
        },
        "content": "        GoogleCloudStorageHelper.deleteFile(key);"
      },
      {
        "lineNumber": 2201,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2203,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cString\u003e getArchivedCourseIds(List\u003cCourseAttributes\u003e allCourses,"
      },
      {
        "lineNumber": 2204,
        "author": {
          "gitId": "-"
        },
        "content": "                                             Map\u003cString, InstructorAttributes\u003e instructorsForCourses) {"
      },
      {
        "lineNumber": 2205,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(allCourses);"
      },
      {
        "lineNumber": 2206,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructorsForCourses);"
      },
      {
        "lineNumber": 2207,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getArchivedCourseIds(allCourses, instructorsForCourses);"
      },
      {
        "lineNumber": 2208,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2210,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e"
      },
      {
        "lineNumber": 2211,
        "author": {
          "gitId": "-"
        },
        "content": "            getFeedbackResponsesForSession(String feedbackSessionName, String courseId) {"
      },
      {
        "lineNumber": 2212,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 2213,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 2214,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponsesLogic.getFeedbackResponsesForSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 2215,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2217,
        "author": {
          "gitId": "-"
        },
        "content": "    public void adjustFeedbackResponseForEnrollments(List\u003cStudentEnrollDetails\u003e enrollmentList,"
      },
      {
        "lineNumber": 2218,
        "author": {
          "gitId": "-"
        },
        "content": "                                                     FeedbackResponseAttributes response)"
      },
      {
        "lineNumber": 2219,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 2220,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(enrollmentList);"
      },
      {
        "lineNumber": 2221,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(response);"
      },
      {
        "lineNumber": 2222,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsLogic.adjustFeedbackResponseForEnrollments(enrollmentList, response);"
      },
      {
        "lineNumber": 2223,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2225,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 2226,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns returns a list of sessions that were closed within past hour."
      },
      {
        "lineNumber": 2227,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 2228,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackSessionsLogic#getFeedbackSessionsClosedWithinThePastHour()"
      },
      {
        "lineNumber": 2229,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 2230,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsClosedWithinThePastHour() {"
      },
      {
        "lineNumber": 2231,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionsClosedWithinThePastHour();"
      },
      {
        "lineNumber": 2232,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2234,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsClosingWithinTimeLimit() {"
      },
      {
        "lineNumber": 2235,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionsClosingWithinTimeLimit();"
      },
      {
        "lineNumber": 2236,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2238,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 2239,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a list of sessions that require automated emails to be sent as they are published."
      },
      {
        "lineNumber": 2240,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 2241,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackSessionsLogic#getFeedbackSessionsWhichNeedAutomatedPublishedEmailsToBeSent()"
      },
      {
        "lineNumber": 2242,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 2243,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsWhichNeedAutomatedPublishedEmailsToBeSent() {"
      },
      {
        "lineNumber": 2244,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionsWhichNeedAutomatedPublishedEmailsToBeSent();"
      },
      {
        "lineNumber": 2245,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2247,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsWhichNeedOpenEmailsToBeSent() {"
      },
      {
        "lineNumber": 2248,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionsWhichNeedOpenEmailsToBeSent();"
      },
      {
        "lineNumber": 2249,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2251,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getSectionForTeam(String courseId, String teamName) {"
      },
      {
        "lineNumber": 2252,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 2253,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(teamName);"
      },
      {
        "lineNumber": 2254,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getSectionForTeam(courseId, teamName);"
      },
      {
        "lineNumber": 2255,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2257,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalessr": 58,
      "-": 2199
    }
  },
  {
    "path": "src/main/java/teammates/logic/core/CoursesLogic.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.logic.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalessr"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.CourseDetailsBundle;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.CourseSummaryBundle;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackSessionDetailsBundle;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.InstructorPrivileges;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.SectionDetailsBundle;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.TeamDetailsBundle;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.AccountAttributes;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.CourseAttributes;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentAttributes;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityAlreadyExistsException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityDoesNotExistException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.InvalidParametersException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.TeammatesException;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Assumption;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.FieldValidator;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Logger;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.SanitizationHelper;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.StringHelper;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.storage.api.CoursesDb;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": " * Handles operations related to courses."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": " * @see CourseAttributes"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": " * @see CoursesDb"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "public final class CoursesLogic {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger log \u003d Logger.getLogger();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    private static CoursesLogic instance \u003d new CoursesLogic();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    /* Explanation: This class depends on CoursesDb class but no other *Db classes."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     * That is because reading/writing entities from/to the datastore is the"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     * responsibility of the matching *Logic class."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     * However, this class can talk to other *Logic classes. That is because"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     * the logic related to one entity type can involve the logic related to"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     * other entity types."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final CoursesDb coursesDb \u003d new CoursesDb();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final AccountsLogic accountsLogic \u003d AccountsLogic.inst();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final FeedbackSessionsLogic feedbackSessionsLogic \u003d FeedbackSessionsLogic.inst();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final InstructorsLogic instructorsLogic \u003d InstructorsLogic.inst();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final StudentsLogic studentsLogic \u003d StudentsLogic.inst();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    private CoursesLogic() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        // prevent initialization"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    public static CoursesLogic inst() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        return instance;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    public void createCourse(String courseId, String courseName, String courseTimeZone)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseAttributes courseToAdd \u003d validateAndCreateCourseAttributes(courseId, courseName, courseTimeZone);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesDb.createEntity(courseToAdd);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a Course object and an Instructor object for the Course."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    public void createCourseAndInstructor(String instructorGoogleId, String courseId, String courseName,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                                          String courseTimeZone)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        AccountAttributes courseCreator \u003d accountsLogic.getAccount(instructorGoogleId);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(\"Trying to create a course for a non-existent instructor :\" + instructorGoogleId,"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                                 courseCreator);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertTrue(\"Trying to create a course for a person who doesn\u0027t have instructor privileges :\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                                  + instructorGoogleId,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                              courseCreator.isInstructor);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        createCourse(courseId, courseName, courseTimeZone);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Create the initial instructor for the course */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorPrivileges privileges \u003d new InstructorPrivileges("
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_COOWNER);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor \u003d InstructorAttributes"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                .builder(instructorGoogleId, courseId, courseCreator.name, courseCreator.email)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                .withPrivileges(privileges)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            instructorsLogic.createInstructor(instructor);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (EntityAlreadyExistsException | InvalidParametersException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            //roll back the transaction"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            coursesDb.deleteCourse(courseId);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            String errorMessage \u003d \"Unexpected exception while trying to create instructor for a new course \""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                                  + System.lineSeparator() + instructor.toString() + System.lineSeparator()"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                                  + TeammatesException.toStringWithStackTrace(e);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            Assumption.fail(errorMessage);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the course with the specified ID."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    public CourseAttributes getCourse(String courseId) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesDb.getCourse(courseId);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the course with ID courseId is present."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isCoursePresent(String courseId) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesDb.getCourse(courseId) !\u003d null;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the course with ID courseId is a sample course."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isSampleCourse(String courseId) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(\"Course ID is null\", courseId);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        return StringHelper.isMatching(courseId, FieldValidator.REGEX_SAMPLE_COURSE_ID);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "     * Used to trigger an {@link EntityDoesNotExistException} if the course is not present."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    public void verifyCourseIsPresent(String courseId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!isCoursePresent(courseId)) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(\"Course does not exist: \" + courseId);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a list of {@link CourseDetailsBundle} for all"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "     * courses a given student is enrolled in."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param googleId The Google ID of the student"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cCourseDetailsBundle\u003e getCourseDetailsListForStudent(String googleId)"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "                throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCourseAttributes\u003e courseList \u003d getCoursesForStudentAccount(googleId);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseAttributes.sortById(courseList);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCourseDetailsBundle\u003e courseDetailsList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        for (CourseAttributes c : courseList) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            StudentAttributes s \u003d studentsLogic.getStudentForCourseIdAndGoogleId(c.getId(), googleId);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            if (s \u003d\u003d null) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "                //TODO Remove excessive logging after the reason why s can be null is found"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "                StringBuilder logMsgBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "                String logMsg \u003d \"Student is null in CoursesLogic.getCourseDetailsListForStudent(String googleId)\""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \"\u003cbr\u003e Student Google ID: \""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "                        + googleId + \"\u003cbr\u003e Course: \" + c.getId()"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \"\u003cbr\u003e All Courses Retrieved using the Google ID:\";"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "                logMsgBuilder.append(logMsg);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "                for (CourseAttributes course : courseList) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "                    logMsgBuilder.append(\"\u003cbr\u003e\").append(course.getId());"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "                log.severe(logMsgBuilder.toString());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "                //TODO Failing might not be the best course of action here."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "                //Maybe throw a custom exception and tell user to wait due to eventual consistency?"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "                Assumption.fail(\"Student should not be null at this point.\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "            // Skip the course existence check since the course ID is obtained from a"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "            // valid CourseAttributes resulting from query"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cFeedbackSessionAttributes\u003e feedbackSessionList \u003d"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "                    feedbackSessionsLogic.getFeedbackSessionsForUserInCourseSkipCheck(c.getId(), s.email);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "            CourseDetailsBundle cdd \u003d new CourseDetailsBundle(c);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "            for (FeedbackSessionAttributes fs : feedbackSessionList) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "                cdd.feedbackSessions.add(new FeedbackSessionDetailsBundle(fs));"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "            courseDetailsList.add(cdd);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        return courseDetailsList;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a list of section names for the course with ID courseId."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cString\u003e getSectionsNameForCourse(String courseId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        return getSectionsNameForCourse(courseId, false);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a list of section names for the specified course."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cString\u003e getSectionsNameForCourse(CourseAttributes course) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(\"Course is null\", course);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        return getSectionsNameForCourse(course.getId(), true);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a list of section names for a course with or without a need to"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "     * check if the course is existent."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param courseId Course ID of the course"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param isCourseVerified Determine whether it is necessary to check if the course exists"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cString\u003e getSectionsNameForCourse(String courseId, boolean isCourseVerified)"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!isCourseVerified) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "            verifyCourseIsPresent(courseId);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cStudentAttributes\u003e studentDataList \u003d studentsLogic.getStudentsForCourse(courseId);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "        Set\u003cString\u003e sectionNameSet \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        for (StudentAttributes sd : studentDataList) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!sd.section.equals(Const.DEFAULT_SECTION)) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "                sectionNameSet.add(sd.section);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e sectionNameList \u003d new ArrayList\u003c\u003e(sectionNameSet);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionNameList.sort(null);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "        return sectionNameList;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a list of {@link SectionDetailsBundle} for a"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "     * given course using course attributes and course details bundle."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param course {@link CourseAttributes}"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param cdd {@link CourseDetailsBundle}"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cSectionDetailsBundle\u003e getSectionsForCourse(CourseAttributes course, CourseDetailsBundle cdd) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(\"Course is null\", course);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cStudentAttributes\u003e students \u003d studentsLogic.getStudentsForCourse(course.getId());"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes.sortBySectionName(students);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cSectionDetailsBundle\u003e sections \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "        SectionDetailsBundle section \u003d null;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "        int teamIndexWithinSection \u003d 0;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 0; i \u003c students.size(); i++) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "            StudentAttributes s \u003d students.get(i);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "            cdd.stats.studentsTotal++;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!s.isRegistered()) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "                cdd.stats.unregisteredTotal++;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "            if (section \u003d\u003d null) { // First student of first section"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "                section \u003d new SectionDetailsBundle();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "                section.name \u003d s.section;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "                section.teams.add(new TeamDetailsBundle());"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "                cdd.stats.teamsTotal++;"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "                section.teams.get(teamIndexWithinSection).name \u003d s.team;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "                section.teams.get(teamIndexWithinSection).students.add(s);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (s.section.equals(section.name)) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "                if (s.team.equals(section.teams.get(teamIndexWithinSection).name)) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "                    section.teams.get(teamIndexWithinSection).students.add(s);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "                    teamIndexWithinSection++;"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "                    section.teams.add(new TeamDetailsBundle());"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "                    cdd.stats.teamsTotal++;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "                    section.teams.get(teamIndexWithinSection).name \u003d s.team;"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "                    section.teams.get(teamIndexWithinSection).students.add(s);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "            } else { // first student of subsequent section"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "                sections.add(section);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!section.name.equals(Const.DEFAULT_SECTION)) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "                    cdd.stats.sectionsTotal++;"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "                teamIndexWithinSection \u003d 0;"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "                section \u003d new SectionDetailsBundle();"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "                section.name \u003d s.section;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "                section.teams.add(new TeamDetailsBundle());"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "                cdd.stats.teamsTotal++;"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "                section.teams.get(teamIndexWithinSection).name \u003d s.team;"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "                section.teams.get(teamIndexWithinSection).students.add(s);"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean isLastStudent \u003d i \u003d\u003d students.size() - 1;"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isLastStudent) {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "                sections.add(section);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!section.name.equals(Const.DEFAULT_SECTION)) {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "                    cdd.stats.sectionsTotal++;"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "        return sections;"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a list of {@link SectionDetailsBundle} for a given course using courseId."
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cSectionDetailsBundle\u003e getSectionsForCourseWithoutStats(String courseId)"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCourseIsPresent(courseId);"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cStudentAttributes\u003e students \u003d studentsLogic.getStudentsForCourse(courseId);"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes.sortBySectionName(students);"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cSectionDetailsBundle\u003e sections \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "        SectionDetailsBundle section \u003d null;"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "        int teamIndexWithinSection \u003d 0;"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 0; i \u003c students.size(); i++) {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "            StudentAttributes s \u003d students.get(i);"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "            if (section \u003d\u003d null) { // First student of first section"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "                section \u003d new SectionDetailsBundle();"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "                section.name \u003d s.section;"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "                section.teams.add(new TeamDetailsBundle());"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "                section.teams.get(teamIndexWithinSection).name \u003d s.team;"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "                section.teams.get(teamIndexWithinSection).students.add(s);"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (s.section.equals(section.name)) {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "                if (s.team.equals(section.teams.get(teamIndexWithinSection).name)) {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "                    section.teams.get(teamIndexWithinSection).students.add(s);"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "                    teamIndexWithinSection++;"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "                    section.teams.add(new TeamDetailsBundle());"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "                    section.teams.get(teamIndexWithinSection).name \u003d s.team;"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "                    section.teams.get(teamIndexWithinSection).students.add(s);"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "            } else { // first student of subsequent section"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "                sections.add(section);"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "                teamIndexWithinSection \u003d 0;"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "                section \u003d new SectionDetailsBundle();"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "                section.name \u003d s.section;"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "                section.teams.add(new TeamDetailsBundle());"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "                section.teams.get(teamIndexWithinSection).name \u003d s.team;"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "                section.teams.get(teamIndexWithinSection).students.add(s);"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean isLastStudent \u003d i \u003d\u003d students.size() - 1;"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isLastStudent) {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "                sections.add(section);"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "        return sections;"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns Teams for a particular courseId.\u003cbr\u003e"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cb\u003eNote:\u003c/b\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "     * This method does not returns any Loner information presently,\u003cbr\u003e"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "     * Loner information must be returned as we decide to support loners\u003cbr\u003ein future."
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cTeamDetailsBundle\u003e getTeamsForCourse(String courseId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "        if (getCourse(courseId) \u003d\u003d null) {"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(\"The course \" + courseId + \" does not exist\");"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cStudentAttributes\u003e students \u003d studentsLogic.getStudentsForCourse(courseId);"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes.sortByTeamName(students);"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cTeamDetailsBundle\u003e teams \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "        TeamDetailsBundle team \u003d null;"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 0; i \u003c students.size(); i++) {"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "            StudentAttributes s \u003d students.get(i);"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "            // first student of first team"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "            if (team \u003d\u003d null) {"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "                team \u003d new TeamDetailsBundle();"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "                team.name \u003d s.team;"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "                team.students.add(s);"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (s.team.equals(team.name)) { // student in the same team as the previous student"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "                team.students.add(s);"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "            } else { // first student of subsequent teams (not the first team)"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "                teams.add(team);"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "                team \u003d new TeamDetailsBundle();"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "                team.name \u003d s.team;"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "                team.students.add(s);"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "            // if last iteration"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "            if (i \u003d\u003d students.size() - 1) {"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "                teams.add(team);"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "        return teams;"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the {@link CourseDetailsBundle} course details for a course using {@link CourseAttributes}."
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "    public CourseDetailsBundle getCourseSummary(CourseAttributes cd) {"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(\"Supplied parameter was null\", cd);"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseDetailsBundle cdd \u003d new CourseDetailsBundle(cd);"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "        cdd.sections \u003d (ArrayList\u003cSectionDetailsBundle\u003e) getSectionsForCourse(cd, cdd);"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "        return cdd;"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "    // TODO: reduce calls to this function, use above function instead."
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the {@link CourseDetailsBundle} course details for a course using courseId."
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "    public CourseDetailsBundle getCourseSummary(String courseId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseAttributes cd \u003d coursesDb.getCourse(courseId);"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "        if (cd \u003d\u003d null) {"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(\"The course does not exist: \" + courseId);"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "        return getCourseSummary(cd);"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the {@link CourseSummaryBundle course summary}, including its"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "     * feedback sessions using the given {@link InstructorAttributes}."
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "    public CourseSummaryBundle getCourseSummaryWithFeedbackSessionsForInstructor("
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "            InstructorAttributes instructor) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseSummaryBundle courseSummary \u003d getCourseSummaryWithoutStats(instructor.courseId);"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "        courseSummary.feedbackSessions.addAll(feedbackSessionsLogic.getFeedbackSessionListForInstructor(instructor));"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "        return courseSummary;"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the {@link CourseSummaryBundle course summary} using the {@link CourseAttributes}."
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "    public CourseSummaryBundle getCourseSummaryWithoutStats(CourseAttributes course) {"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(\"Supplied parameter was null\", course);"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "        return new CourseSummaryBundle(course);"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the {@link CourseSummaryBundle course summary} using the courseId."
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "    public CourseSummaryBundle getCourseSummaryWithoutStats(String courseId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseAttributes cd \u003d coursesDb.getCourse(courseId);"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "        if (cd \u003d\u003d null) {"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(\"The course does not exist: \" + courseId);"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "        return getCourseSummaryWithoutStats(cd);"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a list of {@link CourseAttributes} for all courses a given student is enrolled in."
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param googleId The Google ID of the student"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cCourseAttributes\u003e getCoursesForStudentAccount(String googleId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cStudentAttributes\u003e studentDataList \u003d studentsLogic.getStudentsForGoogleId(googleId);"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "        if (studentDataList.isEmpty()) {"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(\"Student with Google ID \" + googleId + \" does not exist\");"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        List\u003cString\u003e courseIds \u003d studentDataList.stream()"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                .filter(student -\u003e !getCourse(student.course).isCourseDeleted())"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                .map(StudentAttributes::getCourse)"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesDb.getCourses(courseIds);"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     * Returns a list of {@link CourseAttributes} for all courses a given instructor belongs to,"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     * except for courses in recycle bin."
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param googleId The Google ID of the instructor"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cCourseAttributes\u003e getCoursesForInstructor(String googleId) {"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "        return getCoursesForInstructor(googleId, false);"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     * Returns a list of {@link CourseAttributes} for courses a given instructor belongs to,"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     * except for courses in recycle bin."
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param googleId The Google ID of the instructor"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param omitArchived if {@code true}, omits all the archived courses from the return"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cCourseAttributes\u003e getCoursesForInstructor(String googleId, boolean omitArchived) {"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cInstructorAttributes\u003e instructorList \u003d instructorsLogic.getInstructorsForGoogleId(googleId, omitArchived);"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "        return getCoursesForInstructor(instructorList);"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     * Returns a list of {@link CourseAttributes} for all courses for a given list of instructors"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     * except for courses in Recycle Bin."
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cCourseAttributes\u003e getCoursesForInstructor(List\u003cInstructorAttributes\u003e instructorList) {"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(\"Supplied parameter was null\", instructorList);"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        List\u003cString\u003e courseIdList \u003d instructorList.stream()"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                .filter(instructor -\u003e !coursesDb.getCourse(instructor.courseId).isCourseDeleted())"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                .map(InstructorAttributes::getCourseId)"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCourseAttributes\u003e courseList \u003d coursesDb.getCourses(courseIdList);"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "        // Check that all courseIds queried returned a course."
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "        if (courseIdList.size() \u003e courseList.size()) {"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "            for (CourseAttributes ca : courseList) {"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "                courseIdList.remove(ca.getId());"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "            log.severe(\"Course(s) was deleted but the instructor still exists: \" + System.lineSeparator()"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "                    + courseIdList.toString());"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "        return courseList;"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     * Returns a list of {@link CourseAttributes} for soft-deleted courses for a given list of instructors."
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public List\u003cCourseAttributes\u003e getRecoveryCoursesForInstructors(List\u003cInstructorAttributes\u003e instructorList) {"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        Assumption.assertNotNull(\"Supplied parameter was null\", instructorList);"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        List\u003cString\u003e recoveryCourseIdList \u003d instructorList.stream()"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                .filter(instructor -\u003e coursesDb.getCourse(instructor.courseId).isCourseDeleted())"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                .map(InstructorAttributes::getCourseId)"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        List\u003cCourseAttributes\u003e recoveryCourseList \u003d coursesDb.getCourses(recoveryCourseIdList);"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        if (recoveryCourseIdList.size() \u003e recoveryCourseList.size()) {"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            for (CourseAttributes ca : recoveryCourseList) {"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                recoveryCourseIdList.remove(ca.getId());"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            log.severe(\"Course(s) was deleted but the instructor still exists: \" + System.lineSeparator()"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                    + recoveryCourseIdList.toString());"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        return recoveryCourseList;"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public CourseAttributes getRecoveryCourseForInstructor(InstructorAttributes instructor) {"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        Assumption.assertNotNull(\"Supplied parameter was null\", instructor);"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        CourseAttributes recoveryCourse \u003d coursesDb.getCourse(instructor.courseId);"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        if (recoveryCourse.isCourseDeleted()) {"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        return recoveryCourse;"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns course summaries for instructor.\u003cbr\u003e"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "     * Omits archived courses if omitArchived \u003d\u003d true\u003cbr\u003e"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param googleId The Google ID of the instructor"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Map with courseId as key, and CourseDetailsBundle as value."
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "     *         Does not include details within the course, such as feedback sessions."
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "    public Map\u003cString, CourseDetailsBundle\u003e getCourseSummariesForInstructor(String googleId, boolean omitArchived)"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorsLogic.verifyInstructorExists(googleId);"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cInstructorAttributes\u003e instructorAttributesList \u003d instructorsLogic.getInstructorsForGoogleId(googleId,"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                                         omitArchived);"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "        return getCourseSummariesForInstructor(instructorAttributesList);"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns course summaries for instructors.\u003cbr\u003e"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Map with courseId as key, and CourseDetailsBundle as value."
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "     *         Does not include details within the course, such as feedback sessions."
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "    public Map\u003cString, CourseDetailsBundle\u003e getCourseSummariesForInstructor("
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cInstructorAttributes\u003e instructorAttributesList) {"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "        HashMap\u003cString, CourseDetailsBundle\u003e courseSummaryList \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e courseIdList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "        for (InstructorAttributes instructor : instructorAttributesList) {"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "            courseIdList.add(instructor.courseId);"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCourseAttributes\u003e courseList \u003d coursesDb.getCourses(courseIdList);"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "        // Check that all courseIds queried returned a course."
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "        if (courseIdList.size() \u003e courseList.size()) {"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "            for (CourseAttributes ca : courseList) {"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "                courseIdList.remove(ca.getId());"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "            log.severe(\"Course(s) was deleted but the instructor still exists: \" + System.lineSeparator()"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "                        + courseIdList.toString());"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "        for (CourseAttributes ca : courseList) {"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "            courseSummaryList.put(ca.getId(), getCourseSummary(ca));"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "        return courseSummaryList;"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a Map (CourseId, {@link CourseSummaryBundle}"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "     * for all courses mapped to a given instructor."
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param omitArchived if {@code true}, omits all the archived courses from the return"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "    public Map\u003cString, CourseSummaryBundle\u003e getCoursesSummaryWithoutStatsForInstructor("
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "            String instructorId, boolean omitArchived) {"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cInstructorAttributes\u003e instructorList \u003d instructorsLogic.getInstructorsForGoogleId(instructorId,"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                               omitArchived);"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "        return getCourseSummaryWithoutStatsForInstructor(instructorList);"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates the course details."
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param courseId Id of the course to update"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param courseName new name of the course"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param courseTimeZone new time zone of the course"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updateCourse(String courseId, String courseName, String courseTimeZone)"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseAttributes newCourse \u003d validateAndCreateCourseAttributes(courseId, courseName, courseTimeZone);"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseAttributes oldCourse \u003d coursesDb.getCourse(newCourse.getId());"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "        if (oldCourse \u003d\u003d null) {"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(\"Trying to update a course that does not exist.\");"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesDb.updateCourse(newCourse);"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!newCourse.getTimeZone().equals(oldCourse.getTimeZone())) {"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": "            feedbackSessionsLogic.updateFeedbackSessionsTimeZoneForCourse(newCourse.getId(), newCourse.getTimeZone());"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     * Permanently deletes a course in Recycle Bin by its given corresponding ID."
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "     * This will also cascade the data in other databases which are related to this course."
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteCourseCascade(String courseId) {"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsLogic.deleteStudentsForCourse(courseId);"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorsLogic.deleteInstructorsForCourse(courseId);"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsLogic.deleteFeedbackSessionsForCourseCascade(courseId);"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesDb.deleteCourse(courseId);"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     * Permanently deletes all courses in Recycle Bin."
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     * This will also cascade the data in other databases which are related to these courses."
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public void deleteAllCoursesCascade(List\u003cInstructorAttributes\u003e instructorList) {"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        Assumption.assertNotNull(\"Supplied parameter was null\", instructorList);"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        List\u003cString\u003e recoveryCourseIdList \u003d instructorList.stream()"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                .filter(instructor -\u003e coursesDb.getCourse(instructor.courseId).isCourseDeleted())"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                .map(InstructorAttributes::getCourseId)"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        for (String courseId : recoveryCourseIdList) {"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            deleteCourseCascade(courseId);"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     * Moves a course to Recycle Bin by its given corresponding ID."
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public void moveCourseToRecovery(String courseId)"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        CourseAttributes course \u003d coursesDb.getCourse(courseId);"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        course.setDeletedAt();"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        coursesDb.updateCourse(course);"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     * Restores a course from Recycle Bin by its given corresponding ID."
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public void restoreCourseFromRecovery(String courseId)"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        CourseAttributes course \u003d coursesDb.getCourse(courseId);"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        course.resetDeletedAt();"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        coursesDb.updateCourse(course);"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     * Restores all courses from Recycle Bin."
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public void restoreAllCoursesFromRecovery(List\u003cInstructorAttributes\u003e instructorList)"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        Assumption.assertNotNull(\"Supplied parameter was null\", instructorList);"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        List\u003cString\u003e recoveryCourseIdList \u003d instructorList.stream()"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                .filter(instructor -\u003e coursesDb.getCourse(instructor.courseId).isCourseDeleted())"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                .map(InstructorAttributes::getCourseId)"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        for (String courseId : recoveryCourseIdList) {"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            restoreCourseFromRecovery(courseId);"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": "    private Map\u003cString, CourseSummaryBundle\u003e getCourseSummaryWithoutStatsForInstructor("
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cInstructorAttributes\u003e instructorAttributesList) {"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": "        HashMap\u003cString, CourseSummaryBundle\u003e courseSummaryList \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        List\u003cString\u003e courseIdList \u003d instructorAttributesList.stream()"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                .filter(instructor -\u003e !coursesDb.getCourse(instructor.courseId).isCourseDeleted())"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                .map(InstructorAttributes::getCourseId)"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCourseAttributes\u003e courseList \u003d coursesDb.getCourses(courseIdList);"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": "        // Check that all courseIds queried returned a course."
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": "        if (courseIdList.size() \u003e courseList.size()) {"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": "            for (CourseAttributes ca : courseList) {"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": "                courseIdList.remove(ca.getId());"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": "            log.severe(\"Course(s) was deleted but the instructor still exists: \" + System.lineSeparator()"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": "                    + courseIdList.toString());"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": "        for (CourseAttributes ca : courseList) {"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": "            courseSummaryList.put(ca.getId(), getCourseSummaryWithoutStats(ca));"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": "        return courseSummaryList;"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a CSV for the details (name, email, status) of all students belonging to a given course."
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getCourseStudentListAsCsv(String courseId, String googleId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, CourseDetailsBundle\u003e courses \u003d getCourseSummariesForInstructor(googleId, false);"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseDetailsBundle course \u003d courses.get(courseId);"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean hasSection \u003d hasIndicatedSections(courseId);"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder export \u003d new StringBuilder(100);"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseInfo \u003d \"Course ID,\" + SanitizationHelper.sanitizeForCsv(courseId) + System.lineSeparator()"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": "                      + \"Course Name,\" + SanitizationHelper.sanitizeForCsv(course.course.getName())"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "-"
        },
        "content": "                      + System.lineSeparator() + System.lineSeparator() + System.lineSeparator();"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": "        export.append(courseInfo);"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "-"
        },
        "content": "        String header \u003d (hasSection ? \"Section,\" : \"\") + \"Team,Full Name,Last Name,Status,Email\" + System.lineSeparator();"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": "        export.append(header);"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "-"
        },
        "content": "        for (SectionDetailsBundle section : course.sections) {"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "-"
        },
        "content": "            for (TeamDetailsBundle team : section.teams) {"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "-"
        },
        "content": "                for (StudentAttributes student : team.students) {"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "-"
        },
        "content": "                    String studentStatus \u003d null;"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (student.googleId \u003d\u003d null || student.googleId.isEmpty()) {"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "-"
        },
        "content": "                        studentStatus \u003d Const.STUDENT_COURSE_STATUS_YET_TO_JOIN;"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": "                        studentStatus \u003d Const.STUDENT_COURSE_STATUS_JOINED;"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (hasSection) {"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": "                        export.append(SanitizationHelper.sanitizeForCsv(section.name)).append(\u0027,\u0027);"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": "                    export.append(SanitizationHelper.sanitizeForCsv(team.name) + \u0027,\u0027"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": "                            + SanitizationHelper.sanitizeForCsv(StringHelper.removeExtraSpace(student.name)) + \u0027,\u0027"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": "                            + SanitizationHelper.sanitizeForCsv(StringHelper.removeExtraSpace(student.lastName)) + \u0027,\u0027"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": "                            + SanitizationHelper.sanitizeForCsv(studentStatus) + \u0027,\u0027"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": "                            + SanitizationHelper.sanitizeForCsv(student.email) + System.lineSeparator());"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": "        return export.toString();"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean hasIndicatedSections(String courseId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCourseIsPresent(courseId);"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cStudentAttributes\u003e studentList \u003d studentsLogic.getStudentsForCourse(courseId);"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": "        for (StudentAttributes student : studentList) {"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!student.section.equals(Const.DEFAULT_SECTION)) {"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "-"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a list of courseIds for all archived courses for all instructors."
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cString\u003e getArchivedCourseIds(List\u003cCourseAttributes\u003e allCourses,"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "-"
        },
        "content": "                                             Map\u003cString, InstructorAttributes\u003e instructorsForCourses) {"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e archivedCourseIds \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": "        for (CourseAttributes course : allCourses) {"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": "            InstructorAttributes instructor \u003d instructorsForCourses.get(course.getId());"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": "            if (instructor.isArchived) {"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": "                archivedCourseIds.add(course.getId());"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": "        return archivedCourseIds;"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks that {@code courseTimeZone} is valid and then returns a {@link CourseAttributes}."
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": "     * Field validation is usually done in {@link CoursesDb} by calling {@link CourseAttributes#getInvalidityInfo()}."
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": "     * However, a {@link CourseAttributes} cannot be created with an invalid time zone string."
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": "     * Hence, validation of this field is carried out here."
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException containing error messages for all fields if {@code courseTimeZone} is invalid"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": "    private CourseAttributes validateAndCreateCourseAttributes("
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": "            String courseId, String courseName, String courseTimeZone) throws InvalidParametersException {"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": "        // Imitate `CourseAttributes.getInvalidityInfo`"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": "        FieldValidator validator \u003d new FieldValidator();"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": "        String timeZoneErrorMessage \u003d validator.getInvalidityInfoForTimeZone(courseTimeZone);"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!timeZoneErrorMessage.isEmpty()) {"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": "            // Leave validation of other fields to `CourseAttributes.getInvalidityInfo`"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": "            CourseAttributes dummyCourse \u003d CourseAttributes"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": "                    .builder(courseId, courseName, Const.DEFAULT_TIME_ZONE)"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": "                    .build();"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cString\u003e errors \u003d dummyCourse.getInvalidityInfo();"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": "            errors.add(timeZoneErrorMessage);"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "-"
        },
        "content": "            // Imitate exception throwing in `CoursesDb`"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new InvalidParametersException(errors);"
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "-"
        },
        "content": "        // If time zone field is valid, leave validation  of other fields to `CoursesDb` like usual"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "-"
        },
        "content": "        return CourseAttributes"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "-"
        },
        "content": "                .builder(courseId, courseName, ZoneId.of(courseTimeZone))"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalessr": 110,
      "-": 739
    }
  },
  {
    "path": "src/main/java/teammates/logic/core/FeedbackSessionsLogic.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.logic.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map.Entry;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalessr"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.CourseRoster;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackParticipantType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackSessionDetailsBundle;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackSessionQuestionsBundle;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackSessionResponseStatus;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackSessionResultsBundle;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.UserRole;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentAttributes;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.questions.FeedbackQuestionDetails;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityAlreadyExistsException;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityDoesNotExistException;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.ExceedingRangeException;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.InvalidParametersException;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.TeammatesException;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Assumption;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const.SystemParams;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Logger;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.SanitizationHelper;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.StringHelper;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.TimeHelper;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.storage.api.FeedbackSessionsDb;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": " * Handles operations related to feedback sessions."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": " * @see FeedbackSessionAttributes"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": " * @see FeedbackSessionsDb"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "public final class FeedbackSessionsLogic {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String QUESTION_ID_FOR_RESPONSE_RATE \u003d \"-1\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final int EMAIL_NAME_PAIR \u003d 0;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final int EMAIL_LASTNAME_PAIR \u003d 1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final int EMAIL_TEAMNAME_PAIR \u003d 2;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String PARAM_FROM_SECTION \u003d \"fromSection\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String PARAM_IN_SECTION \u003d \"inSection\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String PARAM_IS_INCLUDE_RESPONSE_STATUS \u003d \"isIncludeResponseStatus\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String PARAM_QUESTION_ID \u003d \"questionId\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String PARAM_RANGE \u003d \"range\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String PARAM_SECTION \u003d \"section\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String PARAM_TO_SECTION \u003d \"toSection\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String PARAM_VIEW_TYPE \u003d \"viewType\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String ASSUMPTION_FAIL_DELETE_INSTRUCTOR \u003d \"Fail to delete instructor respondent for \";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String ASSUMPTION_FAIL_RESPONSE_ORIGIN \u003d \"Client did not indicate the origin of the response(s)\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String ERROR_NUMBER_OF_RESPONSES_EXCEEDS_RANGE \u003d \"Number of responses exceeds the limited range\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String ERROR_NON_EXISTENT_COURSE \u003d \"Error getting feedback session(s): Course does not exist.\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String ERROR_NON_EXISTENT_STUDENT \u003d \"Error getting feedback session(s): Student does not exist.\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String ERROR_NON_EXISTENT_FS_STRING_FORMAT \u003d \"Trying to %s a non-existent feedback session: \";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String ERROR_NON_EXISTENT_FS_GET \u003d String.format(ERROR_NON_EXISTENT_FS_STRING_FORMAT, \"get\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String ERROR_NON_EXISTENT_FS_UPDATE \u003d String.format(ERROR_NON_EXISTENT_FS_STRING_FORMAT, \"update\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String ERROR_NON_EXISTENT_FS_CHECK \u003d String.format(ERROR_NON_EXISTENT_FS_STRING_FORMAT, \"check\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String ERROR_NON_EXISTENT_FS_VIEW \u003d String.format(ERROR_NON_EXISTENT_FS_STRING_FORMAT, \"view\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String ERROR_FS_ALREADY_PUBLISH \u003d \"Error publishing feedback session: \""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                                                           + \"Session has already been published.\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String ERROR_FS_ALREADY_UNPUBLISH \u003d \"Error unpublishing feedback session: \""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                                                             + \"Session has already been unpublished.\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger log \u003d Logger.getLogger();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    private static FeedbackSessionsLogic instance \u003d new FeedbackSessionsLogic();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final FeedbackSessionsDb fsDb \u003d new FeedbackSessionsDb();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final CoursesLogic coursesLogic \u003d CoursesLogic.inst();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final FeedbackQuestionsLogic fqLogic \u003d FeedbackQuestionsLogic.inst();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final FeedbackResponsesLogic frLogic \u003d FeedbackResponsesLogic.inst();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final FeedbackResponseCommentsLogic frcLogic \u003d FeedbackResponseCommentsLogic.inst();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final InstructorsLogic instructorsLogic \u003d InstructorsLogic.inst();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final StudentsLogic studentsLogic \u003d StudentsLogic.inst();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    private FeedbackSessionsLogic() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        // prevent initialization"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    public static FeedbackSessionsLogic inst() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        return instance;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    // TODO: in general, try to reduce method length and nesting-level in"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    // Feedback*Logic classes."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    public void createFeedbackSession(FeedbackSessionAttributes fsa)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        fsDb.createEntity(fsa);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getAllOpenFeedbackSessions(Instant rangeStart, Instant rangeEnd) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        return fsDb.getAllOpenFeedbackSessions(rangeStart, rangeEnd);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "     * This method returns a single feedback session. Returns null if not found."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionAttributes getFeedbackSession(String feedbackSessionName, String courseId) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        return fsDb.getFeedbackSession(courseId, feedbackSessionName);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsForCourse("
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            String courseId) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        return fsDb.getFeedbackSessionsForCourse(courseId);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionAttributes copyFeedbackSession(String newFeedbackSessionName, String newCourseId,"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "            ZoneId newTimeZone, String feedbackSessionName, String courseId, String instructorEmail)"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityAlreadyExistsException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes copiedFeedbackSession \u003d getFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        copiedFeedbackSession.setCreatorEmail(instructorEmail);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        copiedFeedbackSession.setFeedbackSessionName(newFeedbackSessionName);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        copiedFeedbackSession.setCourseId(newCourseId);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        copiedFeedbackSession.setTimeZone(newTimeZone);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        copiedFeedbackSession.setCreatedTime(Instant.now());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        copiedFeedbackSession.setRespondingInstructorList(new HashSet\u003cString\u003e());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        copiedFeedbackSession.setRespondingStudentList(new HashSet\u003cString\u003e());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        fsDb.createEntity(copiedFeedbackSession);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackQuestionAttributes\u003e feedbackQuestions \u003d"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "                fqLogic.getFeedbackQuestionsForSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackQuestionAttributes question : feedbackQuestions) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            question.courseId \u003d newCourseId;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            question.feedbackSessionName \u003d newFeedbackSessionName;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            question.creatorEmail \u003d instructorEmail;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            fqLogic.createFeedbackQuestionNoIntegrityCheck(question, question.questionNumber);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        return copiedFeedbackSession;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks if the specified course exists, then gets the feedback sessions for"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "     * the specified user in the course if it does exist."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return a list of viewable feedback sessions for any user for his course."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsForUserInCourse("
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "            String courseId, String userEmail)"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!coursesLogic.isCoursePresent(courseId)) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(ERROR_NON_EXISTENT_COURSE);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackSessionsForUserInCourseSkipCheck(courseId, userEmail);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the feedback sessions for the specified user in the specified course"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "     * without checking for the course\u0027s existence.\u003cbr\u003e"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "     * This method is usually called after the course\u0027s existence is assumed or"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "     * has been verified."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return a list of viewable feedback sessions for any user for his course."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsForUserInCourseSkipCheck("
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            String courseId, String userEmail) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e sessions \u003d"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "                getFeedbackSessionsForCourse(courseId);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e viewableSessions \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!sessions.isEmpty()) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "            InstructorAttributes instructor \u003d instructorsLogic.getInstructorForEmail(courseId, userEmail);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean isInstructorOfCourse \u003d instructor !\u003d null;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            for (FeedbackSessionAttributes session : sessions) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "                if (isFeedbackSessionViewableTo(session, isInstructorOfCourse)) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "                    viewableSessions.add(session);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        return viewableSessions;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if there is some open or published email sent for the course."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param courseId - ID of the course"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isOpenOrPublishedEmailSentForTheCourse(String courseId) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e sessions \u003d getFeedbackSessionsForCourse(courseId);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackSessionAttributes session : sessions) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            if (session.isSentOpenEmail() || session.isSentPublishedEmail()) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code List} of all feedback sessions bundled with their"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "     * response statistics for a instructor given by his googleId.\u003cbr\u003e"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "     * Does not return private sessions unless the instructor is the creator."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionDetailsBundle\u003e getFeedbackSessionDetailsForInstructor("
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "            String googleId)"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackSessionDetailsForInstructor(googleId, false);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code List} of all feedback sessions bundled with their"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "     * response statistics for a instructor given by his googleId.\u003cbr\u003e"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "     * Does not return private sessions unless the instructor is the creator."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr\u003e"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "     * Omits archived sessions if omitArchived \u003d\u003d true"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionDetailsBundle\u003e getFeedbackSessionDetailsForInstructor("
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "            String googleId, boolean omitArchived)"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionDetailsBundle\u003e fsDetails \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cInstructorAttributes\u003e instructors \u003d"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorsLogic.getInstructorsForGoogleId(googleId, omitArchived);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "        for (InstructorAttributes instructor : instructors) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "            fsDetails.addAll(getFeedbackSessionDetailsForCourse(instructor.courseId));"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        return fsDetails;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code List} of all feedback sessions WITHOUT their response"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "     * statistics for a instructor given by his googleId.\u003cbr\u003e"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "     * Does not return private sessions unless the instructor is the creator."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr\u003e"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "     * Omits sessions from archived courses if omitArchived \u003d\u003d true"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsListForInstructor(String googleId, boolean omitArchived) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cInstructorAttributes\u003e instructorList \u003d"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorsLogic.getInstructorsForGoogleId(googleId, omitArchived);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackSessionsListForInstructor(instructorList);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsListForInstructor("
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cInstructorAttributes\u003e instructorList) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        List\u003cInstructorAttributes\u003e courseNotDeletedInstructorList \u003d instructorList.stream()"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                .filter(instructor -\u003e !coursesLogic.getCourse(instructor.courseId).isCourseDeleted())"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e fsList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        for (InstructorAttributes instructor : courseNotDeletedInstructorList) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "            fsList.addAll(getFeedbackSessionsListForCourse(instructor.courseId));"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "        return fsList;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionListForInstructor("
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "            InstructorAttributes instructor) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        if (coursesLogic.getCourse(instructor.courseId).isCourseDeleted()) {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackSessionsListForCourse(instructor.courseId);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets {@code FeedbackQuestions} and previously filled"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code FeedbackResponses} that an instructor can view/submit as a"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@link FeedbackSessionQuestionsBundle}."
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionQuestionsBundle getFeedbackSessionQuestionsForInstructor("
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail)"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes fsa \u003d fsDb.getFeedbackSession("
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "                courseId, feedbackSessionName);"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "        if (fsa \u003d\u003d null) {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(ERROR_NON_EXISTENT_FS_GET + courseId + \"/\" + feedbackSessionName);"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor \u003d instructorsLogic.getInstructorForEmail(courseId, userEmail);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cFeedbackQuestionAttributes, List\u003cFeedbackResponseAttributes\u003e\u003e bundle \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, Map\u003cString, String\u003e\u003e recipientList \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackQuestionAttributes\u003e questions \u003d"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "                fqLogic.getFeedbackQuestionsForInstructor(feedbackSessionName,"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "                        courseId, userEmail);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructorGiver \u003d instructor;"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackQuestionAttributes question : questions) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "            updateBundleAndRecipientListWithResponsesForInstructor(courseId,"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "                    userEmail, fsa, instructor, bundle, recipientList,"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "                    question, instructorGiver, null);"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        return new FeedbackSessionQuestionsBundle(fsa, bundle, recipientList);"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionQuestionsBundle getFeedbackSessionQuestionsForInstructor("
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String feedbackQuestionId, String userEmail)"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes fsa \u003d fsDb.getFeedbackSession("
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "                courseId, feedbackSessionName);"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "        if (fsa \u003d\u003d null) {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(ERROR_NON_EXISTENT_FS_GET + courseId + \"/\" + feedbackSessionName);"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor \u003d instructorsLogic.getInstructorForEmail(courseId, userEmail);"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cFeedbackQuestionAttributes, List\u003cFeedbackResponseAttributes\u003e\u003e bundle \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, Map\u003cString, String\u003e\u003e recipientList \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackQuestionAttributes question \u003d fqLogic.getFeedbackQuestion(feedbackQuestionId);"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructorGiver \u003d instructor;"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "        updateBundleAndRecipientListWithResponsesForInstructor(courseId,"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "                userEmail, fsa, instructor, bundle, recipientList,"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "                question, instructorGiver, null);"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "        return new FeedbackSessionQuestionsBundle(fsa, bundle, recipientList);"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "    private void updateBundleAndRecipientListWithResponsesForInstructor("
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "            String courseId,"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "            String userEmail,"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackSessionAttributes fsa,"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "            InstructorAttributes instructor,"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "            Map\u003cFeedbackQuestionAttributes, List\u003cFeedbackResponseAttributes\u003e\u003e bundle,"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "            Map\u003cString, Map\u003cString, String\u003e\u003e recipientList,"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes question,"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "            InstructorAttributes instructorGiver, StudentAttributes studentGiver)"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responses \u003d"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "                frLogic.getFeedbackResponsesFromGiverForQuestion("
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "                        question.getId(), userEmail);"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e recipients \u003d"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "                fqLogic.getRecipientsForQuestion(question, userEmail, instructorGiver, studentGiver);"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "        // instructor can only see students in allowed sections for him/her"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "        if (question.recipientType.equals(FeedbackParticipantType.STUDENTS)) {"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "            recipients.entrySet().removeIf(studentEntry -\u003e {"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "                StudentAttributes student \u003d studentsLogic.getStudentForEmail(courseId, studentEntry.getKey());"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "                return !instructor.isAllowedForPrivilege(student.section,"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "                        fsa.getFeedbackSessionName(), Const.ParamsNames.INSTRUCTOR_PERMISSION_SUBMIT_SESSION_IN_SECTIONS);"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "        // instructor can only see teams in allowed sections for him/her"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "        if (question.recipientType.equals(FeedbackParticipantType.TEAMS)) {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "            recipients.entrySet().removeIf(teamEntry -\u003e {"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "                String teamSection \u003d studentsLogic.getSectionForTeam(courseId, teamEntry.getKey());"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "                return !instructor.isAllowedForPrivilege(teamSection,"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "                        fsa.getFeedbackSessionName(), Const.ParamsNames.INSTRUCTOR_PERMISSION_SUBMIT_SESSION_IN_SECTIONS);"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "        normalizeMaximumResponseEntities(question, recipients);"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "        bundle.put(question, responses);"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "        recipientList.put(question.getId(), recipients);"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets {@code FeedbackQuestions} and previously filled"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code FeedbackResponses} that a student can view/submit as a"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@link FeedbackSessionQuestionsBundle}."
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionQuestionsBundle getFeedbackSessionQuestionsForStudent("
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail)"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes fsa \u003d fsDb.getFeedbackSession("
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "                courseId, feedbackSessionName);"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "        if (fsa \u003d\u003d null) {"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(ERROR_NON_EXISTENT_FS_GET + courseId + \"/\" + feedbackSessionName);"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student \u003d studentsLogic.getStudentForEmail(courseId, userEmail);"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "        if (student \u003d\u003d null) {"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(ERROR_NON_EXISTENT_STUDENT);"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cFeedbackQuestionAttributes, List\u003cFeedbackResponseAttributes\u003e\u003e bundle \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, Map\u003cString, String\u003e\u003e recipientList \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackQuestionAttributes\u003e questions \u003d fqLogic.getFeedbackQuestionsForStudents(feedbackSessionName,"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "                courseId);"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "        Set\u003cString\u003e hiddenInstructorEmails \u003d null;"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackQuestionAttributes question : questions) {"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "            if (question.getRecipientType() \u003d\u003d FeedbackParticipantType.INSTRUCTORS) {"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "                hiddenInstructorEmails \u003d getHiddenInstructorEmails(courseId);"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackQuestionAttributes question : questions) {"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "            updateBundleAndRecipientListWithResponsesForStudent(userEmail, student,"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "                    bundle, recipientList, question, hiddenInstructorEmails);"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "        return new FeedbackSessionQuestionsBundle(fsa, bundle, recipientList);"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionQuestionsBundle getFeedbackSessionQuestionsForStudent("
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String feedbackQuestionId, String userEmail)"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes fsa \u003d fsDb.getFeedbackSession("
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "                courseId, feedbackSessionName);"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "        if (fsa \u003d\u003d null) {"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(ERROR_NON_EXISTENT_FS_GET + courseId + \"/\" + feedbackSessionName);"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student \u003d studentsLogic.getStudentForEmail(courseId, userEmail);"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "        if (student \u003d\u003d null) {"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(ERROR_NON_EXISTENT_STUDENT);"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cFeedbackQuestionAttributes, List\u003cFeedbackResponseAttributes\u003e\u003e bundle \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, Map\u003cString, String\u003e\u003e recipientList \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackQuestionAttributes question \u003d fqLogic.getFeedbackQuestion(feedbackQuestionId);"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "        Set\u003cString\u003e hiddenInstructorEmails \u003d null;"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "        if (question.getRecipientType() \u003d\u003d FeedbackParticipantType.INSTRUCTORS) {"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "            hiddenInstructorEmails \u003d getHiddenInstructorEmails(courseId);"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "        updateBundleAndRecipientListWithResponsesForStudent(userEmail, student,"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "                bundle, recipientList, question, hiddenInstructorEmails);"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "        return new FeedbackSessionQuestionsBundle(fsa, bundle, recipientList);"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "    private void updateBundleAndRecipientListWithResponsesForStudent("
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "            String userEmail,"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "            StudentAttributes student,"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "            Map\u003cFeedbackQuestionAttributes, List\u003cFeedbackResponseAttributes\u003e\u003e bundle,"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "            Map\u003cString, Map\u003cString, String\u003e\u003e recipientList,"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes question,"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "            Set\u003cString\u003e hiddenInstructorEmails)"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responses \u003d"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "                frLogic.getFeedbackResponsesFromStudentOrTeamForQuestion("
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "                        question, student);"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e recipients \u003d"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "                fqLogic.getRecipientsForQuestion(question, userEmail, null, student);"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "        removeHiddenInstructors(question, responses, recipients, hiddenInstructorEmails);"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "        normalizeMaximumResponseEntities(question, recipients);"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "        bundle.put(question, responses);"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "        recipientList.put(question.getId(), recipients);"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "     * Removes instructors who are not displayed to students from"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code recipients}. Responses to the hidden instructors are also removed"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "     * from {@code responses}."
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param question"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "     *            the feedback question"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param responses"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "     *            a {@link List} of feedback responses to the {@code question}"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param recipients"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "     *            a {@link Map} that maps the emails of the recipients to their"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "     *            names"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param hiddenInstructorEmails"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "     *            a {@link Set} of emails of the instructors who are not"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "     *            displayed to students"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "    private void removeHiddenInstructors(FeedbackQuestionAttributes question,"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "                                         List\u003cFeedbackResponseAttributes\u003e responses,"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "                                         Map\u003cString, String\u003e recipients,"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "                                         Set\u003cString\u003e hiddenInstructorEmails) {"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isNoChangeRequired \u003d hiddenInstructorEmails \u003d\u003d null"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "                                   || hiddenInstructorEmails.isEmpty()"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "                                   || question.getRecipientType() !\u003d FeedbackParticipantType.INSTRUCTORS;"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isNoChangeRequired) {"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String instructorEmail : hiddenInstructorEmails) {"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "            if (recipients.containsKey(instructorEmail)) {"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "                recipients.remove(instructorEmail);"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "            // Remove responses to the hidden instructors if they have been stored already"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "            responses.removeIf(response -\u003e response.recipient.equals(instructorEmail));"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@link Set} of emails of the instructors who are not displayed"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "     * to students in the course specified by {@code courseId}."
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param courseId"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "     *            the ID of the course"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "    private Set\u003cString\u003e getHiddenInstructorEmails(String courseId) {"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cInstructorAttributes\u003e instructors \u003d instructorsLogic.getInstructorsForCourse(courseId);"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "        Set\u003cString\u003e hiddenInstructorEmails \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "        for (InstructorAttributes instructor : instructors) {"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!instructor.isDisplayedToStudents()) {"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "                hiddenInstructorEmails.add(instructor.email);"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "        return hiddenInstructorEmails;"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the response rate status for a session."
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResponseStatus getFeedbackSessionResponseStatus(String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes session \u003d fsDb.getFeedbackSession("
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "                courseId, feedbackSessionName);"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "        if (session \u003d\u003d null) {"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(ERROR_NON_EXISTENT_FS_VIEW + courseId + \"/\" + feedbackSessionName);"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackQuestionAttributes\u003e allQuestions \u003d fqLogic.getFeedbackQuestionsForSession(feedbackSessionName,"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "                        courseId);"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseRoster roster \u003d new CourseRoster(studentsLogic.getStudentsForCourse(courseId),"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "                                               instructorsLogic.getInstructorsForCourse(courseId));"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackSessionResponseStatus(session, roster, allQuestions);"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets results of a feedback session to show to an instructor from an indicated question."
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "     * This will not retrieve the list of comments for this question."
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorFromQuestion("
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail, String questionId)"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "                    throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "        // Load details of students and instructors once and pass it to callee"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "        // methods"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "        // (rather than loading them many times)."
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseRoster roster \u003d new CourseRoster("
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "                studentsLogic.getStudentsForCourse(courseId),"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorsLogic.getInstructorsForCourse(courseId));"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_IS_INCLUDE_RESPONSE_STATUS, \"true\");"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_IN_SECTION, \"false\");"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_FROM_SECTION, \"false\");"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_TO_SECTION, \"false\");"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_QUESTION_ID, questionId);"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackSessionResultsForUserWithParams(feedbackSessionName, courseId, userEmail,"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "                                                          UserRole.INSTRUCTOR, roster, params);"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets results of a feedback session to show to an instructor from an indicated question"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "     * and in a section."
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "     * This will not retrieve the list of comments for this question."
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorFromQuestionInSection("
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "                                                String feedbackSessionName, String courseId, String userEmail,"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "                                                String questionId, String selectedSection)"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "                                        throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseRoster roster \u003d new CourseRoster("
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "                studentsLogic.getStudentsForCourse(courseId),"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorsLogic.getInstructorsForCourse(courseId));"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_IS_INCLUDE_RESPONSE_STATUS, \"true\");"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_IN_SECTION, \"true\");"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_FROM_SECTION, \"false\");"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_TO_SECTION, \"false\");"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_QUESTION_ID, questionId);"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_SECTION, selectedSection);"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackSessionResultsForUserWithParams(feedbackSessionName, courseId, userEmail,"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "                                                          UserRole.INSTRUCTOR, roster, params);"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets results of a feedback session to show to an instructor in an indicated range."
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorWithinRangeFromView("
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail, int range, String viewType)"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackSessionResultsForInstructorInSectionWithinRangeFromView("
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionName, courseId, userEmail, null, range, viewType);"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets results of a feedback session to show to an instructor in a section in an indicated range."
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorInSectionWithinRangeFromView("
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail, String section, int range, String viewType)"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseRoster roster \u003d new CourseRoster("
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "                studentsLogic.getStudentsForCourse(courseId),"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorsLogic.getInstructorsForCourse(courseId));"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_IS_INCLUDE_RESPONSE_STATUS, \"true\");"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_IN_SECTION, \"false\");"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_FROM_SECTION, \"true\");"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_TO_SECTION, \"false\");"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_SECTION, section);"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "        if (range \u003e 0) {"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "            params.put(PARAM_RANGE, String.valueOf(range));"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_VIEW_TYPE, viewType);"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackSessionResultsForUserWithParams(feedbackSessionName, courseId, userEmail,"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "                                                          UserRole.INSTRUCTOR, roster, params);"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets results of a feedback session to show to an instructor in a section in an indicated range."
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorFromSectionWithinRange("
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail, String section, int range)"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseRoster roster \u003d new CourseRoster("
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "                studentsLogic.getStudentsForCourse(courseId),"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorsLogic.getInstructorsForCourse(courseId));"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_IS_INCLUDE_RESPONSE_STATUS, \"true\");"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_IN_SECTION, \"false\");"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_FROM_SECTION, \"true\");"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_TO_SECTION, \"false\");"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_SECTION, section);"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "        if (range \u003e 0) {"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "            params.put(PARAM_RANGE, String.valueOf(range));"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackSessionResultsForUserWithParams(feedbackSessionName, courseId, userEmail,"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": "                                                          UserRole.INSTRUCTOR, roster, params);"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets results of a feedback session to show to an instructor in a section in an indicated range."
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorToSectionWithinRange("
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail, String section, int range)"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseRoster roster \u003d new CourseRoster("
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": "                studentsLogic.getStudentsForCourse(courseId),"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorsLogic.getInstructorsForCourse(courseId));"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_IS_INCLUDE_RESPONSE_STATUS, \"true\");"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_IN_SECTION, \"false\");"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_FROM_SECTION, \"false\");"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_TO_SECTION, \"true\");"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_SECTION, section);"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "        if (range \u003e 0) {"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "            params.put(PARAM_RANGE, String.valueOf(range));"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackSessionResultsForUserWithParams(feedbackSessionName, courseId, userEmail,"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": "                                                          UserRole.INSTRUCTOR, roster, params);"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets results of a feedback session to show to an instructor."
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructor("
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail)"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackSessionResultsForInstructorInSection(feedbackSessionName, courseId, userEmail, null);"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets results of a feedback session to show to an instructor for a specific section."
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorInSection("
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail,"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": "            String section)"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseRoster roster \u003d new CourseRoster("
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": "                studentsLogic.getStudentsForCourse(courseId),"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorsLogic.getInstructorsForCourse(courseId));"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_IS_INCLUDE_RESPONSE_STATUS, \"true\");"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_IN_SECTION, \"true\");"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_FROM_SECTION, \"false\");"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_TO_SECTION, \"false\");"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_SECTION, section);"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackSessionResultsForUserWithParams(feedbackSessionName,"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": "                courseId, userEmail, UserRole.INSTRUCTOR, roster, params);"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets results of  a feedback session to show to an instructor from a specific section."
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorFromSection("
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail,"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": "            String section)"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseRoster roster \u003d new CourseRoster("
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": "                studentsLogic.getStudentsForCourse(courseId),"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorsLogic.getInstructorsForCourse(courseId));"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_IS_INCLUDE_RESPONSE_STATUS, \"false\");"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_IN_SECTION, \"false\");"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_FROM_SECTION, \"true\");"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_TO_SECTION, \"false\");"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_SECTION, section);"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackSessionResultsForUserWithParams(feedbackSessionName,"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": "                courseId, userEmail, UserRole.INSTRUCTOR, roster, params);"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets results of  a feedback session to show to an instructor to a specific section."
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorToSection("
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail,"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": "            String section)"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseRoster roster \u003d new CourseRoster("
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": "                studentsLogic.getStudentsForCourse(courseId),"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorsLogic.getInstructorsForCourse(courseId));"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_IS_INCLUDE_RESPONSE_STATUS, \"true\");"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_IN_SECTION, \"false\");"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_FROM_SECTION, \"false\");"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_TO_SECTION, \"true\");"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_SECTION, section);"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackSessionResultsForUserWithParams(feedbackSessionName,"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": "                courseId, userEmail, UserRole.INSTRUCTOR, roster, params);"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets results of a feedback session to show to a student."
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForStudent("
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail)"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackSessionResultsForUserInSectionByQuestions("
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionName, courseId, userEmail,"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": "                UserRole.STUDENT, null);"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets results of a feedback session to show to a student."
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForStudent("
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail, CourseRoster roster)"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackSessionResultsForUserInSectionByQuestions("
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionName, courseId, userEmail,"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": "                UserRole.STUDENT, null, roster);"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getFeedbackSessionResultsSummaryAsCsv("
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail,"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": "            String questionId, boolean isMissingResponsesShown, boolean isStatsShown)"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, ExceedingRangeException {"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackSessionResultsSummaryInSectionAsCsv("
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionName, courseId, userEmail, null, questionId,"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": "                isMissingResponsesShown, isStatsShown);"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getFeedbackSessionResultsSummaryInSectionAsCsv("
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail,"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": "            String section, String questionId, boolean isMissingResponsesShown, boolean isStatsShown)"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, ExceedingRangeException {"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionResultsBundle results;"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": "        int indicatedRange \u003d section \u003d\u003d null ? Const.INSTRUCTOR_VIEW_RESPONSE_LIMIT : -1;"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": "        if (questionId \u003d\u003d null) {"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": "            results \u003d getFeedbackSessionResultsForInstructorInSectionWithinRangeFromView("
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionName, courseId, userEmail, section,"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "-"
        },
        "content": "                indicatedRange, Const.FeedbackSessionResults.GRQ_SORT_TYPE);"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (section \u003d\u003d null) {"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": "            results \u003d getFeedbackSessionResultsForInstructorFromQuestion("
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": "                    feedbackSessionName, courseId, userEmail, questionId);"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": "            results \u003d getFeedbackSessionResultsForInstructorFromQuestionInSection("
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": "                    feedbackSessionName, courseId, userEmail, questionId, section);"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!results.isComplete) {"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ExceedingRangeException(ERROR_NUMBER_OF_RESPONSES_EXCEEDS_RANGE);"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "        // sort responses by giver \u003e recipient \u003e qnNumber"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": "        results.responses.sort(results.compareByGiverRecipientQuestion);"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder exportBuilder \u003d new StringBuilder(100);"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": "        exportBuilder.append(String.format(\"Course,%s\","
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": "                             SanitizationHelper.sanitizeForCsv(results.feedbackSession.getCourseId())))"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": "                     .append(System.lineSeparator())"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": "                     .append(String.format(\"Session Name,%s\","
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": "                             SanitizationHelper.sanitizeForCsv(results.feedbackSession.getFeedbackSessionName())))"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": "                     .append(System.lineSeparator());"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": "        if (section !\u003d null) {"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": "            exportBuilder.append(String.format(\"Section Name,%s\", SanitizationHelper.sanitizeForCsv(section)))"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": "                         .append(System.lineSeparator());"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": "        exportBuilder.append(System.lineSeparator()).append(System.lineSeparator());"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": "        Set\u003cEntry\u003cFeedbackQuestionAttributes, List\u003cFeedbackResponseAttributes\u003e\u003e\u003e entrySet \u003d"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "-"
        },
        "content": "                results.getQuestionResponseMap().entrySet();"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": "        for (Map.Entry\u003cFeedbackQuestionAttributes, List\u003cFeedbackResponseAttributes\u003e\u003e entry : entrySet) {"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": "            exportBuilder.append(getFeedbackSessionResultsForQuestionInCsvFormat("
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "-"
        },
        "content": "                    results, entry, isMissingResponsesShown, isStatsShown, section));"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "-"
        },
        "content": "        return exportBuilder.toString();"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "-"
        },
        "content": "    private StringBuilder getFeedbackSessionResultsForQuestionInCsvFormat("
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackSessionResultsBundle fsrBundle,"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "-"
        },
        "content": "            Map.Entry\u003cFeedbackQuestionAttributes, List\u003cFeedbackResponseAttributes\u003e\u003e entry,"
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean isMissingResponsesShown, boolean isStatsShown, String section) {"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackQuestionAttributes question \u003d entry.getKey();"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackQuestionDetails questionDetails \u003d question.getQuestionDetails();"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e allResponses \u003d entry.getValue();"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder exportBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "-"
        },
        "content": "        exportBuilder.append(\"Question \" + Integer.toString(question.questionNumber) + \",\""
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "-"
        },
        "content": "                + SanitizationHelper.sanitizeForCsv(questionDetails.getQuestionText())"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "-"
        },
        "content": "                + System.lineSeparator() + System.lineSeparator());"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "-"
        },
        "content": "        String statistics \u003d questionDetails.getQuestionResultStatisticsCsv(allResponses,"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "-"
        },
        "content": "                                    question, fsrBundle);"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!statistics.isEmpty() \u0026\u0026 isStatsShown) {"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "-"
        },
        "content": "            exportBuilder.append(\"Summary Statistics,\").append(System.lineSeparator());"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "-"
        },
        "content": "            exportBuilder.append(statistics).append(System.lineSeparator());"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e possibleGiversWithoutResponses \u003d fsrBundle.getPossibleGiversInSection(question, section);"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e possibleRecipientsForGiver \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "-"
        },
        "content": "        String prevGiver \u003d \"\";"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "-"
        },
        "content": "        int maxNumOfResponseComments \u003d getMaxNumberOfResponseComments(allResponses, fsrBundle.getResponseComments());"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "-"
        },
        "content": "        exportBuilder.append(questionDetails.getCsvDetailedResponsesHeader(maxNumOfResponseComments));"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponseAttributes response : allResponses) {"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!fsrBundle.isRecipientVisible(response) || !fsrBundle.isGiverVisible(response)) {"
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "-"
        },
        "content": "                possibleGiversWithoutResponses.clear();"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "-"
        },
        "content": "                possibleRecipientsForGiver.clear();"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "-"
        },
        "content": "            // keep track of possible recipients with no responses"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "-"
        },
        "content": "            removeParticipantIdentifierFromList(question.giverType,"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "-"
        },
        "content": "                    possibleGiversWithoutResponses, response.giver, fsrBundle);"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean isNewGiver \u003d !prevGiver.equals(response.giver);"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "-"
        },
        "content": "            // print missing responses from the current giver"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isNewGiver \u0026\u0026 isMissingResponsesShown) {"
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "-"
        },
        "content": "                exportBuilder.append(getRowsOfPossibleRecipientsInCsvFormat(fsrBundle,"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "-"
        },
        "content": "                        question, questionDetails,"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "-"
        },
        "content": "                        possibleRecipientsForGiver, prevGiver));"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "-"
        },
        "content": "                String giverIdentifier \u003d question.giverType \u003d\u003d FeedbackParticipantType.TEAMS"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "-"
        },
        "content": "                                             ? fsrBundle.getFullNameFromRoster(response.giver)"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "-"
        },
        "content": "                                             : response.giver;"
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "-"
        },
        "content": "                possibleRecipientsForGiver \u003d fsrBundle.getPossibleRecipients(question, giverIdentifier);"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "-"
        },
        "content": "            removeParticipantIdentifierFromList(question.recipientType, possibleRecipientsForGiver,"
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "-"
        },
        "content": "                                                response.recipient, fsrBundle);"
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "-"
        },
        "content": "            prevGiver \u003d response.giver;"
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "-"
        },
        "content": "            // do not show all possible givers and recipients if there are anonymous givers and recipients"
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean hasCommentsForResponses \u003d fsrBundle.responseComments.containsKey(response.getId());"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "-"
        },
        "content": "            exportBuilder.append(questionDetails.getCsvDetailedResponsesRow(fsrBundle, response, question,"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "-"
        },
        "content": "                    hasCommentsForResponses));"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "-"
        },
        "content": "        // add the rows for the possible givers and recipients who have missing responses"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isMissingResponsesShown) {"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "-"
        },
        "content": "            exportBuilder.append("
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "-"
        },
        "content": "                    getRemainingRowsInCsvFormat("
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "-"
        },
        "content": "                            fsrBundle, entry, question, questionDetails,"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "-"
        },
        "content": "                            possibleGiversWithoutResponses, possibleRecipientsForGiver, prevGiver));"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "-"
        },
        "content": "        exportBuilder.append(System.lineSeparator() + System.lineSeparator());"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "-"
        },
        "content": "        return exportBuilder;"
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "-"
        },
        "content": "    private int getMaxNumberOfResponseComments(List\u003cFeedbackResponseAttributes\u003e allResponses,"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "-"
        },
        "content": "            Map\u003cString, List\u003cFeedbackResponseCommentAttributes\u003e\u003e responseComments) {"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "-"
        },
        "content": "        if (allResponses \u003d\u003d null || allResponses.isEmpty()) {"
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "-"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "-"
        },
        "content": "        int maxCommentsNum \u003d 0;"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponseAttributes response : allResponses) {"
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cFeedbackResponseCommentAttributes\u003e commentAttributes \u003d responseComments.get(response.getId());"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "-"
        },
        "content": "            if (commentAttributes !\u003d null \u0026\u0026 maxCommentsNum \u003c commentAttributes.size()) {"
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "-"
        },
        "content": "                maxCommentsNum \u003d commentAttributes.size();"
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "-"
        },
        "content": "        return maxCommentsNum;"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "-"
        },
        "content": "     * Given a participantIdentifier, remove it from participantIdentifierList."
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eBefore removal, {@link FeedbackSessionResultsBundle#getFullNameFromRoster} is used to"
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "-"
        },
        "content": "     * convert the identifier into a canonical form if the participantIdentifierType is TEAMS."
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "-"
        },
        "content": "    private void removeParticipantIdentifierFromList("
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackParticipantType participantIdentifierType,"
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cString\u003e participantIdentifierList, String participantIdentifier,"
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackSessionResultsBundle bundle) {"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "-"
        },
        "content": "        if (participantIdentifierType \u003d\u003d FeedbackParticipantType.TEAMS) {"
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "-"
        },
        "content": "            participantIdentifierList.remove(bundle.getFullNameFromRoster(participantIdentifier));"
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "-"
        },
        "content": "            participantIdentifierList.remove(participantIdentifier);"
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "-"
        },
        "content": "     * Generate rows of missing responses for the remaining possible givers and recipients."
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eIf for the prevGiver, possibleRecipientsForGiver is not empty,"
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "-"
        },
        "content": "     * the remaining missing responses for the prevGiver will be generated first."
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the remaining rows of missing responses in csv format"
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "-"
        },
        "content": "    private StringBuilder getRemainingRowsInCsvFormat("
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackSessionResultsBundle results,"
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "-"
        },
        "content": "            Map.Entry\u003cFeedbackQuestionAttributes, List\u003cFeedbackResponseAttributes\u003e\u003e entry,"
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes question,"
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionDetails questionDetails,"
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cString\u003e remainingPossibleGivers,"
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cString\u003e possibleRecipientsForGiver, String prevGiver) {"
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder exportBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "-"
        },
        "content": "        if (possibleRecipientsForGiver !\u003d null) {"
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "-"
        },
        "content": "            exportBuilder.append(getRowsOfPossibleRecipientsInCsvFormat(results,"
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "-"
        },
        "content": "                    question, questionDetails, possibleRecipientsForGiver,"
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "-"
        },
        "content": "                    prevGiver));"
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "-"
        },
        "content": "        removeParticipantIdentifierFromList(question.giverType, remainingPossibleGivers, prevGiver, results);"
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String possibleGiverWithNoResponses : remainingPossibleGivers) {"
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cString\u003e possibleRecipientsForRemainingGiver \u003d"
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "-"
        },
        "content": "                    results.getPossibleRecipients(entry.getKey(), possibleGiverWithNoResponses);"
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "-"
        },
        "content": "            exportBuilder.append(getRowsOfPossibleRecipientsInCsvFormat(results,"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "-"
        },
        "content": "                    question, questionDetails, possibleRecipientsForRemainingGiver,"
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "-"
        },
        "content": "                    possibleGiverWithNoResponses));"
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "-"
        },
        "content": "        return exportBuilder;"
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "-"
        },
        "content": "     * For a giver and a list of possibleRecipientsForGiver, generate rows"
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "-"
        },
        "content": "     * of missing responses between the giver and the possible recipients."
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "-"
        },
        "content": "    private StringBuilder getRowsOfPossibleRecipientsInCsvFormat("
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackSessionResultsBundle results,"
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes question,"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionDetails questionDetails,"
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cString\u003e possibleRecipientsForGiver, String giver) {"
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder exportBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String possibleRecipient : possibleRecipientsForGiver) {"
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "-"
        },
        "content": "            String giverName \u003d results.getFullNameFromRoster(giver);"
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "-"
        },
        "content": "            String giverLastName \u003d results.getLastNameFromRoster(giver);"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "-"
        },
        "content": "            String giverEmail \u003d results.getDisplayableEmailFromRoster(giver);"
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "-"
        },
        "content": "            String possibleRecipientName \u003d results.getFullNameFromRoster(possibleRecipient);"
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "-"
        },
        "content": "            String possibleRecipientLastName \u003d results.getLastNameFromRoster(possibleRecipient);"
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "-"
        },
        "content": "            String possibleRecipientEmail \u003d results.getDisplayableEmailFromRoster(possibleRecipient);"
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "-"
        },
        "content": "            if (questionDetails.shouldShowNoResponseText(question)) {"
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "-"
        },
        "content": "                exportBuilder.append(SanitizationHelper.sanitizeForCsv(results.getTeamNameFromRoster(giver))"
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \",\" + SanitizationHelper.sanitizeForCsv(StringHelper.removeExtraSpace(giverName))"
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \",\" + SanitizationHelper.sanitizeForCsv(StringHelper.removeExtraSpace(giverLastName))"
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \",\" + SanitizationHelper.sanitizeForCsv(StringHelper.removeExtraSpace(giverEmail))"
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \",\" + SanitizationHelper.sanitizeForCsv(results.getTeamNameFromRoster(possibleRecipient))"
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \",\" + SanitizationHelper.sanitizeForCsv(StringHelper.removeExtraSpace(possibleRecipientName))"
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \",\" + SanitizationHelper.sanitizeForCsv(StringHelper.removeExtraSpace(possibleRecipientLastName))"
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \",\" + SanitizationHelper.sanitizeForCsv(StringHelper.removeExtraSpace(possibleRecipientEmail))"
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \",\" + questionDetails.getNoResponseTextInCsv(giver, possibleRecipient, results, question)"
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "-"
        },
        "content": "                        + System.lineSeparator());"
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "-"
        },
        "content": "        return exportBuilder;"
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "-"
        },
        "content": "     * Criteria: must be published, publishEmail must be enabled and"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "-"
        },
        "content": "     * resultsVisibleTime must be custom."
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return returns a list of sessions that require automated emails to be"
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "-"
        },
        "content": "     *         sent as they are published"
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsWhichNeedAutomatedPublishedEmailsToBeSent() {"
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e sessions \u003d"
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "-"
        },
        "content": "                fsDb.getFeedbackSessionsPossiblyNeedingPublishedEmail();"
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e sessionsToSendEmailsFor \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackSessionAttributes session : sessions) {"
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "-"
        },
        "content": "            // automated emails are required only for custom publish times"
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "-"
        },
        "content": "            if (session.isPublished() \u0026\u0026 !TimeHelper.isSpecialTime(session.getResultsVisibleFromTime())) {"
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "-"
        },
        "content": "                sessionsToSendEmailsFor.add(session);"
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "-"
        },
        "content": "        return sessionsToSendEmailsFor;"
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsWhichNeedOpenEmailsToBeSent() {"
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e sessions \u003d"
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "-"
        },
        "content": "                fsDb.getFeedbackSessionsPossiblyNeedingOpenEmail();"
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e sessionsToSendEmailsFor \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackSessionAttributes session : sessions) {"
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "-"
        },
        "content": "            if (session.isOpened()) {"
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "-"
        },
        "content": "                sessionsToSendEmailsFor.add(session);"
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "-"
        },
        "content": "        return sessionsToSendEmailsFor;"
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isCreatorOfSession(String feedbackSessionName, String courseId, String userEmail) {"
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes fs \u003d getFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "-"
        },
        "content": "        return fs.getCreatorEmail().equals(userEmail);"
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isFeedbackSessionExists(String feedbackSessionName, String courseId) {"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "-"
        },
        "content": "        return fsDb.getFeedbackSession(courseId, feedbackSessionName) !\u003d null;"
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isFeedbackSessionHasQuestionForStudents("
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName,"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "-"
        },
        "content": "            String courseId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!isFeedbackSessionExists(feedbackSessionName, courseId)) {"
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(ERROR_NON_EXISTENT_FS_CHECK + courseId + \"/\" + feedbackSessionName);"
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackQuestionAttributes\u003e allQuestions \u003d"
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "-"
        },
        "content": "                fqLogic.getFeedbackQuestionsForStudents(feedbackSessionName,"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "-"
        },
        "content": "                        courseId);"
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "-"
        },
        "content": "        return !allQuestions.isEmpty();"
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isFeedbackSessionCompletedByStudent(FeedbackSessionAttributes fsa, String userEmail) {"
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "-"
        },
        "content": "        if (fsa.getRespondingStudentList().contains(userEmail)) {"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "-"
        },
        "content": "        String feedbackSessionName \u003d fsa.getFeedbackSessionName();"
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseId \u003d fsa.getCourseId();"
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackQuestionAttributes\u003e allQuestions \u003d"
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "-"
        },
        "content": "                fqLogic.getFeedbackQuestionsForStudents(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "-"
        },
        "content": "        // if there is no question for students, session is complete"
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "-"
        },
        "content": "        return allQuestions.isEmpty();"
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isFeedbackSessionCompletedByInstructor(FeedbackSessionAttributes fsa, String userEmail)"
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "-"
        },
        "content": "        if (fsa.getRespondingInstructorList().contains(userEmail)) {"
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "-"
        },
        "content": "        String feedbackSessionName \u003d fsa.getFeedbackSessionName();"
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseId \u003d fsa.getCourseId();"
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackQuestionAttributes\u003e allQuestions \u003d"
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "-"
        },
        "content": "                fqLogic.getFeedbackQuestionsForInstructor(feedbackSessionName, courseId, userEmail);"
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "-"
        },
        "content": "        // if there is no question for instructor, session is complete"
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "-"
        },
        "content": "        return allQuestions.isEmpty();"
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updateFeedbackSession(FeedbackSessionAttributes newSession)"
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, newSession);"
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes oldSession \u003d"
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "-"
        },
        "content": "                fsDb.getFeedbackSession(newSession.getCourseId(),"
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "-"
        },
        "content": "                        newSession.getFeedbackSessionName());"
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "-"
        },
        "content": "        if (oldSession \u003d\u003d null) {"
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(ERROR_NON_EXISTENT_FS_UPDATE + newSession.getCourseId()"
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "-"
        },
        "content": "                                                  + \"/\" + newSession.getFeedbackSessionName());"
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "-"
        },
        "content": "        // These can\u0027t be changed anyway. Copy values to defensively avoid"
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "-"
        },
        "content": "        // invalid parameters."
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "-"
        },
        "content": "        newSession.setCreatorEmail(oldSession.getCreatorEmail());"
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "-"
        },
        "content": "        newSession.setCreatedTime(oldSession.getCreatedTime());"
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "-"
        },
        "content": "        if (newSession.getInstructions() \u003d\u003d null) {"
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "-"
        },
        "content": "            newSession.setInstructions(oldSession.getInstructions());"
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "-"
        },
        "content": "        if (newSession.getStartTime() \u003d\u003d null) {"
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "-"
        },
        "content": "            newSession.setStartTime(oldSession.getStartTime());"
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "-"
        },
        "content": "        if (newSession.getEndTime() \u003d\u003d null) {"
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "-"
        },
        "content": "            newSession.setEndTime(oldSession.getEndTime());"
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "-"
        },
        "content": "        if (newSession.getSessionVisibleFromTime() \u003d\u003d null) {"
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "-"
        },
        "content": "            newSession.setSessionVisibleFromTime(oldSession.getSessionVisibleFromTime());"
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "-"
        },
        "content": "        if (newSession.getResultsVisibleFromTime() \u003d\u003d null) {"
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "-"
        },
        "content": "            newSession.setResultsVisibleFromTime(oldSession.getResultsVisibleFromTime());"
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "-"
        },
        "content": "        makeEmailStateConsistent(oldSession, newSession);"
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "-"
        },
        "content": "        fsDb.updateFeedbackSession(newSession);"
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updateFeedbackSessionsTimeZoneForCourse(String courseId, ZoneId courseTimeZone) {"
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, courseId);"
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, courseTimeZone);"
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "-"
        },
        "content": "        fsDb.updateFeedbackSessionsTimeZoneForCourse(courseId, courseTimeZone);"
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updateRespondentsForInstructor(String oldEmail, String newEmail, String courseId)"
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e feedbackSessions \u003d getFeedbackSessionsForCourse(courseId);"
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackSessionAttributes session : feedbackSessions) {"
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "-"
        },
        "content": "            fsDb.updateInstructorRespondent(oldEmail, newEmail, session);"
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updateRespondentsForStudent(String oldEmail, String newEmail, String courseId)"
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e feedbackSessions \u003d getFeedbackSessionsForCourse(courseId);"
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackSessionAttributes session : feedbackSessions) {"
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "-"
        },
        "content": "            fsDb.updateStudentRespondent(oldEmail, newEmail, session);"
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updateRespondentsForSession(String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "-"
        },
        "content": "        clearInstructorRespondents(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "-"
        },
        "content": "        clearStudentRespondents(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes fsa \u003d getFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackQuestionAttributes\u003e questions \u003d fqLogic.getFeedbackQuestionsForSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cInstructorAttributes\u003e instructors \u003d instructorsLogic.getInstructorsForCourse(courseId);"
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, List\u003cString\u003e\u003e instructorQuestionsMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "-"
        },
        "content": "        for (InstructorAttributes instructor : instructors) {"
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cFeedbackQuestionAttributes\u003e instructorQns \u003d fqLogic"
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "-"
        },
        "content": "                    .getFeedbackQuestionsForInstructor(questions,"
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "-"
        },
        "content": "                            fsa.isCreator(instructor.email));"
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!instructorQns.isEmpty()) {"
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "-"
        },
        "content": "                List\u003cString\u003e questionIds \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "-"
        },
        "content": "                for (FeedbackQuestionAttributes question : instructorQns) {"
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "-"
        },
        "content": "                    questionIds.add(question.getId());"
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorQuestionsMap.put(instructor.email, questionIds);"
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "-"
        },
        "content": "        Set\u003cString\u003e respondingStudentList \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "-"
        },
        "content": "        Set\u003cString\u003e respondingInstructorList \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responses \u003d frLogic.getFeedbackResponsesForSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponseAttributes response : responses) {"
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cString\u003e instructorQuestions \u003d instructorQuestionsMap.get(response.giver);"
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "-"
        },
        "content": "            if (instructorQuestions !\u003d null \u0026\u0026 instructorQuestions.contains(response.feedbackQuestionId)) {"
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "-"
        },
        "content": "                respondingInstructorList.add(response.giver);"
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "-"
        },
        "content": "                respondingStudentList.add(response.giver);"
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "-"
        },
        "content": "        addInstructorRespondents(new ArrayList\u003c\u003e(respondingInstructorList), feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1219,
        "author": {
          "gitId": "-"
        },
        "content": "        addStudentRespondents(new ArrayList\u003c\u003e(respondingStudentList), feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1220,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1222,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteInstructorFromRespondentsList(InstructorAttributes instructor) {"
      },
      {
        "lineNumber": 1223,
        "author": {
          "gitId": "-"
        },
        "content": "        if (instructor \u003d\u003d null || instructor.email \u003d\u003d null) {"
      },
      {
        "lineNumber": 1224,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 1225,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1226,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e sessionsToUpdate \u003d"
      },
      {
        "lineNumber": 1227,
        "author": {
          "gitId": "-"
        },
        "content": "                fsDb.getFeedbackSessionsForCourse(instructor.courseId);"
      },
      {
        "lineNumber": 1228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1229,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackSessionAttributes session : sessionsToUpdate) {"
      },
      {
        "lineNumber": 1230,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 1231,
        "author": {
          "gitId": "-"
        },
        "content": "                deleteInstructorRespondent(instructor.email, session.getFeedbackSessionName(), session.getCourseId());"
      },
      {
        "lineNumber": 1232,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (InvalidParametersException | EntityDoesNotExistException e) {"
      },
      {
        "lineNumber": 1233,
        "author": {
          "gitId": "-"
        },
        "content": "                Assumption.fail(ASSUMPTION_FAIL_DELETE_INSTRUCTOR + session.getFeedbackSessionName());"
      },
      {
        "lineNumber": 1234,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1235,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1236,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1238,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteStudentFromRespondentsList(StudentAttributes student) {"
      },
      {
        "lineNumber": 1239,
        "author": {
          "gitId": "-"
        },
        "content": "        if (student \u003d\u003d null || student.email \u003d\u003d null) {"
      },
      {
        "lineNumber": 1240,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 1241,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1242,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e sessionsToUpdate \u003d"
      },
      {
        "lineNumber": 1243,
        "author": {
          "gitId": "-"
        },
        "content": "                fsDb.getFeedbackSessionsForCourse(student.course);"
      },
      {
        "lineNumber": 1244,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1245,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackSessionAttributes session : sessionsToUpdate) {"
      },
      {
        "lineNumber": 1246,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 1247,
        "author": {
          "gitId": "-"
        },
        "content": "                deleteStudentFromRespondentList(student.email, session.getFeedbackSessionName(), session.getCourseId());"
      },
      {
        "lineNumber": 1248,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (InvalidParametersException | EntityDoesNotExistException e) {"
      },
      {
        "lineNumber": 1249,
        "author": {
          "gitId": "-"
        },
        "content": "                Assumption.fail(ASSUMPTION_FAIL_DELETE_INSTRUCTOR + session.getFeedbackSessionName());"
      },
      {
        "lineNumber": 1250,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1251,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1252,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1253,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1254,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addInstructorRespondent(String email, String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1255,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1257,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, feedbackSessionName);"
      },
      {
        "lineNumber": 1258,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, courseId);"
      },
      {
        "lineNumber": 1259,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, email);"
      },
      {
        "lineNumber": 1260,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1261,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes sessionToUpdate \u003d getFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1262,
        "author": {
          "gitId": "-"
        },
        "content": "        if (sessionToUpdate \u003d\u003d null) {"
      },
      {
        "lineNumber": 1263,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(ERROR_NON_EXISTENT_FS_UPDATE + courseId + \"/\" + feedbackSessionName);"
      },
      {
        "lineNumber": 1264,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1265,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1266,
        "author": {
          "gitId": "-"
        },
        "content": "        fsDb.addInstructorRespondent(email, sessionToUpdate);"
      },
      {
        "lineNumber": 1267,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1269,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addInstructorRespondents(List\u003cString\u003e emails, String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1270,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1272,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, feedbackSessionName);"
      },
      {
        "lineNumber": 1273,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, courseId);"
      },
      {
        "lineNumber": 1274,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, emails);"
      },
      {
        "lineNumber": 1275,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1276,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes sessionToUpdate \u003d getFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1277,
        "author": {
          "gitId": "-"
        },
        "content": "        if (sessionToUpdate \u003d\u003d null) {"
      },
      {
        "lineNumber": 1278,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(ERROR_NON_EXISTENT_FS_UPDATE + courseId + \"/\" + feedbackSessionName);"
      },
      {
        "lineNumber": 1279,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1281,
        "author": {
          "gitId": "-"
        },
        "content": "        fsDb.addInstructorRespondents(emails, sessionToUpdate);"
      },
      {
        "lineNumber": 1282,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1283,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1284,
        "author": {
          "gitId": "-"
        },
        "content": "    public void clearInstructorRespondents(String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1285,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1286,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1287,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, feedbackSessionName);"
      },
      {
        "lineNumber": 1288,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, courseId);"
      },
      {
        "lineNumber": 1289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1290,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes sessionToUpdate \u003d getFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1291,
        "author": {
          "gitId": "-"
        },
        "content": "        if (sessionToUpdate \u003d\u003d null) {"
      },
      {
        "lineNumber": 1292,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(ERROR_NON_EXISTENT_FS_UPDATE + courseId + \"/\" + feedbackSessionName);"
      },
      {
        "lineNumber": 1293,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1294,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1295,
        "author": {
          "gitId": "-"
        },
        "content": "        fsDb.clearInstructorRespondents(sessionToUpdate);"
      },
      {
        "lineNumber": 1296,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1298,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addStudentRespondent(String email, String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1299,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1300,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1301,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, feedbackSessionName);"
      },
      {
        "lineNumber": 1302,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, courseId);"
      },
      {
        "lineNumber": 1303,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, email);"
      },
      {
        "lineNumber": 1304,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1305,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes sessionToUpdate \u003d getFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1306,
        "author": {
          "gitId": "-"
        },
        "content": "        if (sessionToUpdate \u003d\u003d null) {"
      },
      {
        "lineNumber": 1307,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(ERROR_NON_EXISTENT_FS_UPDATE + courseId + \"/\" + feedbackSessionName);"
      },
      {
        "lineNumber": 1308,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1309,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1310,
        "author": {
          "gitId": "-"
        },
        "content": "        fsDb.addStudentRespondent(email, sessionToUpdate);"
      },
      {
        "lineNumber": 1311,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1312,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1313,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addStudentRespondents(List\u003cString\u003e emails, String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1314,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1315,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1316,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, feedbackSessionName);"
      },
      {
        "lineNumber": 1317,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, courseId);"
      },
      {
        "lineNumber": 1318,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, emails);"
      },
      {
        "lineNumber": 1319,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1320,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes sessionToUpdate \u003d getFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1321,
        "author": {
          "gitId": "-"
        },
        "content": "        if (sessionToUpdate \u003d\u003d null) {"
      },
      {
        "lineNumber": 1322,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(ERROR_NON_EXISTENT_FS_UPDATE + courseId + \"/\" + feedbackSessionName);"
      },
      {
        "lineNumber": 1323,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1324,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1325,
        "author": {
          "gitId": "-"
        },
        "content": "        fsDb.addStudentRespondents(emails, sessionToUpdate);"
      },
      {
        "lineNumber": 1326,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1327,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1328,
        "author": {
          "gitId": "-"
        },
        "content": "    public void clearStudentRespondents(String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1329,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1330,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1331,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, feedbackSessionName);"
      },
      {
        "lineNumber": 1332,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, courseId);"
      },
      {
        "lineNumber": 1333,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1334,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes sessionToUpdate \u003d getFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1335,
        "author": {
          "gitId": "-"
        },
        "content": "        if (sessionToUpdate \u003d\u003d null) {"
      },
      {
        "lineNumber": 1336,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(ERROR_NON_EXISTENT_FS_UPDATE + courseId + \"/\" + feedbackSessionName);"
      },
      {
        "lineNumber": 1337,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1338,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1339,
        "author": {
          "gitId": "-"
        },
        "content": "        fsDb.clearStudentRespondents(sessionToUpdate);"
      },
      {
        "lineNumber": 1340,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1341,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1342,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteInstructorRespondent(String email, String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1343,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1344,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1345,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, feedbackSessionName);"
      },
      {
        "lineNumber": 1346,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, courseId);"
      },
      {
        "lineNumber": 1347,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, email);"
      },
      {
        "lineNumber": 1348,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1349,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes sessionToUpdate \u003d getFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1350,
        "author": {
          "gitId": "-"
        },
        "content": "        if (sessionToUpdate \u003d\u003d null) {"
      },
      {
        "lineNumber": 1351,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(ERROR_NON_EXISTENT_FS_UPDATE + courseId + \"/\" + feedbackSessionName);"
      },
      {
        "lineNumber": 1352,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1353,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1354,
        "author": {
          "gitId": "-"
        },
        "content": "        fsDb.deleteInstructorRespondent(email, sessionToUpdate);"
      },
      {
        "lineNumber": 1355,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1356,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1357,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteStudentFromRespondentList(String email, String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1358,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1359,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1360,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, feedbackSessionName);"
      },
      {
        "lineNumber": 1361,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, courseId);"
      },
      {
        "lineNumber": 1362,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, email);"
      },
      {
        "lineNumber": 1363,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1364,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes sessionToUpdate \u003d getFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1365,
        "author": {
          "gitId": "-"
        },
        "content": "        if (sessionToUpdate \u003d\u003d null) {"
      },
      {
        "lineNumber": 1366,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(ERROR_NON_EXISTENT_FS_UPDATE + courseId + \"/\" + feedbackSessionName);"
      },
      {
        "lineNumber": 1367,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1368,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1369,
        "author": {
          "gitId": "-"
        },
        "content": "        fsDb.deleteStudentRespondent(email, sessionToUpdate);"
      },
      {
        "lineNumber": 1370,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1371,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1372,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1373,
        "author": {
          "gitId": "-"
        },
        "content": "     * This method is called when the user publishes a feedback session"
      },
      {
        "lineNumber": 1374,
        "author": {
          "gitId": "-"
        },
        "content": "     * manually. Preconditions: * The feedback session has to be set as"
      },
      {
        "lineNumber": 1375,
        "author": {
          "gitId": "-"
        },
        "content": "     * manually/automatically published. The feedback session can\u0027t be private"
      },
      {
        "lineNumber": 1376,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1377,
        "author": {
          "gitId": "-"
        },
        "content": "    public void publishFeedbackSession(FeedbackSessionAttributes sessionToPublish)"
      },
      {
        "lineNumber": 1378,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1379,
        "author": {
          "gitId": "-"
        },
        "content": "        if (sessionToPublish.isPublished()) {"
      },
      {
        "lineNumber": 1380,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new InvalidParametersException(ERROR_FS_ALREADY_PUBLISH);"
      },
      {
        "lineNumber": 1381,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1382,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1383,
        "author": {
          "gitId": "-"
        },
        "content": "        sessionToPublish.setResultsVisibleFromTime(Instant.now());"
      },
      {
        "lineNumber": 1384,
        "author": {
          "gitId": "-"
        },
        "content": "        updateFeedbackSession(sessionToPublish);"
      },
      {
        "lineNumber": 1385,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1386,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1387,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1388,
        "author": {
          "gitId": "-"
        },
        "content": "     * This method is called when the user unpublishes a feedback session"
      },
      {
        "lineNumber": 1389,
        "author": {
          "gitId": "-"
        },
        "content": "     * manually. Preconditions: * The feedback session has to be set as manually"
      },
      {
        "lineNumber": 1390,
        "author": {
          "gitId": "-"
        },
        "content": "     * published."
      },
      {
        "lineNumber": 1391,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1392,
        "author": {
          "gitId": "-"
        },
        "content": "    public void unpublishFeedbackSession(FeedbackSessionAttributes sessionToUnpublish)"
      },
      {
        "lineNumber": 1393,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1394,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!sessionToUnpublish.isPublished()) {"
      },
      {
        "lineNumber": 1395,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new InvalidParametersException(ERROR_FS_ALREADY_UNPUBLISH);"
      },
      {
        "lineNumber": 1396,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1397,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1398,
        "author": {
          "gitId": "-"
        },
        "content": "        sessionToUnpublish.setResultsVisibleFromTime(Const.TIME_REPRESENTS_LATER);"
      },
      {
        "lineNumber": 1399,
        "author": {
          "gitId": "-"
        },
        "content": "        updateFeedbackSession(sessionToUnpublish);"
      },
      {
        "lineNumber": 1400,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1401,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1402,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsClosingWithinTimeLimit() {"
      },
      {
        "lineNumber": 1403,
        "author": {
          "gitId": "-"
        },
        "content": "        ArrayList\u003cFeedbackSessionAttributes\u003e requiredSessions \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 1404,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1405,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e sessions \u003d"
      },
      {
        "lineNumber": 1406,
        "author": {
          "gitId": "-"
        },
        "content": "                fsDb.getFeedbackSessionsPossiblyNeedingClosingEmail();"
      },
      {
        "lineNumber": 1407,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1408,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackSessionAttributes session : sessions) {"
      },
      {
        "lineNumber": 1409,
        "author": {
          "gitId": "-"
        },
        "content": "            if (session.isClosingWithinTimeLimit(SystemParams.NUMBER_OF_HOURS_BEFORE_CLOSING_ALERT)) {"
      },
      {
        "lineNumber": 1410,
        "author": {
          "gitId": "-"
        },
        "content": "                requiredSessions.add(session);"
      },
      {
        "lineNumber": 1411,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1412,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1413,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1414,
        "author": {
          "gitId": "-"
        },
        "content": "        return requiredSessions;"
      },
      {
        "lineNumber": 1415,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1416,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1417,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1418,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns returns a list of sessions that were closed within past hour."
      },
      {
        "lineNumber": 1419,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1420,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsClosedWithinThePastHour() {"
      },
      {
        "lineNumber": 1421,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e requiredSessions \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 1422,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e sessions \u003d"
      },
      {
        "lineNumber": 1423,
        "author": {
          "gitId": "-"
        },
        "content": "                fsDb.getFeedbackSessionsPossiblyNeedingClosedEmail();"
      },
      {
        "lineNumber": 1424,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1425,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackSessionAttributes session : sessions) {"
      },
      {
        "lineNumber": 1426,
        "author": {
          "gitId": "-"
        },
        "content": "            // is session closed in the past 1 hour"
      },
      {
        "lineNumber": 1427,
        "author": {
          "gitId": "-"
        },
        "content": "            if (session.isClosedWithinPastHour()) {"
      },
      {
        "lineNumber": 1428,
        "author": {
          "gitId": "-"
        },
        "content": "                requiredSessions.add(session);"
      },
      {
        "lineNumber": 1429,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1430,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1431,
        "author": {
          "gitId": "-"
        },
        "content": "        return requiredSessions;"
      },
      {
        "lineNumber": 1432,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1433,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1434,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1435,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes the feedback sessions in the course specified. The delete"
      },
      {
        "lineNumber": 1436,
        "author": {
          "gitId": "-"
        },
        "content": "     * is cascaded, and feedback questions, feedback responses, and"
      },
      {
        "lineNumber": 1437,
        "author": {
          "gitId": "-"
        },
        "content": "     * feedback response comments in the course are deleted."
      },
      {
        "lineNumber": 1438,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1439,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteFeedbackSessionsForCourseCascade(String courseId) {"
      },
      {
        "lineNumber": 1440,
        "author": {
          "gitId": "-"
        },
        "content": "        frcLogic.deleteFeedbackResponseCommentsForCourse(courseId);"
      },
      {
        "lineNumber": 1441,
        "author": {
          "gitId": "-"
        },
        "content": "        frLogic.deleteFeedbackResponsesForCourse(courseId);"
      },
      {
        "lineNumber": 1442,
        "author": {
          "gitId": "-"
        },
        "content": "        fqLogic.deleteFeedbackQuestionsForCourse(courseId);"
      },
      {
        "lineNumber": 1443,
        "author": {
          "gitId": "-"
        },
        "content": "        deleteFeedbackSessionsForCourse(courseId);"
      },
      {
        "lineNumber": 1444,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1445,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1446,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1447,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes all feedback sessions the course specified. This is"
      },
      {
        "lineNumber": 1448,
        "author": {
          "gitId": "-"
        },
        "content": "     * a non-cascade delete."
      },
      {
        "lineNumber": 1449,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1450,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eThe responses, questions and the comments of the responses"
      },
      {
        "lineNumber": 1451,
        "author": {
          "gitId": "-"
        },
        "content": "     * should be handled."
      },
      {
        "lineNumber": 1452,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1453,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteFeedbackSessionsForCourse(String courseId) {"
      },
      {
        "lineNumber": 1454,
        "author": {
          "gitId": "-"
        },
        "content": "        fsDb.deleteFeedbackSessionsForCourse(courseId);"
      },
      {
        "lineNumber": 1455,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1456,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1457,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1458,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes a specific feedback session, and all its question and responses."
      },
      {
        "lineNumber": 1459,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1460,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteFeedbackSessionCascade(String feedbackSessionName, String courseId) {"
      },
      {
        "lineNumber": 1461,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1462,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 1463,
        "author": {
          "gitId": "-"
        },
        "content": "            fqLogic.deleteFeedbackQuestionsForSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1464,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (EntityDoesNotExistException e) {"
      },
      {
        "lineNumber": 1465,
        "author": {
          "gitId": "-"
        },
        "content": "            // Silently fail if session does not exist"
      },
      {
        "lineNumber": 1466,
        "author": {
          "gitId": "-"
        },
        "content": "            log.warning(TeammatesException.toStringWithStackTrace(e));"
      },
      {
        "lineNumber": 1467,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1468,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1469,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes sessionToDelete \u003d FeedbackSessionAttributes"
      },
      {
        "lineNumber": 1470,
        "author": {
          "gitId": "-"
        },
        "content": "                .builder(feedbackSessionName, courseId, \"\").build();"
      },
      {
        "lineNumber": 1471,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1472,
        "author": {
          "gitId": "-"
        },
        "content": "        fsDb.deleteEntity(sessionToDelete);"
      },
      {
        "lineNumber": 1473,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1474,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1475,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1476,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionDetailsBundle getFeedbackSessionDetails("
      },
      {
        "lineNumber": 1477,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackSessionAttributes fsa) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1478,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1479,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionDetailsBundle details \u003d"
      },
      {
        "lineNumber": 1480,
        "author": {
          "gitId": "-"
        },
        "content": "                new FeedbackSessionDetailsBundle(fsa);"
      },
      {
        "lineNumber": 1481,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1482,
        "author": {
          "gitId": "-"
        },
        "content": "        details.stats.expectedTotal \u003d 0;"
      },
      {
        "lineNumber": 1483,
        "author": {
          "gitId": "-"
        },
        "content": "        details.stats.submittedTotal \u003d 0;"
      },
      {
        "lineNumber": 1484,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1485,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cStudentAttributes\u003e students \u003d studentsLogic.getStudentsForCourse(fsa.getCourseId());"
      },
      {
        "lineNumber": 1486,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cInstructorAttributes\u003e instructors \u003d instructorsLogic.getInstructorsForCourse(fsa.getCourseId());"
      },
      {
        "lineNumber": 1487,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackQuestionAttributes\u003e questions \u003d"
      },
      {
        "lineNumber": 1488,
        "author": {
          "gitId": "-"
        },
        "content": "                fqLogic.getFeedbackQuestionsForSession(fsa.getFeedbackSessionName(), fsa.getCourseId());"
      },
      {
        "lineNumber": 1489,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackQuestionAttributes\u003e studentQns \u003d fqLogic.getFeedbackQuestionsForStudents(questions);"
      },
      {
        "lineNumber": 1490,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1491,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!studentQns.isEmpty()) {"
      },
      {
        "lineNumber": 1492,
        "author": {
          "gitId": "-"
        },
        "content": "            details.stats.expectedTotal +\u003d students.size();"
      },
      {
        "lineNumber": 1493,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1494,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1495,
        "author": {
          "gitId": "-"
        },
        "content": "        for (InstructorAttributes instructor : instructors) {"
      },
      {
        "lineNumber": 1496,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cFeedbackQuestionAttributes\u003e instructorQns \u003d"
      },
      {
        "lineNumber": 1497,
        "author": {
          "gitId": "-"
        },
        "content": "                    fqLogic.getFeedbackQuestionsForInstructor(questions, fsa.isCreator(instructor.email));"
      },
      {
        "lineNumber": 1498,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!instructorQns.isEmpty()) {"
      },
      {
        "lineNumber": 1499,
        "author": {
          "gitId": "-"
        },
        "content": "                details.stats.expectedTotal +\u003d 1;"
      },
      {
        "lineNumber": 1500,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1501,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1502,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1503,
        "author": {
          "gitId": "-"
        },
        "content": "        details.stats.submittedTotal +\u003d fsa.getRespondingStudentList().size() + fsa.getRespondingInstructorList().size();"
      },
      {
        "lineNumber": 1504,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1505,
        "author": {
          "gitId": "-"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 1506,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1507,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1508,
        "author": {
          "gitId": "-"
        },
        "content": "    /* Get the feedback results for user in a section iterated by questions */"
      },
      {
        "lineNumber": 1509,
        "author": {
          "gitId": "-"
        },
        "content": "    private FeedbackSessionResultsBundle getFeedbackSessionResultsForUserInSectionByQuestions("
      },
      {
        "lineNumber": 1510,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail,"
      },
      {
        "lineNumber": 1511,
        "author": {
          "gitId": "-"
        },
        "content": "            UserRole role, String section)"
      },
      {
        "lineNumber": 1512,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1513,
        "author": {
          "gitId": "-"
        },
        "content": "        // Load details of students and instructors once and pass it to callee"
      },
      {
        "lineNumber": 1514,
        "author": {
          "gitId": "-"
        },
        "content": "        // methods"
      },
      {
        "lineNumber": 1515,
        "author": {
          "gitId": "-"
        },
        "content": "        // (rather than loading them many times)."
      },
      {
        "lineNumber": 1516,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseRoster roster \u003d new CourseRoster("
      },
      {
        "lineNumber": 1517,
        "author": {
          "gitId": "-"
        },
        "content": "                studentsLogic.getStudentsForCourse(courseId),"
      },
      {
        "lineNumber": 1518,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorsLogic.getInstructorsForCourse(courseId));"
      },
      {
        "lineNumber": 1519,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1520,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackSessionResultsForUserInSectionByQuestions("
      },
      {
        "lineNumber": 1521,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionName, courseId, userEmail, role, section, roster);"
      },
      {
        "lineNumber": 1522,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1523,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1524,
        "author": {
          "gitId": "-"
        },
        "content": "    /* Get the feedback results for user in a section iterated by questions */"
      },
      {
        "lineNumber": 1525,
        "author": {
          "gitId": "-"
        },
        "content": "    private FeedbackSessionResultsBundle getFeedbackSessionResultsForUserInSectionByQuestions("
      },
      {
        "lineNumber": 1526,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail,"
      },
      {
        "lineNumber": 1527,
        "author": {
          "gitId": "-"
        },
        "content": "            UserRole role, String section, CourseRoster roster)"
      },
      {
        "lineNumber": 1528,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1529,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1530,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes session \u003d fsDb.getFeedbackSession("
      },
      {
        "lineNumber": 1531,
        "author": {
          "gitId": "-"
        },
        "content": "                courseId, feedbackSessionName);"
      },
      {
        "lineNumber": 1532,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1533,
        "author": {
          "gitId": "-"
        },
        "content": "        if (session \u003d\u003d null) {"
      },
      {
        "lineNumber": 1534,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(ERROR_NON_EXISTENT_FS_VIEW + courseId + \"/\" + feedbackSessionName);"
      },
      {
        "lineNumber": 1535,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1536,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1537,
        "author": {
          "gitId": "-"
        },
        "content": "        // create empty data containers to store results"
      },
      {
        "lineNumber": 1538,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 1539,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, FeedbackQuestionAttributes\u003e relevantQuestions \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1540,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e emailNameTable \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1541,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e emailLastNameTable \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1542,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e emailTeamNameTable \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1543,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, Set\u003cString\u003e\u003e sectionTeamNameTable \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1544,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, boolean[]\u003e visibilityTable \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1545,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, List\u003cFeedbackResponseCommentAttributes\u003e\u003e responseComments \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1546,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1547,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionResponseStatus responseStatus \u003d new FeedbackSessionResponseStatus();"
      },
      {
        "lineNumber": 1548,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1549,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackQuestionAttributes\u003e allQuestions \u003d fqLogic.getFeedbackQuestionsForSession("
      },
      {
        "lineNumber": 1550,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                    feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1551,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, FeedbackResponseAttributes\u003e relevantResponse \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1552,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackQuestionAttributes question : allQuestions) {"
      },
      {
        "lineNumber": 1553,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1554,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cFeedbackResponseAttributes\u003e responsesForThisQn;"
      },
      {
        "lineNumber": 1555,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1556,
        "author": {
          "gitId": "-"
        },
        "content": "            responsesForThisQn \u003d frLogic.getViewableFeedbackResponsesForQuestionInSection("
      },
      {
        "lineNumber": 1557,
        "author": {
          "gitId": "-"
        },
        "content": "                    question, userEmail, role, section);"
      },
      {
        "lineNumber": 1558,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1559,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean hasResponses \u003d !responsesForThisQn.isEmpty();"
      },
      {
        "lineNumber": 1560,
        "author": {
          "gitId": "-"
        },
        "content": "            if (hasResponses) {"
      },
      {
        "lineNumber": 1561,
        "author": {
          "gitId": "-"
        },
        "content": "                relevantQuestions.put(question.getId(), question);"
      },
      {
        "lineNumber": 1562,
        "author": {
          "gitId": "-"
        },
        "content": "                responses.addAll(responsesForThisQn);"
      },
      {
        "lineNumber": 1563,
        "author": {
          "gitId": "-"
        },
        "content": "                for (FeedbackResponseAttributes response : responsesForThisQn) {"
      },
      {
        "lineNumber": 1564,
        "author": {
          "gitId": "-"
        },
        "content": "                    relevantResponse.put(response.getId(), response);"
      },
      {
        "lineNumber": 1565,
        "author": {
          "gitId": "-"
        },
        "content": "                    addEmailNamePairsToTable(emailNameTable, response,"
      },
      {
        "lineNumber": 1566,
        "author": {
          "gitId": "-"
        },
        "content": "                            question, roster);"
      },
      {
        "lineNumber": 1567,
        "author": {
          "gitId": "-"
        },
        "content": "                    addEmailLastNamePairsToTable(emailLastNameTable, response,"
      },
      {
        "lineNumber": 1568,
        "author": {
          "gitId": "-"
        },
        "content": "                            question, roster);"
      },
      {
        "lineNumber": 1569,
        "author": {
          "gitId": "-"
        },
        "content": "                    addEmailTeamNamePairsToTable(emailTeamNameTable, response,"
      },
      {
        "lineNumber": 1570,
        "author": {
          "gitId": "-"
        },
        "content": "                            question, roster);"
      },
      {
        "lineNumber": 1571,
        "author": {
          "gitId": "-"
        },
        "content": "                    addVisibilityToTable(visibilityTable, question, response,"
      },
      {
        "lineNumber": 1572,
        "author": {
          "gitId": "-"
        },
        "content": "                            userEmail, role, roster);"
      },
      {
        "lineNumber": 1573,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1574,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1575,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1576,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1577,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student \u003d null;"
      },
      {
        "lineNumber": 1578,
        "author": {
          "gitId": "-"
        },
        "content": "        Set\u003cString\u003e studentsEmailInTeam \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 1579,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isStudent(role)) {"
      },
      {
        "lineNumber": 1580,
        "author": {
          "gitId": "-"
        },
        "content": "            student \u003d studentsLogic.getStudentForEmail(courseId, userEmail);"
      },
      {
        "lineNumber": 1581,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cStudentAttributes\u003e studentsInTeam \u003d studentsLogic"
      },
      {
        "lineNumber": 1582,
        "author": {
          "gitId": "-"
        },
        "content": "                    .getStudentsForTeam(student.team, courseId);"
      },
      {
        "lineNumber": 1583,
        "author": {
          "gitId": "-"
        },
        "content": "            for (StudentAttributes teammates : studentsInTeam) {"
      },
      {
        "lineNumber": 1584,
        "author": {
          "gitId": "-"
        },
        "content": "                studentsEmailInTeam.add(teammates.email);"
      },
      {
        "lineNumber": 1585,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1586,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1587,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1588,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseCommentAttributes\u003e allResponseComments \u003d"
      },
      {
        "lineNumber": 1589,
        "author": {
          "gitId": "-"
        },
        "content": "                frcLogic.getFeedbackResponseCommentForSession(courseId,"
      },
      {
        "lineNumber": 1590,
        "author": {
          "gitId": "-"
        },
        "content": "                        feedbackSessionName);"
      },
      {
        "lineNumber": 1591,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponseCommentAttributes frc : allResponseComments) {"
      },
      {
        "lineNumber": 1592,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackResponseAttributes relatedResponse \u003d relevantResponse.get(frc.feedbackResponseId);"
      },
      {
        "lineNumber": 1593,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes relatedQuestion \u003d relevantQuestions.get(frc.feedbackQuestionId);"
      },
      {
        "lineNumber": 1594,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean isVisibleResponseComment \u003d frcLogic.isResponseCommentVisibleForUser(userEmail,"
      },
      {
        "lineNumber": 1595,
        "author": {
          "gitId": "-"
        },
        "content": "                    role, student, studentsEmailInTeam, relatedResponse, relatedQuestion, frc);"
      },
      {
        "lineNumber": 1596,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isVisibleResponseComment) {"
      },
      {
        "lineNumber": 1597,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!frcLogic.isNameVisibleToUser(frc, relatedResponse, userEmail, roster)) {"
      },
      {
        "lineNumber": 1598,
        "author": {
          "gitId": "-"
        },
        "content": "                    frc.giverEmail \u003d Const.DISPLAYED_NAME_FOR_ANONYMOUS_PARTICIPANT;"
      },
      {
        "lineNumber": 1599,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1600,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1601,
        "author": {
          "gitId": "-"
        },
        "content": "                if (responseComments.get(frc.feedbackResponseId) \u003d\u003d null) {"
      },
      {
        "lineNumber": 1602,
        "author": {
          "gitId": "-"
        },
        "content": "                    responseComments.put(frc.feedbackResponseId,"
      },
      {
        "lineNumber": 1603,
        "author": {
          "gitId": "-"
        },
        "content": "                            new ArrayList\u003cFeedbackResponseCommentAttributes\u003e());"
      },
      {
        "lineNumber": 1604,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1605,
        "author": {
          "gitId": "-"
        },
        "content": "                responseComments.get(frc.feedbackResponseId).add(frc);"
      },
      {
        "lineNumber": 1606,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1607,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1608,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1609,
        "author": {
          "gitId": "-"
        },
        "content": "        for (List\u003cFeedbackResponseCommentAttributes\u003e responseCommentList : responseComments"
      },
      {
        "lineNumber": 1610,
        "author": {
          "gitId": "-"
        },
        "content": "                .values()) {"
      },
      {
        "lineNumber": 1611,
        "author": {
          "gitId": "-"
        },
        "content": "            sortByCreatedDate(responseCommentList);"
      },
      {
        "lineNumber": 1612,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1613,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1614,
        "author": {
          "gitId": "-"
        },
        "content": "        addSectionTeamNamesToTable(sectionTeamNameTable, roster, courseId, userEmail, role, feedbackSessionName, section);"
      },
      {
        "lineNumber": 1615,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1616,
        "author": {
          "gitId": "-"
        },
        "content": "        return new FeedbackSessionResultsBundle("
      },
      {
        "lineNumber": 1617,
        "author": {
          "gitId": "-"
        },
        "content": "                        session, responses, relevantQuestions, emailNameTable,"
      },
      {
        "lineNumber": 1618,
        "author": {
          "gitId": "-"
        },
        "content": "                        emailLastNameTable, emailTeamNameTable, sectionTeamNameTable,"
      },
      {
        "lineNumber": 1619,
        "author": {
          "gitId": "-"
        },
        "content": "                        visibilityTable, responseStatus, roster, responseComments);"
      },
      {
        "lineNumber": 1620,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1621,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1622,
        "author": {
          "gitId": "-"
        },
        "content": "    private FeedbackSessionResultsBundle getFeedbackSessionResultsForUserWithParams("
      },
      {
        "lineNumber": 1623,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail,"
      },
      {
        "lineNumber": 1624,
        "author": {
          "gitId": "-"
        },
        "content": "            UserRole role, CourseRoster roster, Map\u003cString, String\u003e params)"
      },
      {
        "lineNumber": 1625,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1626,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1627,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes session \u003d fsDb.getFeedbackSession(courseId, feedbackSessionName);"
      },
      {
        "lineNumber": 1628,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1629,
        "author": {
          "gitId": "-"
        },
        "content": "        if (session \u003d\u003d null) {"
      },
      {
        "lineNumber": 1630,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(ERROR_NON_EXISTENT_FS_VIEW + courseId + \"/\" + feedbackSessionName);"
      },
      {
        "lineNumber": 1631,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1632,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1633,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackQuestionAttributes\u003e allQuestions \u003d"
      },
      {
        "lineNumber": 1634,
        "author": {
          "gitId": "-"
        },
        "content": "                fqLogic.getFeedbackQuestionsForSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1635,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1636,
        "author": {
          "gitId": "-"
        },
        "content": "        //Show all questions even if no responses, unless is an ajax request for a specific question."
      },
      {
        "lineNumber": 1637,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, FeedbackQuestionAttributes\u003e relevantQuestions \u003d getAllQuestions(role, params, allQuestions);"
      },
      {
        "lineNumber": 1638,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1639,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isIncludeResponseStatus \u003d Boolean.parseBoolean(params.get(PARAM_IS_INCLUDE_RESPONSE_STATUS));"
      },
      {
        "lineNumber": 1640,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1641,
        "author": {
          "gitId": "-"
        },
        "content": "        String section \u003d params.get(PARAM_SECTION);"
      },
      {
        "lineNumber": 1642,
        "author": {
          "gitId": "-"
        },
        "content": "        String questionId \u003d params.get(PARAM_QUESTION_ID);"
      },
      {
        "lineNumber": 1643,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1644,
        "author": {
          "gitId": "-"
        },
        "content": "        if (questionId !\u003d null) {"
      },
      {
        "lineNumber": 1645,
        "author": {
          "gitId": "-"
        },
        "content": "            return getFeedbackSessionResultsForQuestionId(feedbackSessionName, courseId, userEmail, role, roster, session,"
      },
      {
        "lineNumber": 1646,
        "author": {
          "gitId": "-"
        },
        "content": "                    allQuestions, relevantQuestions, isIncludeResponseStatus, section, questionId);"
      },
      {
        "lineNumber": 1647,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1648,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1649,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, FeedbackQuestionAttributes\u003e allQuestionsMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1650,
        "author": {
          "gitId": "-"
        },
        "content": "        putQuestionsIntoMap(allQuestions, allQuestionsMap);"
      },
      {
        "lineNumber": 1651,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1652,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e allResponses \u003d getAllResponses(feedbackSessionName, courseId, params, section);"
      },
      {
        "lineNumber": 1653,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1654,
        "author": {
          "gitId": "-"
        },
        "content": "        String rangeString \u003d params.get(PARAM_RANGE);"
      },
      {
        "lineNumber": 1655,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isComplete \u003d rangeString \u003d\u003d null || allResponses.size() \u003c\u003d Integer.parseInt(rangeString);"
      },
      {
        "lineNumber": 1656,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1657,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!isComplete) {"
      },
      {
        "lineNumber": 1658,
        "author": {
          "gitId": "-"
        },
        "content": "            putQuestionsIntoMap(allQuestions, relevantQuestions);"
      },
      {
        "lineNumber": 1659,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1660,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1661,
        "author": {
          "gitId": "-"
        },
        "content": "        // create empty data containers to store results"
      },
      {
        "lineNumber": 1662,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 1663,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e emailNameTable \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1664,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e emailLastNameTable \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1665,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e emailTeamNameTable \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1666,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, Set\u003cString\u003e\u003e sectionTeamNameTable \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1667,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, boolean[]\u003e visibilityTable \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1668,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionResponseStatus responseStatus \u003d section \u003d\u003d null \u0026\u0026 isIncludeResponseStatus"
      },
      {
        "lineNumber": 1669,
        "author": {
          "gitId": "-"
        },
        "content": "                                                     ? getFeedbackSessionResponseStatus(session, roster, allQuestions)"
      },
      {
        "lineNumber": 1670,
        "author": {
          "gitId": "-"
        },
        "content": "                                                     : null;"
      },
      {
        "lineNumber": 1671,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1672,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student \u003d getStudent(courseId, userEmail, role);"
      },
      {
        "lineNumber": 1673,
        "author": {
          "gitId": "-"
        },
        "content": "        Set\u003cString\u003e studentsEmailInTeam \u003d getTeammateEmails(courseId, student);"
      },
      {
        "lineNumber": 1674,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1675,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor \u003d getInstructor(courseId, userEmail, role);"
      },
      {
        "lineNumber": 1676,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1677,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, FeedbackResponseAttributes\u003e relevantResponse \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1678,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponseAttributes response : allResponses) {"
      },
      {
        "lineNumber": 1679,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes relatedQuestion \u003d allQuestionsMap.get(response.feedbackQuestionId);"
      },
      {
        "lineNumber": 1680,
        "author": {
          "gitId": "-"
        },
        "content": "            if (relatedQuestion !\u003d null) {"
      },
      {
        "lineNumber": 1681,
        "author": {
          "gitId": "-"
        },
        "content": "                boolean isVisibleResponse \u003d isResponseVisibleForUser("
      },
      {
        "lineNumber": 1682,
        "author": {
          "gitId": "-"
        },
        "content": "                        userEmail, role, student, studentsEmailInTeam, response, relatedQuestion, instructor);"
      },
      {
        "lineNumber": 1683,
        "author": {
          "gitId": "-"
        },
        "content": "                if (isVisibleResponse) {"
      },
      {
        "lineNumber": 1684,
        "author": {
          "gitId": "-"
        },
        "content": "                    responses.add(response);"
      },
      {
        "lineNumber": 1685,
        "author": {
          "gitId": "-"
        },
        "content": "                    relevantResponse.put(response.getId(), response);"
      },
      {
        "lineNumber": 1686,
        "author": {
          "gitId": "-"
        },
        "content": "                    relevantQuestions.put(relatedQuestion.getId(), relatedQuestion);"
      },
      {
        "lineNumber": 1687,
        "author": {
          "gitId": "-"
        },
        "content": "                    addEmailNamePairsToTable(emailNameTable, response, relatedQuestion, roster);"
      },
      {
        "lineNumber": 1688,
        "author": {
          "gitId": "-"
        },
        "content": "                    addEmailLastNamePairsToTable(emailLastNameTable, response, relatedQuestion, roster);"
      },
      {
        "lineNumber": 1689,
        "author": {
          "gitId": "-"
        },
        "content": "                    addEmailTeamNamePairsToTable(emailTeamNameTable, response, relatedQuestion, roster);"
      },
      {
        "lineNumber": 1690,
        "author": {
          "gitId": "-"
        },
        "content": "                    addVisibilityToTable(visibilityTable, relatedQuestion, response, userEmail, role, roster);"
      },
      {
        "lineNumber": 1691,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1692,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1693,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1694,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, List\u003cFeedbackResponseCommentAttributes\u003e\u003e responseComments \u003d getResponseComments("
      },
      {
        "lineNumber": 1695,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionName, courseId, userEmail, role, roster, relevantQuestions, section, student,"
      },
      {
        "lineNumber": 1696,
        "author": {
          "gitId": "-"
        },
        "content": "                studentsEmailInTeam, relevantResponse);"
      },
      {
        "lineNumber": 1697,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1698,
        "author": {
          "gitId": "-"
        },
        "content": "        addSectionTeamNamesToTable(sectionTeamNameTable, roster, courseId, userEmail, role, feedbackSessionName, section);"
      },
      {
        "lineNumber": 1699,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1700,
        "author": {
          "gitId": "-"
        },
        "content": "        return new FeedbackSessionResultsBundle("
      },
      {
        "lineNumber": 1701,
        "author": {
          "gitId": "-"
        },
        "content": "                session, responses, relevantQuestions, emailNameTable,"
      },
      {
        "lineNumber": 1702,
        "author": {
          "gitId": "-"
        },
        "content": "                emailLastNameTable, emailTeamNameTable, sectionTeamNameTable,"
      },
      {
        "lineNumber": 1703,
        "author": {
          "gitId": "-"
        },
        "content": "                visibilityTable, responseStatus, roster, responseComments, isComplete);"
      },
      {
        "lineNumber": 1704,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1705,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1706,
        "author": {
          "gitId": "-"
        },
        "content": "    private Map\u003cString, List\u003cFeedbackResponseCommentAttributes\u003e\u003e getResponseComments("
      },
      {
        "lineNumber": 1707,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail, UserRole role, CourseRoster roster,"
      },
      {
        "lineNumber": 1708,
        "author": {
          "gitId": "-"
        },
        "content": "            Map\u003cString, FeedbackQuestionAttributes\u003e relevantQuestions, String section, StudentAttributes student,"
      },
      {
        "lineNumber": 1709,
        "author": {
          "gitId": "-"
        },
        "content": "            Set\u003cString\u003e studentsEmailInTeam, Map\u003cString, FeedbackResponseAttributes\u003e relevantResponse) {"
      },
      {
        "lineNumber": 1710,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1711,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, List\u003cFeedbackResponseCommentAttributes\u003e\u003e responseComments \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1712,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseCommentAttributes\u003e allResponseComments \u003d"
      },
      {
        "lineNumber": 1713,
        "author": {
          "gitId": "-"
        },
        "content": "                frcLogic.getFeedbackResponseCommentForSessionInSection(courseId, feedbackSessionName, section);"
      },
      {
        "lineNumber": 1714,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponseCommentAttributes frc : allResponseComments) {"
      },
      {
        "lineNumber": 1715,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackResponseAttributes relatedResponse \u003d relevantResponse.get(frc.feedbackResponseId);"
      },
      {
        "lineNumber": 1716,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes relatedQuestion \u003d relevantQuestions.get(frc.feedbackQuestionId);"
      },
      {
        "lineNumber": 1717,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean isVisibleResponseComment \u003d frcLogic.isResponseCommentVisibleForUser("
      },
      {
        "lineNumber": 1718,
        "author": {
          "gitId": "-"
        },
        "content": "                    userEmail, role, student, studentsEmailInTeam, relatedResponse, relatedQuestion, frc);"
      },
      {
        "lineNumber": 1719,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isVisibleResponseComment) {"
      },
      {
        "lineNumber": 1720,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!frcLogic.isNameVisibleToUser(frc, relatedResponse, userEmail, roster)) {"
      },
      {
        "lineNumber": 1721,
        "author": {
          "gitId": "-"
        },
        "content": "                    frc.giverEmail \u003d Const.DISPLAYED_NAME_FOR_ANONYMOUS_PARTICIPANT;"
      },
      {
        "lineNumber": 1722,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1723,
        "author": {
          "gitId": "-"
        },
        "content": "                List\u003cFeedbackResponseCommentAttributes\u003e frcList \u003d responseComments.get(frc.feedbackResponseId);"
      },
      {
        "lineNumber": 1724,
        "author": {
          "gitId": "-"
        },
        "content": "                if (frcList \u003d\u003d null) {"
      },
      {
        "lineNumber": 1725,
        "author": {
          "gitId": "-"
        },
        "content": "                    frcList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 1726,
        "author": {
          "gitId": "-"
        },
        "content": "                    frcList.add(frc);"
      },
      {
        "lineNumber": 1727,
        "author": {
          "gitId": "-"
        },
        "content": "                    responseComments.put(frc.feedbackResponseId, frcList);"
      },
      {
        "lineNumber": 1728,
        "author": {
          "gitId": "-"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 1729,
        "author": {
          "gitId": "-"
        },
        "content": "                    frcList.add(frc);"
      },
      {
        "lineNumber": 1730,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1731,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1732,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1733,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1734,
        "author": {
          "gitId": "-"
        },
        "content": "        for (List\u003cFeedbackResponseCommentAttributes\u003e responseCommentList : responseComments.values()) {"
      },
      {
        "lineNumber": 1735,
        "author": {
          "gitId": "-"
        },
        "content": "            sortByCreatedDate(responseCommentList);"
      },
      {
        "lineNumber": 1736,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1737,
        "author": {
          "gitId": "-"
        },
        "content": "        return responseComments;"
      },
      {
        "lineNumber": 1738,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1739,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1740,
        "author": {
          "gitId": "-"
        },
        "content": "    private void putQuestionsIntoMap("
      },
      {
        "lineNumber": 1741,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cFeedbackQuestionAttributes\u003e questions, Map\u003cString, FeedbackQuestionAttributes\u003e questionMap) {"
      },
      {
        "lineNumber": 1742,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackQuestionAttributes qn : questions) {"
      },
      {
        "lineNumber": 1743,
        "author": {
          "gitId": "-"
        },
        "content": "            questionMap.put(qn.getId(), qn);"
      },
      {
        "lineNumber": 1744,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1745,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1746,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1747,
        "author": {
          "gitId": "-"
        },
        "content": "    private InstructorAttributes getInstructor(String courseId, String userEmail, UserRole role) {"
      },
      {
        "lineNumber": 1748,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isInstructor(role)) {"
      },
      {
        "lineNumber": 1749,
        "author": {
          "gitId": "-"
        },
        "content": "            return instructorsLogic.getInstructorForEmail(courseId, userEmail);"
      },
      {
        "lineNumber": 1750,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1751,
        "author": {
          "gitId": "-"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 1752,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1753,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1754,
        "author": {
          "gitId": "-"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 1755,
        "author": {
          "gitId": "-"
        },
        "content": "    * Gets emails of student\u0027s teammates if student is not null, else returns an empty Set\u003cString\u003e"
      },
      {
        "lineNumber": 1756,
        "author": {
          "gitId": "-"
        },
        "content": "    */"
      },
      {
        "lineNumber": 1757,
        "author": {
          "gitId": "-"
        },
        "content": "    private Set\u003cString\u003e getTeammateEmails(String courseId, StudentAttributes student) {"
      },
      {
        "lineNumber": 1758,
        "author": {
          "gitId": "-"
        },
        "content": "        Set\u003cString\u003e studentsEmailInTeam \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 1759,
        "author": {
          "gitId": "-"
        },
        "content": "        if (student !\u003d null) {"
      },
      {
        "lineNumber": 1760,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cStudentAttributes\u003e studentsInTeam \u003d studentsLogic.getStudentsForTeam(student.team, courseId);"
      },
      {
        "lineNumber": 1761,
        "author": {
          "gitId": "-"
        },
        "content": "            for (StudentAttributes teammates : studentsInTeam) {"
      },
      {
        "lineNumber": 1762,
        "author": {
          "gitId": "-"
        },
        "content": "                studentsEmailInTeam.add(teammates.email);"
      },
      {
        "lineNumber": 1763,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1764,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1765,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsEmailInTeam;"
      },
      {
        "lineNumber": 1766,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1767,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1768,
        "author": {
          "gitId": "-"
        },
        "content": "    private StudentAttributes getStudent(String courseId, String userEmail, UserRole role) {"
      },
      {
        "lineNumber": 1769,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isStudent(role)) {"
      },
      {
        "lineNumber": 1770,
        "author": {
          "gitId": "-"
        },
        "content": "            return studentsLogic.getStudentForEmail(courseId, userEmail);"
      },
      {
        "lineNumber": 1771,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1772,
        "author": {
          "gitId": "-"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 1773,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1774,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1775,
        "author": {
          "gitId": "-"
        },
        "content": "    private FeedbackSessionResultsBundle getFeedbackSessionResultsForQuestionId(String feedbackSessionName,"
      },
      {
        "lineNumber": 1776,
        "author": {
          "gitId": "-"
        },
        "content": "                String courseId, String userEmail, UserRole role, CourseRoster roster, FeedbackSessionAttributes session,"
      },
      {
        "lineNumber": 1777,
        "author": {
          "gitId": "-"
        },
        "content": "                List\u003cFeedbackQuestionAttributes\u003e allQuestions, Map\u003cString, FeedbackQuestionAttributes\u003e relevantQuestions,"
      },
      {
        "lineNumber": 1778,
        "author": {
          "gitId": "-"
        },
        "content": "                boolean isIncludeResponseStatus, String section, String questionId) {"
      },
      {
        "lineNumber": 1779,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1780,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 1781,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e emailNameTable \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1782,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e emailLastNameTable \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1783,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e emailTeamNameTable \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1784,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, Set\u003cString\u003e\u003e sectionTeamNameTable \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1785,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, boolean[]\u003e visibilityTable \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1786,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, List\u003cFeedbackResponseCommentAttributes\u003e\u003e responseComments \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1787,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionResponseStatus responseStatus \u003d new FeedbackSessionResponseStatus();"
      },
      {
        "lineNumber": 1788,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isQueryingResponseRateStatus \u003d questionId.equals(QUESTION_ID_FOR_RESPONSE_RATE);"
      },
      {
        "lineNumber": 1789,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1790,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isQueryingResponseRateStatus) {"
      },
      {
        "lineNumber": 1791,
        "author": {
          "gitId": "-"
        },
        "content": "            responseStatus \u003d section \u003d\u003d null \u0026\u0026 isIncludeResponseStatus"
      },
      {
        "lineNumber": 1792,
        "author": {
          "gitId": "-"
        },
        "content": "                           ? getFeedbackSessionResponseStatus(session, roster, allQuestions)"
      },
      {
        "lineNumber": 1793,
        "author": {
          "gitId": "-"
        },
        "content": "                           : null;"
      },
      {
        "lineNumber": 1794,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 1795,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes question \u003d fqLogic.getFeedbackQuestion(questionId);"
      },
      {
        "lineNumber": 1796,
        "author": {
          "gitId": "-"
        },
        "content": "            if (question !\u003d null) {"
      },
      {
        "lineNumber": 1797,
        "author": {
          "gitId": "-"
        },
        "content": "                relevantQuestions.put(question.getId(), question);"
      },
      {
        "lineNumber": 1798,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1799,
        "author": {
          "gitId": "-"
        },
        "content": "                List\u003cFeedbackResponseAttributes\u003e responsesForThisQn;"
      },
      {
        "lineNumber": 1800,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1801,
        "author": {
          "gitId": "-"
        },
        "content": "                responsesForThisQn \u003d frLogic.getViewableFeedbackResponsesForQuestionInSection("
      },
      {
        "lineNumber": 1802,
        "author": {
          "gitId": "-"
        },
        "content": "                                                question, userEmail, UserRole.INSTRUCTOR, section);"
      },
      {
        "lineNumber": 1803,
        "author": {
          "gitId": "-"
        },
        "content": "                StudentAttributes student \u003d getStudent(courseId, userEmail, role);"
      },
      {
        "lineNumber": 1804,
        "author": {
          "gitId": "-"
        },
        "content": "                Set\u003cString\u003e studentsEmailInTeam \u003d getTeammateEmails(courseId, student);"
      },
      {
        "lineNumber": 1805,
        "author": {
          "gitId": "-"
        },
        "content": "                boolean hasResponses \u003d !responsesForThisQn.isEmpty();"
      },
      {
        "lineNumber": 1806,
        "author": {
          "gitId": "-"
        },
        "content": "                if (hasResponses) {"
      },
      {
        "lineNumber": 1807,
        "author": {
          "gitId": "-"
        },
        "content": "                    Map\u003cString, FeedbackResponseAttributes\u003e relevantResponse \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1808,
        "author": {
          "gitId": "-"
        },
        "content": "                    for (FeedbackResponseAttributes response : responsesForThisQn) {"
      },
      {
        "lineNumber": 1809,
        "author": {
          "gitId": "-"
        },
        "content": "                        InstructorAttributes instructor \u003d getInstructor(courseId, userEmail, role);"
      },
      {
        "lineNumber": 1810,
        "author": {
          "gitId": "-"
        },
        "content": "                        boolean isVisibleResponse \u003d isResponseVisibleForUser(userEmail, role, null, null, response,"
      },
      {
        "lineNumber": 1811,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                             question, instructor);"
      },
      {
        "lineNumber": 1812,
        "author": {
          "gitId": "-"
        },
        "content": "                        if (isVisibleResponse) {"
      },
      {
        "lineNumber": 1813,
        "author": {
          "gitId": "-"
        },
        "content": "                            relevantResponse.put(response.getId(), response);"
      },
      {
        "lineNumber": 1814,
        "author": {
          "gitId": "-"
        },
        "content": "                            relevantQuestions.put(question.getId(), question);"
      },
      {
        "lineNumber": 1815,
        "author": {
          "gitId": "-"
        },
        "content": "                            responses.add(response);"
      },
      {
        "lineNumber": 1816,
        "author": {
          "gitId": "-"
        },
        "content": "                            addEmailNamePairsToTable(emailNameTable, response, question, roster);"
      },
      {
        "lineNumber": 1817,
        "author": {
          "gitId": "-"
        },
        "content": "                            addEmailLastNamePairsToTable(emailLastNameTable, response, question, roster);"
      },
      {
        "lineNumber": 1818,
        "author": {
          "gitId": "-"
        },
        "content": "                            addEmailTeamNamePairsToTable(emailTeamNameTable, response, question, roster);"
      },
      {
        "lineNumber": 1819,
        "author": {
          "gitId": "-"
        },
        "content": "                            addVisibilityToTable(visibilityTable, question, response, userEmail, role, roster);"
      },
      {
        "lineNumber": 1820,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 1821,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1822,
        "author": {
          "gitId": "-"
        },
        "content": "                    responseComments \u003d getResponseComments("
      },
      {
        "lineNumber": 1823,
        "author": {
          "gitId": "-"
        },
        "content": "                            feedbackSessionName, courseId, userEmail, role, roster, relevantQuestions, section, student,"
      },
      {
        "lineNumber": 1824,
        "author": {
          "gitId": "-"
        },
        "content": "                            studentsEmailInTeam, relevantResponse);"
      },
      {
        "lineNumber": 1825,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1826,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1827,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1828,
        "author": {
          "gitId": "-"
        },
        "content": "        addSectionTeamNamesToTable("
      },
      {
        "lineNumber": 1829,
        "author": {
          "gitId": "-"
        },
        "content": "                sectionTeamNameTable, roster, courseId, userEmail, role, feedbackSessionName, section);"
      },
      {
        "lineNumber": 1830,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1831,
        "author": {
          "gitId": "-"
        },
        "content": "        return new FeedbackSessionResultsBundle("
      },
      {
        "lineNumber": 1832,
        "author": {
          "gitId": "-"
        },
        "content": "                session, responses, relevantQuestions, emailNameTable,"
      },
      {
        "lineNumber": 1833,
        "author": {
          "gitId": "-"
        },
        "content": "                emailLastNameTable, emailTeamNameTable, sectionTeamNameTable,"
      },
      {
        "lineNumber": 1834,
        "author": {
          "gitId": "-"
        },
        "content": "                visibilityTable, responseStatus, roster, responseComments, true);"
      },
      {
        "lineNumber": 1835,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1836,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1837,
        "author": {
          "gitId": "-"
        },
        "content": "    private Map\u003cString, FeedbackQuestionAttributes\u003e getAllQuestions("
      },
      {
        "lineNumber": 1838,
        "author": {
          "gitId": "-"
        },
        "content": "            UserRole role, Map\u003cString, String\u003e params, List\u003cFeedbackQuestionAttributes\u003e allQuestions) {"
      },
      {
        "lineNumber": 1839,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, FeedbackQuestionAttributes\u003e relevantQuestions \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1840,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1841,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isInstructor(role) \u0026\u0026 !params.containsKey(PARAM_QUESTION_ID)) {"
      },
      {
        "lineNumber": 1842,
        "author": {
          "gitId": "-"
        },
        "content": "            putQuestionsIntoMap(allQuestions, relevantQuestions);"
      },
      {
        "lineNumber": 1843,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1844,
        "author": {
          "gitId": "-"
        },
        "content": "        return relevantQuestions;"
      },
      {
        "lineNumber": 1845,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1846,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1847,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean isStudent(UserRole role) {"
      },
      {
        "lineNumber": 1848,
        "author": {
          "gitId": "-"
        },
        "content": "        return role \u003d\u003d UserRole.STUDENT;"
      },
      {
        "lineNumber": 1849,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1850,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1851,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean isInstructor(UserRole role) {"
      },
      {
        "lineNumber": 1852,
        "author": {
          "gitId": "-"
        },
        "content": "        return role \u003d\u003d UserRole.INSTRUCTOR;"
      },
      {
        "lineNumber": 1853,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1854,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1855,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cFeedbackResponseAttributes\u003e getAllResponses(String feedbackSessionName, String courseId,"
      },
      {
        "lineNumber": 1856,
        "author": {
          "gitId": "-"
        },
        "content": "            Map\u003cString, String\u003e params, String section) {"
      },
      {
        "lineNumber": 1857,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isInSection \u003d Boolean.parseBoolean(params.get(PARAM_IN_SECTION));"
      },
      {
        "lineNumber": 1858,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isToSection \u003d Boolean.parseBoolean(params.get(PARAM_TO_SECTION));"
      },
      {
        "lineNumber": 1859,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isFromSection \u003d Boolean.parseBoolean(params.get(PARAM_FROM_SECTION));"
      },
      {
        "lineNumber": 1860,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1861,
        "author": {
          "gitId": "-"
        },
        "content": "        if (params.get(PARAM_RANGE) \u003d\u003d null) {"
      },
      {
        "lineNumber": 1862,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isInSection) {"
      },
      {
        "lineNumber": 1863,
        "author": {
          "gitId": "-"
        },
        "content": "                return frLogic.getFeedbackResponsesForSessionInSection(feedbackSessionName, courseId, section);"
      },
      {
        "lineNumber": 1864,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (isFromSection) {"
      },
      {
        "lineNumber": 1865,
        "author": {
          "gitId": "-"
        },
        "content": "                return frLogic.getFeedbackResponsesForSessionFromSection(feedbackSessionName, courseId, section);"
      },
      {
        "lineNumber": 1866,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (isToSection) {"
      },
      {
        "lineNumber": 1867,
        "author": {
          "gitId": "-"
        },
        "content": "                return frLogic.getFeedbackResponsesForSessionToSection(feedbackSessionName, courseId, section);"
      },
      {
        "lineNumber": 1868,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 1869,
        "author": {
          "gitId": "-"
        },
        "content": "                Assumption.fail(ASSUMPTION_FAIL_RESPONSE_ORIGIN);"
      },
      {
        "lineNumber": 1870,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1871,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 1872,
        "author": {
          "gitId": "-"
        },
        "content": "            int range \u003d Integer.parseInt(params.get(PARAM_RANGE));"
      },
      {
        "lineNumber": 1873,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isInSection) {"
      },
      {
        "lineNumber": 1874,
        "author": {
          "gitId": "-"
        },
        "content": "                return frLogic.getFeedbackResponsesForSessionInSectionWithinRange("
      },
      {
        "lineNumber": 1875,
        "author": {
          "gitId": "-"
        },
        "content": "                        feedbackSessionName, courseId, section, range);"
      },
      {
        "lineNumber": 1876,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (isFromSection) {"
      },
      {
        "lineNumber": 1877,
        "author": {
          "gitId": "-"
        },
        "content": "                return frLogic.getFeedbackResponsesForSessionFromSectionWithinRange("
      },
      {
        "lineNumber": 1878,
        "author": {
          "gitId": "-"
        },
        "content": "                        feedbackSessionName, courseId, section, range);"
      },
      {
        "lineNumber": 1879,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (isToSection) {"
      },
      {
        "lineNumber": 1880,
        "author": {
          "gitId": "-"
        },
        "content": "                return frLogic.getFeedbackResponsesForSessionToSectionWithinRange("
      },
      {
        "lineNumber": 1881,
        "author": {
          "gitId": "-"
        },
        "content": "                        feedbackSessionName, courseId, section, range);"
      },
      {
        "lineNumber": 1882,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 1883,
        "author": {
          "gitId": "-"
        },
        "content": "                Assumption.fail(ASSUMPTION_FAIL_RESPONSE_ORIGIN);"
      },
      {
        "lineNumber": 1884,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1885,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1886,
        "author": {
          "gitId": "-"
        },
        "content": "        return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 1887,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1888,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1889,
        "author": {
          "gitId": "-"
        },
        "content": "    private void addSectionTeamNamesToTable(Map\u003cString, Set\u003cString\u003e\u003e sectionTeamNameTable,"
      },
      {
        "lineNumber": 1890,
        "author": {
          "gitId": "-"
        },
        "content": "                                    CourseRoster roster, String courseId, String userEmail, UserRole role,"
      },
      {
        "lineNumber": 1891,
        "author": {
          "gitId": "-"
        },
        "content": "                                    String feedbackSessionName, String sectionToView) {"
      },
      {
        "lineNumber": 1892,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor \u003d getInstructor(courseId, userEmail, role);"
      },
      {
        "lineNumber": 1893,
        "author": {
          "gitId": "-"
        },
        "content": "        if (instructor !\u003d null) {"
      },
      {
        "lineNumber": 1894,
        "author": {
          "gitId": "-"
        },
        "content": "            for (StudentAttributes student : roster.getStudents()) {"
      },
      {
        "lineNumber": 1895,
        "author": {
          "gitId": "-"
        },
        "content": "                boolean isVisibleResponse \u003d"
      },
      {
        "lineNumber": 1896,
        "author": {
          "gitId": "-"
        },
        "content": "                        instructor.isAllowedForPrivilege("
      },
      {
        "lineNumber": 1897,
        "author": {
          "gitId": "-"
        },
        "content": "                                           student.section,"
      },
      {
        "lineNumber": 1898,
        "author": {
          "gitId": "-"
        },
        "content": "                                           feedbackSessionName,"
      },
      {
        "lineNumber": 1899,
        "author": {
          "gitId": "-"
        },
        "content": "                                           Const.ParamsNames.INSTRUCTOR_PERMISSION_VIEW_SESSION_IN_SECTIONS);"
      },
      {
        "lineNumber": 1900,
        "author": {
          "gitId": "-"
        },
        "content": "                boolean isStudentInSelectedSection \u003d student.section.equals(sectionToView);"
      },
      {
        "lineNumber": 1901,
        "author": {
          "gitId": "-"
        },
        "content": "                boolean isViewingAllSections \u003d sectionToView \u003d\u003d null;"
      },
      {
        "lineNumber": 1902,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1903,
        "author": {
          "gitId": "-"
        },
        "content": "                if (isVisibleResponse \u0026\u0026 (isViewingAllSections"
      },
      {
        "lineNumber": 1904,
        "author": {
          "gitId": "-"
        },
        "content": "                                          || isStudentInSelectedSection)) {"
      },
      {
        "lineNumber": 1905,
        "author": {
          "gitId": "-"
        },
        "content": "                    String section \u003d student.section;"
      },
      {
        "lineNumber": 1906,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1907,
        "author": {
          "gitId": "-"
        },
        "content": "                    sectionTeamNameTable.computeIfAbsent(section, key -\u003e new HashSet\u003c\u003e())"
      },
      {
        "lineNumber": 1908,
        "author": {
          "gitId": "-"
        },
        "content": "                                        .add(student.team);"
      },
      {
        "lineNumber": 1909,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1910,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1911,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1912,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1913,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1914,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1915,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean isResponseVisibleForUser(String userEmail,"
      },
      {
        "lineNumber": 1916,
        "author": {
          "gitId": "-"
        },
        "content": "            UserRole role, StudentAttributes student,"
      },
      {
        "lineNumber": 1917,
        "author": {
          "gitId": "-"
        },
        "content": "            Set\u003cString\u003e studentsEmailInTeam,"
      },
      {
        "lineNumber": 1918,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackResponseAttributes response,"
      },
      {
        "lineNumber": 1919,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes relatedQuestion, InstructorAttributes instructor) {"
      },
      {
        "lineNumber": 1920,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1921,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isVisibleResponse \u003d false;"
      },
      {
        "lineNumber": 1922,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isInstructor(role) \u0026\u0026 relatedQuestion.isResponseVisibleTo(FeedbackParticipantType.INSTRUCTORS)"
      },
      {
        "lineNumber": 1923,
        "author": {
          "gitId": "-"
        },
        "content": "                || response.recipient.equals(userEmail)"
      },
      {
        "lineNumber": 1924,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u0026\u0026 relatedQuestion.isResponseVisibleTo(FeedbackParticipantType.RECEIVER)"
      },
      {
        "lineNumber": 1925,
        "author": {
          "gitId": "-"
        },
        "content": "                || response.giver.equals(userEmail)"
      },
      {
        "lineNumber": 1926,
        "author": {
          "gitId": "-"
        },
        "content": "                || isStudent(role) \u0026\u0026 relatedQuestion.isResponseVisibleTo(FeedbackParticipantType.STUDENTS)) {"
      },
      {
        "lineNumber": 1927,
        "author": {
          "gitId": "-"
        },
        "content": "            isVisibleResponse \u003d true;"
      },
      {
        "lineNumber": 1928,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (studentsEmailInTeam !\u003d null \u0026\u0026 isStudent(role)) {"
      },
      {
        "lineNumber": 1929,
        "author": {
          "gitId": "-"
        },
        "content": "            if (relatedQuestion.recipientType \u003d\u003d FeedbackParticipantType.TEAMS"
      },
      {
        "lineNumber": 1930,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 relatedQuestion.isResponseVisibleTo(FeedbackParticipantType.RECEIVER)"
      },
      {
        "lineNumber": 1931,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 response.recipient.equals(student.team)) {"
      },
      {
        "lineNumber": 1932,
        "author": {
          "gitId": "-"
        },
        "content": "                isVisibleResponse \u003d true;"
      },
      {
        "lineNumber": 1933,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (relatedQuestion.giverType \u003d\u003d FeedbackParticipantType.TEAMS"
      },
      {
        "lineNumber": 1934,
        "author": {
          "gitId": "-"
        },
        "content": "                       \u0026\u0026 studentsEmailInTeam.contains(response.giver)) {"
      },
      {
        "lineNumber": 1935,
        "author": {
          "gitId": "-"
        },
        "content": "                isVisibleResponse \u003d true;"
      },
      {
        "lineNumber": 1936,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (relatedQuestion.isResponseVisibleTo(FeedbackParticipantType.OWN_TEAM_MEMBERS)"
      },
      {
        "lineNumber": 1937,
        "author": {
          "gitId": "-"
        },
        "content": "                       \u0026\u0026 studentsEmailInTeam.contains(response.giver)) {"
      },
      {
        "lineNumber": 1938,
        "author": {
          "gitId": "-"
        },
        "content": "                isVisibleResponse \u003d true;"
      },
      {
        "lineNumber": 1939,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (relatedQuestion.isResponseVisibleTo(FeedbackParticipantType.RECEIVER_TEAM_MEMBERS)"
      },
      {
        "lineNumber": 1940,
        "author": {
          "gitId": "-"
        },
        "content": "                       \u0026\u0026 studentsEmailInTeam.contains(response.recipient)) {"
      },
      {
        "lineNumber": 1941,
        "author": {
          "gitId": "-"
        },
        "content": "                isVisibleResponse \u003d true;"
      },
      {
        "lineNumber": 1942,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1943,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1944,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isVisibleResponse \u0026\u0026 instructor !\u003d null) {"
      },
      {
        "lineNumber": 1945,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean isGiverSectionRestricted \u003d"
      },
      {
        "lineNumber": 1946,
        "author": {
          "gitId": "-"
        },
        "content": "                    !instructor.isAllowedForPrivilege(response.giverSection,"
      },
      {
        "lineNumber": 1947,
        "author": {
          "gitId": "-"
        },
        "content": "                                                      response.feedbackSessionName,"
      },
      {
        "lineNumber": 1948,
        "author": {
          "gitId": "-"
        },
        "content": "                                                      Const.ParamsNames.INSTRUCTOR_PERMISSION_VIEW_SESSION_IN_SECTIONS);"
      },
      {
        "lineNumber": 1949,
        "author": {
          "gitId": "-"
        },
        "content": "            // If instructors are not restricted to view the giver\u0027s section,"
      },
      {
        "lineNumber": 1950,
        "author": {
          "gitId": "-"
        },
        "content": "            // they are allowed to view responses to GENERAL, subject to visibility options"
      },
      {
        "lineNumber": 1951,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean isRecipientSectionRestricted \u003d"
      },
      {
        "lineNumber": 1952,
        "author": {
          "gitId": "-"
        },
        "content": "                    relatedQuestion.recipientType !\u003d FeedbackParticipantType.NONE"
      },
      {
        "lineNumber": 1953,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 !instructor.isAllowedForPrivilege(response.recipientSection,"
      },
      {
        "lineNumber": 1954,
        "author": {
          "gitId": "-"
        },
        "content": "                                                         response.feedbackSessionName,"
      },
      {
        "lineNumber": 1955,
        "author": {
          "gitId": "-"
        },
        "content": "                                                         Const.ParamsNames.INSTRUCTOR_PERMISSION_VIEW_SESSION_IN_SECTIONS);"
      },
      {
        "lineNumber": 1956,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1957,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean isNotAllowedForInstructor \u003d isGiverSectionRestricted || isRecipientSectionRestricted;"
      },
      {
        "lineNumber": 1958,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isNotAllowedForInstructor) {"
      },
      {
        "lineNumber": 1959,
        "author": {
          "gitId": "-"
        },
        "content": "                isVisibleResponse \u003d false;"
      },
      {
        "lineNumber": 1960,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1961,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1962,
        "author": {
          "gitId": "-"
        },
        "content": "        return isVisibleResponse;"
      },
      {
        "lineNumber": 1963,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1964,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1965,
        "author": {
          "gitId": "-"
        },
        "content": "    private void sortByCreatedDate(List\u003cFeedbackResponseCommentAttributes\u003e responseCommentList) {"
      },
      {
        "lineNumber": 1966,
        "author": {
          "gitId": "-"
        },
        "content": "        responseCommentList.sort(Comparator.comparing(responseComment -\u003e responseComment.createdAt));"
      },
      {
        "lineNumber": 1967,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1968,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1969,
        "author": {
          "gitId": "-"
        },
        "content": "    private void addVisibilityToTable(Map\u003cString, boolean[]\u003e visibilityTable,"
      },
      {
        "lineNumber": 1970,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes question,"
      },
      {
        "lineNumber": 1971,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackResponseAttributes response,"
      },
      {
        "lineNumber": 1972,
        "author": {
          "gitId": "-"
        },
        "content": "            String userEmail,"
      },
      {
        "lineNumber": 1973,
        "author": {
          "gitId": "-"
        },
        "content": "            UserRole role,"
      },
      {
        "lineNumber": 1974,
        "author": {
          "gitId": "-"
        },
        "content": "            CourseRoster roster) {"
      },
      {
        "lineNumber": 1975,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean[] visibility \u003d new boolean[2];"
      },
      {
        "lineNumber": 1976,
        "author": {
          "gitId": "-"
        },
        "content": "        visibility[Const.VISIBILITY_TABLE_GIVER] \u003d frLogic.isNameVisibleToUser("
      },
      {
        "lineNumber": 1977,
        "author": {
          "gitId": "-"
        },
        "content": "                question, response, userEmail, role, true, roster);"
      },
      {
        "lineNumber": 1978,
        "author": {
          "gitId": "-"
        },
        "content": "        visibility[Const.VISIBILITY_TABLE_RECIPIENT] \u003d frLogic.isNameVisibleToUser("
      },
      {
        "lineNumber": 1979,
        "author": {
          "gitId": "-"
        },
        "content": "                question, response, userEmail, role, false, roster);"
      },
      {
        "lineNumber": 1980,
        "author": {
          "gitId": "-"
        },
        "content": "        visibilityTable.put(response.getId(), visibility);"
      },
      {
        "lineNumber": 1981,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1982,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1983,
        "author": {
          "gitId": "-"
        },
        "content": "    private void addEmailNamePairsToTable(Map\u003cString, String\u003e emailNameTable,"
      },
      {
        "lineNumber": 1984,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackResponseAttributes response,"
      },
      {
        "lineNumber": 1985,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes question, CourseRoster roster) {"
      },
      {
        "lineNumber": 1986,
        "author": {
          "gitId": "-"
        },
        "content": "        // keys of emailNameTable are participantIdentifiers,"
      },
      {
        "lineNumber": 1987,
        "author": {
          "gitId": "-"
        },
        "content": "        // which consists of students\u0027 email, instructors\u0027 email, team names, or %GENERAL%."
      },
      {
        "lineNumber": 1988,
        "author": {
          "gitId": "-"
        },
        "content": "        // participants identifiers of anonymous responses are not anonymised in the tables"
      },
      {
        "lineNumber": 1989,
        "author": {
          "gitId": "-"
        },
        "content": "        addEmailNamePairsToTable(emailNameTable, response, question, roster,"
      },
      {
        "lineNumber": 1990,
        "author": {
          "gitId": "-"
        },
        "content": "                EMAIL_NAME_PAIR);"
      },
      {
        "lineNumber": 1991,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1992,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1993,
        "author": {
          "gitId": "-"
        },
        "content": "    private void addEmailLastNamePairsToTable(Map\u003cString, String\u003e emailLastNameTable,"
      },
      {
        "lineNumber": 1994,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackResponseAttributes response,"
      },
      {
        "lineNumber": 1995,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes question, CourseRoster roster) {"
      },
      {
        "lineNumber": 1996,
        "author": {
          "gitId": "-"
        },
        "content": "        addEmailNamePairsToTable(emailLastNameTable, response, question, roster,"
      },
      {
        "lineNumber": 1997,
        "author": {
          "gitId": "-"
        },
        "content": "                EMAIL_LASTNAME_PAIR);"
      },
      {
        "lineNumber": 1998,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1999,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2000,
        "author": {
          "gitId": "-"
        },
        "content": "    private void addEmailTeamNamePairsToTable("
      },
      {
        "lineNumber": 2001,
        "author": {
          "gitId": "-"
        },
        "content": "            Map\u003cString, String\u003e emailTeamNameTable,"
      },
      {
        "lineNumber": 2002,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackResponseAttributes response,"
      },
      {
        "lineNumber": 2003,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes question, CourseRoster roster) {"
      },
      {
        "lineNumber": 2004,
        "author": {
          "gitId": "-"
        },
        "content": "        addEmailNamePairsToTable(emailTeamNameTable, response, question,"
      },
      {
        "lineNumber": 2005,
        "author": {
          "gitId": "-"
        },
        "content": "                roster, EMAIL_TEAMNAME_PAIR);"
      },
      {
        "lineNumber": 2006,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2007,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2008,
        "author": {
          "gitId": "-"
        },
        "content": "    private void addEmailNamePairsToTable(Map\u003cString, String\u003e emailNameTable,"
      },
      {
        "lineNumber": 2009,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackResponseAttributes response,"
      },
      {
        "lineNumber": 2010,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes question, CourseRoster roster,"
      },
      {
        "lineNumber": 2011,
        "author": {
          "gitId": "-"
        },
        "content": "            int pairType) {"
      },
      {
        "lineNumber": 2012,
        "author": {
          "gitId": "-"
        },
        "content": "        if (question.giverType \u003d\u003d FeedbackParticipantType.TEAMS"
      },
      {
        "lineNumber": 2013,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 roster.isStudentInCourse(response.giver)) {"
      },
      {
        "lineNumber": 2014,
        "author": {
          "gitId": "-"
        },
        "content": "            emailNameTable.putIfAbsent("
      },
      {
        "lineNumber": 2015,
        "author": {
          "gitId": "-"
        },
        "content": "                        response.giver + Const.TEAM_OF_EMAIL_OWNER,"
      },
      {
        "lineNumber": 2016,
        "author": {
          "gitId": "-"
        },
        "content": "                        getNameTeamNamePairForEmail(question.giverType,"
      },
      {
        "lineNumber": 2017,
        "author": {
          "gitId": "-"
        },
        "content": "                                response.giver, roster)[pairType]);"
      },
      {
        "lineNumber": 2018,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2019,
        "author": {
          "gitId": "-"
        },
        "content": "            StudentAttributes studentGiver \u003d roster.getStudentForEmail(response.giver);"
      },
      {
        "lineNumber": 2020,
        "author": {
          "gitId": "-"
        },
        "content": "            if (studentGiver !\u003d null) {"
      },
      {
        "lineNumber": 2021,
        "author": {
          "gitId": "-"
        },
        "content": "                emailNameTable.putIfAbsent(studentGiver.team, getNameTeamNamePairForEmail("
      },
      {
        "lineNumber": 2022,
        "author": {
          "gitId": "-"
        },
        "content": "                        question.giverType,"
      },
      {
        "lineNumber": 2023,
        "author": {
          "gitId": "-"
        },
        "content": "                        response.giver, roster)[pairType]);"
      },
      {
        "lineNumber": 2024,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2025,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 2026,
        "author": {
          "gitId": "-"
        },
        "content": "            emailNameTable.putIfAbsent("
      },
      {
        "lineNumber": 2027,
        "author": {
          "gitId": "-"
        },
        "content": "                    response.giver,"
      },
      {
        "lineNumber": 2028,
        "author": {
          "gitId": "-"
        },
        "content": "                    getNameTeamNamePairForEmail(question.giverType,"
      },
      {
        "lineNumber": 2029,
        "author": {
          "gitId": "-"
        },
        "content": "                            response.giver, roster)[pairType]);"
      },
      {
        "lineNumber": 2030,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2031,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2032,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackParticipantType recipientType \u003d null;"
      },
      {
        "lineNumber": 2033,
        "author": {
          "gitId": "-"
        },
        "content": "        if (question.recipientType \u003d\u003d FeedbackParticipantType.SELF) {"
      },
      {
        "lineNumber": 2034,
        "author": {
          "gitId": "-"
        },
        "content": "            recipientType \u003d question.giverType;"
      },
      {
        "lineNumber": 2035,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 2036,
        "author": {
          "gitId": "-"
        },
        "content": "            recipientType \u003d question.recipientType;"
      },
      {
        "lineNumber": 2037,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2038,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2039,
        "author": {
          "gitId": "-"
        },
        "content": "        emailNameTable.putIfAbsent("
      },
      {
        "lineNumber": 2040,
        "author": {
          "gitId": "-"
        },
        "content": "                    response.recipient,"
      },
      {
        "lineNumber": 2041,
        "author": {
          "gitId": "-"
        },
        "content": "                    getNameTeamNamePairForEmail(recipientType,"
      },
      {
        "lineNumber": 2042,
        "author": {
          "gitId": "-"
        },
        "content": "                                                response.recipient, roster)[pairType]);"
      },
      {
        "lineNumber": 2043,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2044,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2045,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cFeedbackSessionDetailsBundle\u003e getFeedbackSessionDetailsForCourse(String courseId)"
      },
      {
        "lineNumber": 2046,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 2047,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionDetailsBundle\u003e fsDetails \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 2048,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e fsInCourse \u003d"
      },
      {
        "lineNumber": 2049,
        "author": {
          "gitId": "-"
        },
        "content": "                fsDb.getFeedbackSessionsForCourse(courseId);"
      },
      {
        "lineNumber": 2050,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2051,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackSessionAttributes fsa : fsInCourse) {"
      },
      {
        "lineNumber": 2052,
        "author": {
          "gitId": "-"
        },
        "content": "            fsDetails.add(getFeedbackSessionDetails(fsa));"
      },
      {
        "lineNumber": 2053,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2054,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2055,
        "author": {
          "gitId": "-"
        },
        "content": "        return fsDetails;"
      },
      {
        "lineNumber": 2056,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2057,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2058,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsListForCourse("
      },
      {
        "lineNumber": 2059,
        "author": {
          "gitId": "-"
        },
        "content": "            String courseId) {"
      },
      {
        "lineNumber": 2060,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2061,
        "author": {
          "gitId": "-"
        },
        "content": "        return fsDb.getFeedbackSessionsForCourse(courseId);"
      },
      {
        "lineNumber": 2062,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2063,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2064,
        "author": {
          "gitId": "-"
        },
        "content": "    private FeedbackSessionResponseStatus getFeedbackSessionResponseStatus("
      },
      {
        "lineNumber": 2065,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackSessionAttributes fsa, CourseRoster roster,"
      },
      {
        "lineNumber": 2066,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cFeedbackQuestionAttributes\u003e questions) {"
      },
      {
        "lineNumber": 2067,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2068,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionResponseStatus responseStatus \u003d new FeedbackSessionResponseStatus();"
      },
      {
        "lineNumber": 2069,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cStudentAttributes\u003e students \u003d roster.getStudents();"
      },
      {
        "lineNumber": 2070,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cInstructorAttributes\u003e instructors \u003d roster.getInstructors();"
      },
      {
        "lineNumber": 2071,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackQuestionAttributes\u003e studentQns \u003d fqLogic"
      },
      {
        "lineNumber": 2072,
        "author": {
          "gitId": "-"
        },
        "content": "                .getFeedbackQuestionsForStudents(questions);"
      },
      {
        "lineNumber": 2073,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2074,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e studentNoResponses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 2075,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e studentResponded \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 2076,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e instructorNoResponses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 2077,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2078,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!studentQns.isEmpty()) {"
      },
      {
        "lineNumber": 2079,
        "author": {
          "gitId": "-"
        },
        "content": "            for (StudentAttributes student : students) {"
      },
      {
        "lineNumber": 2080,
        "author": {
          "gitId": "-"
        },
        "content": "                studentNoResponses.add(student.email);"
      },
      {
        "lineNumber": 2081,
        "author": {
          "gitId": "-"
        },
        "content": "                responseStatus.emailNameTable.put(student.email, student.name);"
      },
      {
        "lineNumber": 2082,
        "author": {
          "gitId": "-"
        },
        "content": "                responseStatus.emailSectionTable.put(student.email, student.section);"
      },
      {
        "lineNumber": 2083,
        "author": {
          "gitId": "-"
        },
        "content": "                responseStatus.emailTeamNameTable.put(student.email, student.team);"
      },
      {
        "lineNumber": 2084,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2085,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2086,
        "author": {
          "gitId": "-"
        },
        "content": "        studentNoResponses.removeAll(fsa.getRespondingStudentList());"
      },
      {
        "lineNumber": 2087,
        "author": {
          "gitId": "-"
        },
        "content": "        studentResponded.addAll(fsa.getRespondingStudentList());"
      },
      {
        "lineNumber": 2088,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2089,
        "author": {
          "gitId": "-"
        },
        "content": "        for (InstructorAttributes instructor : instructors) {"
      },
      {
        "lineNumber": 2090,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cFeedbackQuestionAttributes\u003e instructorQns \u003d fqLogic"
      },
      {
        "lineNumber": 2091,
        "author": {
          "gitId": "-"
        },
        "content": "                    .getFeedbackQuestionsForInstructor(questions,"
      },
      {
        "lineNumber": 2092,
        "author": {
          "gitId": "-"
        },
        "content": "                            fsa.isCreator(instructor.email));"
      },
      {
        "lineNumber": 2093,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!instructorQns.isEmpty() \u0026\u0026 responseStatus.emailNameTable.get(instructor.email) \u003d\u003d null) {"
      },
      {
        "lineNumber": 2094,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorNoResponses.add(instructor.email);"
      },
      {
        "lineNumber": 2095,
        "author": {
          "gitId": "-"
        },
        "content": "                responseStatus.emailNameTable.put(instructor.email, instructor.name);"
      },
      {
        "lineNumber": 2096,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2097,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2098,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorNoResponses.removeAll(fsa.getRespondingInstructorList());"
      },
      {
        "lineNumber": 2099,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2100,
        "author": {
          "gitId": "-"
        },
        "content": "        responseStatus.studentsWhoDidNotRespond.addAll(studentNoResponses);"
      },
      {
        "lineNumber": 2101,
        "author": {
          "gitId": "-"
        },
        "content": "        responseStatus.studentsWhoResponded.addAll(studentResponded);"
      },
      {
        "lineNumber": 2102,
        "author": {
          "gitId": "-"
        },
        "content": "        responseStatus.studentsWhoDidNotRespond.addAll(instructorNoResponses);"
      },
      {
        "lineNumber": 2103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2104,
        "author": {
          "gitId": "-"
        },
        "content": "        return responseStatus;"
      },
      {
        "lineNumber": 2105,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2107,
        "author": {
          "gitId": "-"
        },
        "content": "    // return a pair of String that contains Giver/Recipient\u0027sName (at index 0)"
      },
      {
        "lineNumber": 2108,
        "author": {
          "gitId": "-"
        },
        "content": "    // and TeamName (at index 1)"
      },
      {
        "lineNumber": 2109,
        "author": {
          "gitId": "-"
        },
        "content": "    private String[] getNameTeamNamePairForEmail(FeedbackParticipantType type,"
      },
      {
        "lineNumber": 2110,
        "author": {
          "gitId": "-"
        },
        "content": "            String email, CourseRoster roster) {"
      },
      {
        "lineNumber": 2111,
        "author": {
          "gitId": "-"
        },
        "content": "        String giverRecipientName \u003d null;"
      },
      {
        "lineNumber": 2112,
        "author": {
          "gitId": "-"
        },
        "content": "        String giverRecipientLastName \u003d null;"
      },
      {
        "lineNumber": 2113,
        "author": {
          "gitId": "-"
        },
        "content": "        String teamName \u003d null;"
      },
      {
        "lineNumber": 2114,
        "author": {
          "gitId": "-"
        },
        "content": "        String name \u003d null;"
      },
      {
        "lineNumber": 2115,
        "author": {
          "gitId": "-"
        },
        "content": "        String lastName \u003d null;"
      },
      {
        "lineNumber": 2116,
        "author": {
          "gitId": "-"
        },
        "content": "        String team \u003d null;"
      },
      {
        "lineNumber": 2117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2118,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student \u003d roster.getStudentForEmail(email);"
      },
      {
        "lineNumber": 2119,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isStudent \u003d student !\u003d null;"
      },
      {
        "lineNumber": 2120,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isStudent) {"
      },
      {
        "lineNumber": 2121,
        "author": {
          "gitId": "-"
        },
        "content": "            name \u003d student.name;"
      },
      {
        "lineNumber": 2122,
        "author": {
          "gitId": "-"
        },
        "content": "            team \u003d student.team;"
      },
      {
        "lineNumber": 2123,
        "author": {
          "gitId": "-"
        },
        "content": "            lastName \u003d student.lastName;"
      },
      {
        "lineNumber": 2124,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 2125,
        "author": {
          "gitId": "-"
        },
        "content": "            InstructorAttributes instructor \u003d roster"
      },
      {
        "lineNumber": 2126,
        "author": {
          "gitId": "-"
        },
        "content": "                    .getInstructorForEmail(email);"
      },
      {
        "lineNumber": 2127,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean isInstructor \u003d instructor !\u003d null;"
      },
      {
        "lineNumber": 2128,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isInstructor) {"
      },
      {
        "lineNumber": 2129,
        "author": {
          "gitId": "-"
        },
        "content": "                name \u003d instructor.name;"
      },
      {
        "lineNumber": 2130,
        "author": {
          "gitId": "-"
        },
        "content": "                lastName \u003d instructor.name;"
      },
      {
        "lineNumber": 2131,
        "author": {
          "gitId": "-"
        },
        "content": "                team \u003d Const.USER_TEAM_FOR_INSTRUCTOR;"
      },
      {
        "lineNumber": 2132,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 2133,
        "author": {
          "gitId": "-"
        },
        "content": "                if (email.equals(Const.GENERAL_QUESTION)) {"
      },
      {
        "lineNumber": 2134,
        "author": {
          "gitId": "-"
        },
        "content": "                    // Email represents that there is no specific recipient."
      },
      {
        "lineNumber": 2135,
        "author": {
          "gitId": "-"
        },
        "content": "                    name \u003d Const.USER_IS_NOBODY;"
      },
      {
        "lineNumber": 2136,
        "author": {
          "gitId": "-"
        },
        "content": "                    lastName \u003d Const.USER_IS_NOBODY;"
      },
      {
        "lineNumber": 2137,
        "author": {
          "gitId": "-"
        },
        "content": "                    team \u003d email;"
      },
      {
        "lineNumber": 2138,
        "author": {
          "gitId": "-"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 2139,
        "author": {
          "gitId": "-"
        },
        "content": "                    // The email represents a missing *Attribute."
      },
      {
        "lineNumber": 2140,
        "author": {
          "gitId": "-"
        },
        "content": "                    // It might be a team name or the *Attribute has been deleted."
      },
      {
        "lineNumber": 2141,
        "author": {
          "gitId": "-"
        },
        "content": "                    name \u003d Const.USER_IS_MISSING;"
      },
      {
        "lineNumber": 2142,
        "author": {
          "gitId": "-"
        },
        "content": "                    lastName \u003d Const.USER_IS_MISSING;"
      },
      {
        "lineNumber": 2143,
        "author": {
          "gitId": "-"
        },
        "content": "                    team \u003d email;"
      },
      {
        "lineNumber": 2144,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 2145,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2146,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2148,
        "author": {
          "gitId": "-"
        },
        "content": "        if (type \u003d\u003d FeedbackParticipantType.TEAMS || type \u003d\u003d FeedbackParticipantType.OWN_TEAM) {"
      },
      {
        "lineNumber": 2149,
        "author": {
          "gitId": "-"
        },
        "content": "            giverRecipientName \u003d team;"
      },
      {
        "lineNumber": 2150,
        "author": {
          "gitId": "-"
        },
        "content": "            giverRecipientLastName \u003d team;"
      },
      {
        "lineNumber": 2151,
        "author": {
          "gitId": "-"
        },
        "content": "            teamName \u003d \"\";"
      },
      {
        "lineNumber": 2152,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 2153,
        "author": {
          "gitId": "-"
        },
        "content": "            giverRecipientName \u003d name;"
      },
      {
        "lineNumber": 2154,
        "author": {
          "gitId": "-"
        },
        "content": "            giverRecipientLastName \u003d lastName;"
      },
      {
        "lineNumber": 2155,
        "author": {
          "gitId": "-"
        },
        "content": "            if (name.equals(Const.USER_IS_NOBODY) || name.equals(Const.USER_IS_MISSING)) {"
      },
      {
        "lineNumber": 2156,
        "author": {
          "gitId": "-"
        },
        "content": "                teamName \u003d \"\";"
      },
      {
        "lineNumber": 2157,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 2158,
        "author": {
          "gitId": "-"
        },
        "content": "                teamName \u003d team;"
      },
      {
        "lineNumber": 2159,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2160,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2161,
        "author": {
          "gitId": "-"
        },
        "content": "        return new String[] { giverRecipientName, giverRecipientLastName, teamName };"
      },
      {
        "lineNumber": 2162,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2164,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isFeedbackSessionFullyCompletedByStudent("
      },
      {
        "lineNumber": 2165,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName,"
      },
      {
        "lineNumber": 2166,
        "author": {
          "gitId": "-"
        },
        "content": "            String courseId, String userEmail)"
      },
      {
        "lineNumber": 2167,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 2168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2169,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!isFeedbackSessionExists(feedbackSessionName, courseId)) {"
      },
      {
        "lineNumber": 2170,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(ERROR_NON_EXISTENT_FS_CHECK + courseId + \"/\" + feedbackSessionName);"
      },
      {
        "lineNumber": 2171,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2173,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackQuestionAttributes\u003e allQuestions \u003d"
      },
      {
        "lineNumber": 2174,
        "author": {
          "gitId": "-"
        },
        "content": "                fqLogic.getFeedbackQuestionsForStudents(feedbackSessionName,"
      },
      {
        "lineNumber": 2175,
        "author": {
          "gitId": "-"
        },
        "content": "                        courseId);"
      },
      {
        "lineNumber": 2176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2177,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackQuestionAttributes question : allQuestions) {"
      },
      {
        "lineNumber": 2178,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!fqLogic.isQuestionFullyAnsweredByUser(question, userEmail)) {"
      },
      {
        "lineNumber": 2179,
        "author": {
          "gitId": "-"
        },
        "content": "                // If any question is not completely answered, session is not"
      },
      {
        "lineNumber": 2180,
        "author": {
          "gitId": "-"
        },
        "content": "                // completed"
      },
      {
        "lineNumber": 2181,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 2182,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2183,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2184,
        "author": {
          "gitId": "-"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 2185,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2187,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 2188,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks whether the feedback session is viewable to the specified user."
      },
      {
        "lineNumber": 2189,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 2190,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean isFeedbackSessionViewableTo("
      },
      {
        "lineNumber": 2191,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackSessionAttributes session,"
      },
      {
        "lineNumber": 2192,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean isInstructorOfCourse) {"
      },
      {
        "lineNumber": 2193,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2194,
        "author": {
          "gitId": "-"
        },
        "content": "        // Allow all instructors to view always"
      },
      {
        "lineNumber": 2195,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isInstructorOfCourse) {"
      },
      {
        "lineNumber": 2196,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 2197,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2199,
        "author": {
          "gitId": "-"
        },
        "content": "        // Allow viewing if session is viewable to students"
      },
      {
        "lineNumber": 2200,
        "author": {
          "gitId": "-"
        },
        "content": "        return isFeedbackSessionViewableToStudents(session);"
      },
      {
        "lineNumber": 2201,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2203,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isFeedbackSessionViewableToStudents("
      },
      {
        "lineNumber": 2204,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackSessionAttributes session) {"
      },
      {
        "lineNumber": 2205,
        "author": {
          "gitId": "-"
        },
        "content": "        // Allow students to view the feedback session if there are questions for them"
      },
      {
        "lineNumber": 2206,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackQuestionAttributes\u003e questionsToAnswer \u003d"
      },
      {
        "lineNumber": 2207,
        "author": {
          "gitId": "-"
        },
        "content": "                fqLogic.getFeedbackQuestionsForStudents("
      },
      {
        "lineNumber": 2208,
        "author": {
          "gitId": "-"
        },
        "content": "                        session.getFeedbackSessionName(), session.getCourseId());"
      },
      {
        "lineNumber": 2209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2210,
        "author": {
          "gitId": "-"
        },
        "content": "        if (session.isVisible() \u0026\u0026 !questionsToAnswer.isEmpty()) {"
      },
      {
        "lineNumber": 2211,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 2212,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2214,
        "author": {
          "gitId": "-"
        },
        "content": "        // Allow students to view the feedback session"
      },
      {
        "lineNumber": 2215,
        "author": {
          "gitId": "-"
        },
        "content": "        // if there are any questions for instructors to answer"
      },
      {
        "lineNumber": 2216,
        "author": {
          "gitId": "-"
        },
        "content": "        // where the responses of the questions are visible to the students"
      },
      {
        "lineNumber": 2217,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackQuestionAttributes\u003e questionsWithVisibleResponses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 2218,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackQuestionAttributes\u003e questionsForInstructors \u003d"
      },
      {
        "lineNumber": 2219,
        "author": {
          "gitId": "-"
        },
        "content": "                                        fqLogic.getFeedbackQuestionsForCreatorInstructor(session);"
      },
      {
        "lineNumber": 2220,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackQuestionAttributes question : questionsForInstructors) {"
      },
      {
        "lineNumber": 2221,
        "author": {
          "gitId": "-"
        },
        "content": "            if (frLogic.isResponseOfFeedbackQuestionVisibleToStudent(question)) {"
      },
      {
        "lineNumber": 2222,
        "author": {
          "gitId": "-"
        },
        "content": "                questionsWithVisibleResponses.add(question);"
      },
      {
        "lineNumber": 2223,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2224,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2226,
        "author": {
          "gitId": "-"
        },
        "content": "        return session.isVisible() \u0026\u0026 !questionsWithVisibleResponses.isEmpty();"
      },
      {
        "lineNumber": 2227,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2229,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 2230,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if there are any questions for students to answer."
      },
      {
        "lineNumber": 2231,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 2232,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isFeedbackSessionForStudentsToAnswer(FeedbackSessionAttributes session) {"
      },
      {
        "lineNumber": 2233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2234,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackQuestionAttributes\u003e questionsToAnswer \u003d"
      },
      {
        "lineNumber": 2235,
        "author": {
          "gitId": "-"
        },
        "content": "                fqLogic.getFeedbackQuestionsForStudents("
      },
      {
        "lineNumber": 2236,
        "author": {
          "gitId": "-"
        },
        "content": "                        session.getFeedbackSessionName(), session.getCourseId());"
      },
      {
        "lineNumber": 2237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2238,
        "author": {
          "gitId": "-"
        },
        "content": "        return session.isVisible() \u0026\u0026 !questionsToAnswer.isEmpty();"
      },
      {
        "lineNumber": 2239,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2241,
        "author": {
          "gitId": "-"
        },
        "content": "    private void normalizeMaximumResponseEntities("
      },
      {
        "lineNumber": 2242,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes question,"
      },
      {
        "lineNumber": 2243,
        "author": {
          "gitId": "-"
        },
        "content": "            Map\u003cString, String\u003e recipients) {"
      },
      {
        "lineNumber": 2244,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2245,
        "author": {
          "gitId": "-"
        },
        "content": "        // change constant to actual maximum size."
      },
      {
        "lineNumber": 2246,
        "author": {
          "gitId": "-"
        },
        "content": "        if (question.numberOfEntitiesToGiveFeedbackTo \u003d\u003d Const.MAX_POSSIBLE_RECIPIENTS) {"
      },
      {
        "lineNumber": 2247,
        "author": {
          "gitId": "-"
        },
        "content": "            question.numberOfEntitiesToGiveFeedbackTo \u003d recipients.size();"
      },
      {
        "lineNumber": 2248,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2249,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2251,
        "author": {
          "gitId": "-"
        },
        "content": "    private void makeEmailStateConsistent(FeedbackSessionAttributes oldSession,"
      },
      {
        "lineNumber": 2252,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackSessionAttributes newSession) {"
      },
      {
        "lineNumber": 2253,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2254,
        "author": {
          "gitId": "-"
        },
        "content": "        // reset sentOpenEmail if the session has opened but is being un-opened"
      },
      {
        "lineNumber": 2255,
        "author": {
          "gitId": "-"
        },
        "content": "        // now, or else leave it as sent if so."
      },
      {
        "lineNumber": 2256,
        "author": {
          "gitId": "-"
        },
        "content": "        if (oldSession.isSentOpenEmail()) {"
      },
      {
        "lineNumber": 2257,
        "author": {
          "gitId": "-"
        },
        "content": "            newSession.setSentOpenEmail(newSession.isOpened());"
      },
      {
        "lineNumber": 2258,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2260,
        "author": {
          "gitId": "-"
        },
        "content": "        // reset sentClosedEmail if the session has closed but is being un-closed"
      },
      {
        "lineNumber": 2261,
        "author": {
          "gitId": "-"
        },
        "content": "        // now, or else leave it as sent if so."
      },
      {
        "lineNumber": 2262,
        "author": {
          "gitId": "-"
        },
        "content": "        if (oldSession.isSentClosedEmail()) {"
      },
      {
        "lineNumber": 2263,
        "author": {
          "gitId": "-"
        },
        "content": "            newSession.setSentClosedEmail(newSession.isClosed());"
      },
      {
        "lineNumber": 2264,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2265,
        "author": {
          "gitId": "-"
        },
        "content": "            // also reset sentClosingEmail"
      },
      {
        "lineNumber": 2266,
        "author": {
          "gitId": "-"
        },
        "content": "            newSession.setSentClosingEmail("
      },
      {
        "lineNumber": 2267,
        "author": {
          "gitId": "-"
        },
        "content": "                    newSession.isClosed()"
      },
      {
        "lineNumber": 2268,
        "author": {
          "gitId": "-"
        },
        "content": "                    || !newSession.isClosedAfter(SystemParams.NUMBER_OF_HOURS_BEFORE_CLOSING_ALERT));"
      },
      {
        "lineNumber": 2269,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2271,
        "author": {
          "gitId": "-"
        },
        "content": "        // reset sentPublishedEmail if the session has been published but is"
      },
      {
        "lineNumber": 2272,
        "author": {
          "gitId": "-"
        },
        "content": "        // going to be unpublished now, or else leave it as sent if so."
      },
      {
        "lineNumber": 2273,
        "author": {
          "gitId": "-"
        },
        "content": "        if (oldSession.isSentPublishedEmail()) {"
      },
      {
        "lineNumber": 2274,
        "author": {
          "gitId": "-"
        },
        "content": "            newSession.setSentPublishedEmail(newSession.isPublished());"
      },
      {
        "lineNumber": 2275,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2276,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2277,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2278,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalessr": 9,
      "-": 2269
    }
  },
  {
    "path": "src/main/java/teammates/storage/api/CoursesDb.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.storage.api;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static com.googlecode.objectify.ObjectifyService.ofy;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import com.googlecode.objectify.Key;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import com.googlecode.objectify.cmd.LoadType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import com.googlecode.objectify.cmd.QueryKeys;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.CourseAttributes;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityDoesNotExistException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.InvalidParametersException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Assumption;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.storage.entity.Course;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " * Handles CRUD operations for courses."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " * @see Course"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": " * @see CourseAttributes"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "public class CoursesDb extends EntitiesDb\u003cCourse, CourseAttributes\u003e {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * Explanation: Based on our policies for the storage component, this class does not handle cascading."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * It treats invalid values as an exception."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ERROR_UPDATE_NON_EXISTENT_COURSE \u003d \"Trying to update a Course that doesn\u0027t exist: \";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public void createCourses(Collection\u003cCourseAttributes\u003e coursesToAdd) throws InvalidParametersException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCourseAttributes\u003e coursesToUpdate \u003d createEntities(coursesToAdd);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        for (CourseAttributes course : coursesToUpdate) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                updateCourse(course);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (EntityDoesNotExistException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                // This situation is not tested as replicating such a situation is"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                // difficult during testing"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                Assumption.fail(\"Entity found be already existing and not existing simultaneously\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Null if not found."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public CourseAttributes getCourse(String courseId) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, courseId);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        return makeAttributesOrNull(getCourseEntity(courseId));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cCourseAttributes\u003e getCourses(List\u003cString\u003e courseIds) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, courseIds);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        return makeAttributes(getCourseEntities(courseIds));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets all courses in the Datastore."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     * @deprecated Not scalable. Use only in admin features."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    @Deprecated"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cCourseAttributes\u003e getAllCourses() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        return makeAttributes(load().list());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates the course.\u003cbr\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     * Updates only name, deletion date and course archive status.\u003cbr\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     * * {@code courseToUpdate} is non-null.\u003cbr\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updateCourse(CourseAttributes courseToUpdate) throws InvalidParametersException,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                     EntityDoesNotExistException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, courseToUpdate);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        courseToUpdate.sanitizeForSaving();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!courseToUpdate.isValid()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new InvalidParametersException(courseToUpdate.getInvalidityInfo());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        Course courseEntityToUpdate \u003d getCourseEntity(courseToUpdate.getId());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        if (courseEntityToUpdate \u003d\u003d null) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(ERROR_UPDATE_NON_EXISTENT_COURSE);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEntityToUpdate.setName(courseToUpdate.getName());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        courseEntityToUpdate.setDeletedAt(courseToUpdate.deletedAt);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEntityToUpdate.setTimeZone(courseToUpdate.getTimeZone().getId());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        saveEntity(courseEntityToUpdate, courseToUpdate);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     * Permanently deletes the course from the Datastore."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     * \u003cp\u003eNote: This is a non-cascade delete.\u003cbr\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "     *   \u003cbr\u003e Fails silently if there is no such object."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr\u003e Preconditions:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr\u003e * {@code courseId} is not null."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteCourse(String courseId) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, courseId);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        // only the courseId is important here, everything else are placeholders"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        deleteEntity(CourseAttributes"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                .builder(courseId, \"Non-existent course\", Const.DEFAULT_TIME_ZONE)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                .build());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    protected LoadType\u003cCourse\u003e load() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        return ofy().load().type(Course.class);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Course getEntity(CourseAttributes attributes) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        return getCourseEntity(attributes.getId());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    protected QueryKeys\u003cCourse\u003e getEntityQueryKeys(CourseAttributes attributes) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        Key\u003cCourse\u003e keyToFind \u003d Key.create(Course.class, attributes.getId());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        return load().filterKey(keyToFind).keys();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    private Course getCourseEntity(String courseId) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        return load().id(courseId).now();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cCourse\u003e getCourseEntities(List\u003cString\u003e courseIds) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        if (courseIds.isEmpty()) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        return new ArrayList\u003c\u003e("
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "                load().ids(courseIds).values());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    protected CourseAttributes makeAttributes(Course entity) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, entity);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        ZoneId courseTimeZone;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "            courseTimeZone \u003d ZoneId.of(entity.getTimeZone());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            log.severe(\"Timezone \u0027\" + entity.getTimeZone() + \"\u0027 of course \u0027\" + entity.getUniqueId()"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"\u0027 is not supported. UTC will be used instead.\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            courseTimeZone \u003d Const.DEFAULT_TIME_ZONE;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        return CourseAttributes.builder(entity.getUniqueId(), entity.getName(), courseTimeZone)"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                .withCreatedAt(entity.getCreatedAt())"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                .withDeletedAt(entity.getDeletedAt())"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalessr": 8,
      "-": 161
    }
  },
  {
    "path": "src/main/java/teammates/storage/entity/Course.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.storage.entity;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import com.googlecode.objectify.annotation.Entity;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import com.googlecode.objectify.annotation.Id;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import com.googlecode.objectify.annotation.Index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.TimeHelper;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a course entity."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "@Entity"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@Index"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class Course extends BaseEntity {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @Id"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private String id;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    // TODO: change to `java.time.Instant` once we have upgraded to Objectify 6"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private Date createdAt;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    private Date deletedAt;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private String timeZone;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    @SuppressWarnings(\"unused\")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    private Course() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        // required by Objectify"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public Course(String courseId, String courseName, String courseTimeZone, Instant createdAt, Instant deletedAt) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        this.setUniqueId(courseId);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        this.setName(courseName);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        if (courseTimeZone \u003d\u003d null) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            this.setTimeZone(Const.DEFAULT_TIME_ZONE.getId());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            this.setTimeZone(courseTimeZone);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        if (createdAt \u003d\u003d null) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            this.setCreatedAt(Instant.now());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            this.setCreatedAt(createdAt);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        this.setDeletedAt(deletedAt);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getUniqueId() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        return id;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUniqueId(String uniqueId) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        this.id \u003d uniqueId.trim();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setName(String name) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        this.name \u003d name.trim();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    public Instant getCreatedAt() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        return TimeHelper.convertDateToInstant(createdAt);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setCreatedAt(Instant createdAt) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        this.createdAt \u003d TimeHelper.convertInstantToDate(createdAt);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public Instant getDeletedAt() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        return TimeHelper.convertDateToInstant(deletedAt);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public void setDeletedAt(Instant deletedAt) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        this.deletedAt \u003d TimeHelper.convertInstantToDate(deletedAt);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getTimeZone() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        return timeZone;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setTimeZone(String timeZone) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        this.timeZone \u003d timeZone;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalessr": 13,
      "-": 79
    }
  },
  {
    "path": "src/main/java/teammates/ui/controller/ActionFactory.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.ui.controller;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "// CHECKSTYLE.OFF:AvoidStarImport as there would be many (\u003e100) import lines added if we were to import all of the ActionURIs"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static teammates.common.util.Const.ActionURIs.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "// CHECKSTYLE.ON:AvoidStarImport"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javax.servlet.http.HttpServletRequest;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.PageNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.TeammatesException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Assumption;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Logger;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * Is used to generate the matching {@link Action} for a given URI."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public class ActionFactory {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger log \u003d Logger.getLogger();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private static Map\u003cString, Class\u003c? extends Action\u003e\u003e actionMappings \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ADMIN_HOME_PAGE, AdminHomePageAction.class);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ADMIN_ACCOUNT_DELETE, AdminAccountDeleteAction.class);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ADMIN_ACTIVITY_LOG_PAGE, AdminActivityLogPageAction.class);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ADMIN_ACCOUNT_DETAILS_PAGE, AdminAccountDetailsPageAction.class);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ADMIN_ACCOUNT_MANAGEMENT_PAGE, AdminAccountManagementPageAction.class);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ADMIN_EXCEPTION_TEST, AdminExceptionTestAction.class);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ADMIN_INSTRUCTORACCOUNT_ADD, AdminInstructorAccountAddAction.class);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ADMIN_SESSIONS_PAGE, AdminSessionsPageAction.class);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ADMIN_SEARCH_PAGE, AdminSearchPageAction.class);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ADMIN_STUDENT_GOOGLE_ID_RESET, AdminStudentGoogleIdResetAction.class);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ADMIN_EMAIL_COMPOSE_PAGE, AdminEmailComposePageAction.class);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ADMIN_EMAIL_COMPOSE_SAVE, AdminEmailComposeSaveAction.class);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ADMIN_EMAIL_COMPOSE_SEND, AdminEmailComposeSendAction.class);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ADMIN_EMAIL_IMAGE_UPLOAD, AdminEmailImageUploadAction.class);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ADMIN_EMAIL_GROUP_RECEIVER_LIST_UPLOAD, AdminEmailGroupReceiverListUploadAction.class);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ADMIN_EMAIL_CREATE_IMAGE_UPLOAD_URL, AdminEmailCreateImageUploadUrlAction.class);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ADMIN_EMAIL_CREATE_GROUP_RECEIVER_LIST_UPLOAD_URL, AdminEmailCreateGroupReceiverListUploadUrlAction.class);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ADMIN_EMAIL_SENT_PAGE, AdminEmailSentPageAction.class);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ADMIN_EMAIL_TRASH_PAGE, AdminEmailTrashPageAction.class);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ADMIN_EMAIL_TRASH_DELETE, AdminEmailTrashDeleteAction.class);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ADMIN_EMAIL_DRAFT_PAGE, AdminEmailDraftPageAction.class);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ADMIN_EMAIL_MOVE_TO_TRASH, AdminEmailTrashAction.class);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ADMIN_EMAIL_MOVE_OUT_TRASH, AdminEmailTrashAction.class);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ADMIN_EMAIL_LOG_PAGE, AdminEmailLogPageAction.class);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_COURSES_PAGE, InstructorCoursesPageAction.class);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_COURSE_STATS_PAGE, CourseStatsPageAction.class);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_COURSE_ADD, InstructorCourseAddAction.class);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_COURSE_DELETE, InstructorCourseDeleteAction.class);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_COURSE_ARCHIVE, InstructorCourseArchiveAction.class);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        map(INSTRUCTOR_COURSE_RECOVERY_COURSE_RESTORE, InstructorCourseRestoreRecoveryCourseAction.class);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        map(INSTRUCTOR_COURSE_RECOVERY_COURSE_RESTORE_ALL, InstructorCourseRestoreAllRecoveryCoursesAction.class);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        map(INSTRUCTOR_COURSE_RECOVERY_COURSE_DELETE, InstructorCourseDeleteRecoveryCourseAction.class);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        map(INSTRUCTOR_COURSE_RECOVERY_COURSE_DELETE_ALL, InstructorCourseDeleteAllRecoveryCoursesAction.class);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_COURSE_DETAILS_PAGE, InstructorCourseDetailsPageAction.class);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_COURSE_JOIN, InstructorCourseJoinAction.class);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_COURSE_JOIN_AUTHENTICATED, InstructorCourseJoinAuthenticatedAction.class);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_COURSE_REMIND, InstructorCourseRemindAction.class);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_COURSE_EDIT_PAGE, InstructorCourseEditPageAction.class);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_COURSE_EDIT_SAVE, InstructorCourseEditSaveAction.class);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_COURSE_INSTRUCTOR_ADD, InstructorCourseInstructorAddAction.class);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_COURSE_INSTRUCTOR_EDIT_SAVE, InstructorCourseInstructorEditSaveAction.class);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_COURSE_INSTRUCTOR_DELETE, InstructorCourseInstructorDeleteAction.class);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_COURSE_ENROLL_PAGE, InstructorCourseEnrollPageAction.class);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_COURSE_ENROLL_SAVE, InstructorCourseEnrollSaveAction.class);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_COURSE_STUDENT_DELETE, InstructorCourseStudentDeleteAction.class);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_COURSE_STUDENT_DELETE_ALL, InstructorCourseStudentDeleteAllAction.class);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_COURSE_STUDENT_LIST_DOWNLOAD, InstructorCourseStudentListDownloadAction.class);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_COURSE_STUDENT_DETAILS_PAGE, InstructorCourseStudentDetailsPageAction.class);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_COURSE_STUDENT_DETAILS_EDIT, InstructorCourseStudentDetailsEditPageAction.class);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_COURSE_STUDENT_DETAILS_EDIT_SAVE, InstructorCourseStudentDetailsEditSaveAction.class);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_EDIT_STUDENT_FEEDBACK_PAGE, InstructorEditStudentFeedbackPageAction.class);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_EDIT_STUDENT_FEEDBACK_SAVE, InstructorEditStudentFeedbackSaveAction.class);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_EDIT_INSTRUCTOR_FEEDBACK_PAGE, InstructorEditInstructorFeedbackPageAction.class);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_EDIT_INSTRUCTOR_FEEDBACK_SAVE, InstructorEditInstructorFeedbackSaveAction.class);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_FEEDBACK_SESSIONS_PAGE, InstructorFeedbackSessionsPageAction.class);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_FEEDBACK_ADD, InstructorFeedbackAddAction.class);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_FEEDBACK_COPY, InstructorFeedbackCopyAction.class);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_FEEDBACK_DELETE, InstructorFeedbackDeleteAction.class);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_FEEDBACK_EDIT_COPY_PAGE, InstructorFeedbackEditCopyPageAction.class);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_FEEDBACK_EDIT_COPY, InstructorFeedbackEditCopyAction.class);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_FEEDBACK_EDIT_PAGE, InstructorFeedbackEditPageAction.class);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_FEEDBACK_EDIT_SAVE, InstructorFeedbackEditSaveAction.class);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_FEEDBACK_REMIND, InstructorFeedbackRemindAction.class);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_FEEDBACK_REMIND_PARTICULAR_STUDENTS_PAGE, InstructorFeedbackRemindParticularStudentsPageAction.class);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_FEEDBACK_REMIND_PARTICULAR_STUDENTS, InstructorFeedbackRemindParticularStudentsAction.class);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_FEEDBACK_PUBLISH, InstructorFeedbackPublishAction.class);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_FEEDBACK_RESEND_PUBLISHED_EMAIL_PAGE,"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                InstructorFeedbackResendPublishedEmailPageAction.class);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_FEEDBACK_RESEND_PUBLISHED_EMAIL,"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                InstructorFeedbackResendPublishedEmailAction.class);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_FEEDBACK_UNPUBLISH, InstructorFeedbackUnpublishAction.class);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_FEEDBACK_QUESTION_ADD, InstructorFeedbackQuestionAddAction.class);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_FEEDBACK_QUESTION_COPY_PAGE, InstructorFeedbackQuestionCopyPageAction.class);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_FEEDBACK_QUESTION_COPY, InstructorFeedbackQuestionCopyAction.class);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_FEEDBACK_QUESTION_EDIT, InstructorFeedbackQuestionEditAction.class);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_FEEDBACK_QUESTION_VISIBILITY_MESSAGE, InstructorFeedbackQuestionVisibilityMessageAction.class);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_FEEDBACK_RESULTS_PAGE, InstructorFeedbackResultsPageAction.class);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_FEEDBACK_RESULTS_DOWNLOAD, InstructorFeedbackResultsDownloadAction.class);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_FEEDBACK_RESPONSE_COMMENT_ADD, InstructorFeedbackResponseCommentAddAction.class);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_FEEDBACK_RESPONSE_COMMENT_EDIT, InstructorFeedbackResponseCommentEditAction.class);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_FEEDBACK_RESPONSE_COMMENT_DELETE, InstructorFeedbackResponseCommentDeleteAction.class);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_FEEDBACK_PREVIEW_ASSTUDENT, InstructorFeedbackPreviewAsStudentAction.class);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_FEEDBACK_PREVIEW_ASINSTRUCTOR, InstructorFeedbackPreviewAsInstructorAction.class);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_FEEDBACK_STATS_PAGE, FeedbackSessionStatsPageAction.class);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_FEEDBACK_SUBMISSION_EDIT_PAGE, InstructorFeedbackSubmissionEditPageAction.class);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_FEEDBACK_SUBMISSION_EDIT_SAVE, InstructorFeedbackSubmissionEditSaveAction.class);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_HOME_PAGE, InstructorHomePageAction.class);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_SEARCH_PAGE, InstructorSearchPageAction.class);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_STUDENT_LIST_PAGE, InstructorStudentListPageAction.class);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_STUDENT_LIST_AJAX_PAGE, InstructorStudentListAjaxPageAction.class);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_STUDENT_RECORDS_PAGE, InstructorStudentRecordsPageAction.class);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        map(INSTRUCTOR_STUDENT_RECORDS_AJAX_PAGE, InstructorStudentRecordsAjaxPageAction.class);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        map(STUDENT_COURSE_DETAILS_PAGE, StudentCourseDetailsPageAction.class);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        map(STUDENT_COURSE_JOIN, StudentCourseJoinAction.class);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        map(STUDENT_COURSE_JOIN_NEW, StudentCourseJoinAction.class);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        map(STUDENT_COURSE_JOIN_AUTHENTICATED, StudentCourseJoinAuthenticatedAction.class);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        map(STUDENT_FEEDBACK_RESULTS_PAGE, StudentFeedbackResultsPageAction.class);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        map(STUDENT_FEEDBACK_SUBMISSION_EDIT_PAGE, StudentFeedbackSubmissionEditPageAction.class);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        map(STUDENT_FEEDBACK_SUBMISSION_EDIT_SAVE, StudentFeedbackSubmissionEditSaveAction.class);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        map(STUDENT_PROFILE_PAGE, StudentProfilePageAction.class);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        map(STUDENT_PROFILE_PICTURE, StudentProfilePictureAction.class);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        map(STUDENT_PROFILE_PICTURE_UPLOAD, StudentProfilePictureUploadAction.class);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        map(STUDENT_PROFILE_PICTURE_EDIT, StudentProfilePictureEditAction.class);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        map(STUDENT_PROFILE_CREATEUPLOADFORMURL, StudentProfileCreateFormUrlAction.class);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        map(STUDENT_PROFILE_EDIT_SAVE, StudentProfileEditSaveAction.class);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        map(STUDENT_HOME_PAGE, StudentHomePageAction.class);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        map(CREATE_IMAGE_UPLOAD_URL, CreateImageUploadUrlAction.class);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        map(IMAGE_UPLOAD, ImageUploadAction.class);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ERROR_FEEDBACK_SUBMIT, ErrorUserReportLogAction.class);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the matching {@link Action} object for the URI in the {@code req}."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    public Action getAction(HttpServletRequest req) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        String url \u003d req.getRequestURL().toString();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        log.info(\"URL received : [\" + req.getMethod() + \"] \" + url);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        String uri \u003d req.getRequestURI();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        if (uri.contains(\";\")) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "            uri \u003d uri.split(\";\")[0];"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        Action c \u003d getAction(uri);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        c.init(req);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        return c;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    private static Action getAction(String uri) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        Class\u003c? extends Action\u003e controllerClass \u003d actionMappings.get(uri);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        if (controllerClass \u003d\u003d null) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new PageNotFoundException(uri);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            return controllerClass.newInstance();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "            Assumption.fail(\"Could not create the action for \" + uri + \": \""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "                            + TeammatesException.toStringWithStackTrace(e));"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void map(String actionUri, Class\u003c? extends Action\u003e actionClass) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        actionMappings.put(actionUri, actionClass);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalessr": 4,
      "-": 177
    }
  },
  {
    "path": "src/main/java/teammates/ui/controller/InstructorCourseAddAction.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.ui.controller;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.CourseAttributes;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityAlreadyExistsException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.InvalidParametersException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Assumption;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.SanitizationHelper;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.StatusMessage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.StatusMessageColor;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.StringHelper;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.pagedata.InstructorCoursesPageData;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " * Action: adding a course for an instructor."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "public class InstructorCourseAddAction extends Action {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private InstructorCoursesPageData data;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public ActionResult execute() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        String newCourseId \u003d getRequestParamValue(Const.ParamsNames.COURSE_ID);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertPostParamNotNull(Const.ParamsNames.COURSE_ID, newCourseId);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        String newCourseName \u003d getRequestParamValue(Const.ParamsNames.COURSE_NAME);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertPostParamNotNull(Const.ParamsNames.COURSE_NAME, newCourseName);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        String newCourseTimeZone \u003d getRequestParamValue(Const.ParamsNames.COURSE_TIME_ZONE);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertPostParamNotNull(Const.ParamsNames.COURSE_TIME_ZONE, newCourseTimeZone);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Check if user has the right to execute the action */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        gateKeeper.verifyInstructorPrivileges(account);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Create a new course in the database */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        data \u003d new InstructorCoursesPageData(account, sessionToken);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        createCourse(newCourseId, newCourseName, newCourseTimeZone);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Prepare data for the refreshed page after executing the adding action */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, InstructorAttributes\u003e instructorsForCourses \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCourseAttributes\u003e activeCourses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCourseAttributes\u003e archivedCourses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        // Get list of InstructorAttributes that belong to the user."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cInstructorAttributes\u003e instructorList \u003d logic.getInstructorsForGoogleId(data.account.googleId);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        for (InstructorAttributes instructor : instructorList) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            instructorsForCourses.put(instructor.courseId, instructor);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        // Get corresponding courses of the instructors."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCourseAttributes\u003e allCourses \u003d logic.getCoursesForInstructor(instructorList);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        List\u003cCourseAttributes\u003e recoveryCourses \u003d logic.getRecoveryCoursesForInstructors(instructorList);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e archivedCourseIds \u003d logic.getArchivedCourseIds(allCourses, instructorsForCourses);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        for (CourseAttributes course : allCourses) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            if (archivedCourseIds.contains(course.getId())) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                archivedCourses.add(course);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                activeCourses.add(course);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        // Sort CourseDetailsBundle lists by course id"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseAttributes.sortById(activeCourses);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseAttributes.sortById(archivedCourses);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        CourseAttributes.sortById(recoveryCourses);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseIdToShowParam \u003d \"\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseNameToShowParam \u003d \"\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isError) { // there is error in adding the course"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            courseIdToShowParam \u003d SanitizationHelper.sanitizeForHtml(newCourseId);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            courseNameToShowParam \u003d SanitizationHelper.sanitizeForHtml(newCourseName);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cString\u003e statusMessageTexts \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            for (StatusMessage msg : statusToUser) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                statusMessageTexts.add(msg.getText());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            statusToAdmin \u003d StringHelper.toString(statusMessageTexts, \"\u003cbr\u003e\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            statusToAdmin \u003d \"Course added : \" + newCourseId;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            statusToAdmin +\u003d \"\u003cbr\u003eTotal courses: \" + allCourses.size();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        data.init(activeCourses, archivedCourses, recoveryCourses, instructorsForCourses, courseIdToShowParam,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                courseNameToShowParam);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        return isError ? createShowPageResult(Const.ViewURIs.INSTRUCTOR_COURSES, data)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                : createRedirectResult(Const.ActionURIs.INSTRUCTOR_COURSES_PAGE);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    private void createCourse(String newCourseId, String newCourseName, String newCourseTimeZone) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            logic.createCourseAndInstructor(data.account.googleId, newCourseId, newCourseName, newCourseTimeZone);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            String statusMessage \u003d Const.StatusMessages.COURSE_ADDED.replace(\"${courseEnrollLink}\","
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                    data.getInstructorCourseEnrollLink(newCourseId)).replace(\"${courseEditLink}\","
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                    data.getInstructorCourseEditLink(newCourseId));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            statusToUser.add(new StatusMessage(statusMessage, StatusMessageColor.SUCCESS));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            isError \u003d false;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (EntityAlreadyExistsException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            setStatusForException(e, Const.StatusMessages.COURSE_EXISTS);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (InvalidParametersException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            setStatusForException(e);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalessr": 4,
      "-": 110
    }
  },
  {
    "path": "src/main/java/teammates/ui/controller/InstructorCourseDeleteAction.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.ui.controller;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Assumption;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.StatusMessage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.StatusMessageColor;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalessr"
        },
        "content": " * Action: Move a course to Recycle Bin (soft-delete) for an instructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class InstructorCourseDeleteAction extends Action {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public ActionResult execute() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        String idOfCourseToDelete \u003d getRequestParamValue(Const.ParamsNames.COURSE_ID);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertPostParamNotNull(Const.ParamsNames.COURSE_ID, idOfCourseToDelete);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        gateKeeper.verifyAccessible(logic.getInstructorForGoogleId(idOfCourseToDelete, account.googleId),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                                    logic.getCourse(idOfCourseToDelete),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                                    Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_COURSE);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            /* Move the course to recycle bin and setup status to be shown to user and admin */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            logic.moveCourseToRecovery(idOfCourseToDelete);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            String statusMessage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            if (isRedirectedToHomePage()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                statusMessage \u003d String.format(Const.StatusMessages.COURSE_MOVED_TO_RECYCLE_BIN_FROM_HOMEPAGE,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                        idOfCourseToDelete);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                statusMessage \u003d String.format(Const.StatusMessages.COURSE_MOVED_TO_RECYCLE_BIN,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                        idOfCourseToDelete);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            statusToUser.add(new StatusMessage(statusMessage, StatusMessageColor.SUCCESS));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            statusToAdmin \u003d \"Course moved to recycle bin: \" + idOfCourseToDelete;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            setStatusForException(e);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isRedirectedToHomePage()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            return createRedirectResult(Const.ActionURIs.INSTRUCTOR_HOME_PAGE);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        return createRedirectResult(Const.ActionURIs.INSTRUCTOR_COURSES_PAGE);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks if the action is executed in homepage or \u0027Courses\u0027 pages based on its redirection."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean isRedirectedToHomePage() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        String nextUrl \u003d getRequestParamValue(Const.ParamsNames.NEXT_URL);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        return nextUrl !\u003d null \u0026\u0026 nextUrl.equals(Const.ActionURIs.INSTRUCTOR_HOME_PAGE);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalessr": 17,
      "-": 37
    }
  },
  {
    "path": "src/main/java/teammates/ui/controller/InstructorCourseDeleteAllRecoveryCoursesAction.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalessr"
        },
        "content": "package teammates.ui.controller;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalessr"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalessr"
        },
        "content": "import teammates.common.datatransfer.attributes.CourseAttributes;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalessr"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalessr"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalessr"
        },
        "content": "import teammates.common.util.StatusMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalessr"
        },
        "content": "import teammates.common.util.StatusMessageColor;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalessr"
        },
        "content": "import teammates.ui.pagedata.InstructorCoursesPageData;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalessr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalessr"
        },
        "content": " * Action: Permanently delete all courses from Recycle Bin for an instructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalessr"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalessr"
        },
        "content": "public class InstructorCourseDeleteAllRecoveryCoursesAction extends Action {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public ActionResult execute() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        InstructorCoursesPageData data \u003d new InstructorCoursesPageData(account, sessionToken);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        List\u003cInstructorAttributes\u003e instructorList \u003d logic.getInstructorsForGoogleId(data.account.googleId);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        for (InstructorAttributes instructor : instructorList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            CourseAttributes course \u003d logic.getRecoveryCourseForInstructor(instructor);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            if (course !\u003d null) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                gateKeeper.verifyAccessible(instructor,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                        course,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                        Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_COURSE);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            /* Permanently delete all courses and setup status to be shown to user and admin */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            logic.deleteAllCourses(instructorList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            String statusMessage \u003d Const.StatusMessages.COURSE_ALL_DELETED;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            statusToUser.add(new StatusMessage(statusMessage, StatusMessageColor.SUCCESS));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            statusToAdmin \u003d \"All courses deleted\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            setStatusForException(e);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        return createRedirectResult(Const.ActionURIs.INSTRUCTOR_COURSES_PAGE);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dalessr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalessr": 44
    }
  },
  {
    "path": "src/main/java/teammates/ui/controller/InstructorCourseDeleteRecoveryCourseAction.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalessr"
        },
        "content": "package teammates.ui.controller;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalessr"
        },
        "content": "import teammates.common.util.Assumption;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalessr"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalessr"
        },
        "content": "import teammates.common.util.StatusMessage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalessr"
        },
        "content": "import teammates.common.util.StatusMessageColor;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalessr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalessr"
        },
        "content": " * Action: Permanently delete a course from Recycle Bin for an instructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalessr"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalessr"
        },
        "content": "public class InstructorCourseDeleteRecoveryCourseAction extends Action {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public ActionResult execute() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        String idOfCourseToDelete \u003d getRequestParamValue(Const.ParamsNames.COURSE_ID);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        Assumption.assertPostParamNotNull(Const.ParamsNames.COURSE_ID, idOfCourseToDelete);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        gateKeeper.verifyAccessible(logic.getInstructorForGoogleId(idOfCourseToDelete, account.googleId),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                logic.getCourse(idOfCourseToDelete),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_COURSE);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            /* Permanently delete the course and setup status to be shown to user and admin */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            logic.deleteCourse(idOfCourseToDelete);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            String statusMessage \u003d String.format(Const.StatusMessages.COURSE_DELETED, idOfCourseToDelete);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            statusToUser.add(new StatusMessage(statusMessage, StatusMessageColor.SUCCESS));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            statusToAdmin \u003d \"Course deleted: \" + idOfCourseToDelete;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            setStatusForException(e);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        return createRedirectResult(Const.ActionURIs.INSTRUCTOR_COURSES_PAGE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dalessr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalessr": 35
    }
  },
  {
    "path": "src/main/java/teammates/ui/controller/InstructorCourseRestoreAllRecoveryCoursesAction.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalessr"
        },
        "content": "package teammates.ui.controller;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalessr"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalessr"
        },
        "content": "import teammates.common.datatransfer.attributes.CourseAttributes;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalessr"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalessr"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalessr"
        },
        "content": "import teammates.common.util.StatusMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalessr"
        },
        "content": "import teammates.common.util.StatusMessageColor;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalessr"
        },
        "content": "import teammates.ui.pagedata.InstructorCoursesPageData;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalessr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalessr"
        },
        "content": " * Action: Restore all courses from Recycle Bin for an instructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalessr"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalessr"
        },
        "content": "public class InstructorCourseRestoreAllRecoveryCoursesAction extends Action {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public ActionResult execute() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        InstructorCoursesPageData data \u003d new InstructorCoursesPageData(account, sessionToken);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        List\u003cInstructorAttributes\u003e instructorList \u003d logic.getInstructorsForGoogleId(data.account.googleId);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        for (InstructorAttributes instructor : instructorList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            CourseAttributes course \u003d logic.getRecoveryCourseForInstructor(instructor);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            if (course !\u003d null) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                gateKeeper.verifyAccessible(instructor,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                        course,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                        Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_COURSE);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            /* Restore all courses and setup status to be shown to user and admin */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            logic.restoreAllCoursesFromRecovery(instructorList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            String statusMessage \u003d Const.StatusMessages.COURSE_ALL_RESTORED;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            statusToUser.add(new StatusMessage(statusMessage, StatusMessageColor.SUCCESS));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            statusToAdmin \u003d \"All courses restored\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            setStatusForException(e);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        return createRedirectResult(Const.ActionURIs.INSTRUCTOR_COURSES_PAGE);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dalessr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalessr": 44
    }
  },
  {
    "path": "src/main/java/teammates/ui/controller/InstructorCourseRestoreRecoveryCourseAction.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalessr"
        },
        "content": "package teammates.ui.controller;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalessr"
        },
        "content": "import teammates.common.util.Assumption;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalessr"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalessr"
        },
        "content": "import teammates.common.util.StatusMessage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalessr"
        },
        "content": "import teammates.common.util.StatusMessageColor;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalessr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalessr"
        },
        "content": " * Action: Restore a deleted course from Recycle Bin for an instructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalessr"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalessr"
        },
        "content": "public class InstructorCourseRestoreRecoveryCourseAction extends Action {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public ActionResult execute() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        String idOfCourseToRestore \u003d getRequestParamValue(Const.ParamsNames.COURSE_ID);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        Assumption.assertPostParamNotNull(Const.ParamsNames.COURSE_ID, idOfCourseToRestore);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        gateKeeper.verifyAccessible(logic.getInstructorForGoogleId(idOfCourseToRestore, account.googleId),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                logic.getCourse(idOfCourseToRestore),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_COURSE);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            /* Restore the deleted course and setup status to be shown to user and admin */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            logic.restoreCourseFromRecovery(idOfCourseToRestore);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            String statusMessage \u003d String.format(Const.StatusMessages.COURSE_RESTORED, idOfCourseToRestore);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            statusToUser.add(new StatusMessage(statusMessage, StatusMessageColor.SUCCESS));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            statusToAdmin \u003d \"Course restored: \" + idOfCourseToRestore;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            setStatusForException(e);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        return createRedirectResult(Const.ActionURIs.INSTRUCTOR_COURSES_PAGE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dalessr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalessr": 35
    }
  },
  {
    "path": "src/main/java/teammates/ui/controller/InstructorCoursesPageAction.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.ui.controller;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.CourseAttributes;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.StatusMessage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.StatusMessageColor;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.pagedata.InstructorCoursesPageData;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * Action: loading of the \u0027Courses\u0027 page for an instructor."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class InstructorCoursesPageAction extends Action {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public ActionResult execute() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Explanation: First, we extract any parameters from the request object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "         * e.g., idOfCourseToDelete \u003d getRequestParam(Const.ParamsNames.COURSE_ID);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "         * After that, we may verify parameters."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "         * e.g. Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "         * In this Action, there are no parameters.*/"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Explanation: Next, check if the user has rights to execute the action.*/"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        gateKeeper.verifyInstructorPrivileges(account);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Explanation: This is a \u0027show page\u0027 type action. Therefore, we"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "         * prepare the matching PageData object, accessing the Logic"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "         * component if necessary.*/"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorCoursesPageData data \u003d new InstructorCoursesPageData(account, sessionToken);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        String isUsingAjax \u003d getRequestParamValue(Const.ParamsNames.IS_USING_AJAX);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        data.setUsingAjax(isUsingAjax !\u003d null);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, InstructorAttributes\u003e instructorsForCourses \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCourseAttributes\u003e allCourses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCourseAttributes\u003e activeCourses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCourseAttributes\u003e archivedCourses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        List\u003cCourseAttributes\u003e recoveryCourses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        if (data.isUsingAjax()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            // Get list of InstructorAttributes that belong to the user."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cInstructorAttributes\u003e instructorList \u003d logic.getInstructorsForGoogleId(data.account.googleId);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            for (InstructorAttributes instructor : instructorList) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorsForCourses.put(instructor.courseId, instructor);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            // Get corresponding courses of the instructors."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            allCourses \u003d logic.getCoursesForInstructor(instructorList);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            recoveryCourses \u003d logic.getRecoveryCoursesForInstructors(instructorList);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cString\u003e archivedCourseIds \u003d logic.getArchivedCourseIds(allCourses, instructorsForCourses);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            for (CourseAttributes course : allCourses) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                if (archivedCourseIds.contains(course.getId())) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                    archivedCourses.add(course);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                    activeCourses.add(course);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            // Sort CourseDetailsBundle lists by course id"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            CourseAttributes.sortById(activeCourses);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            CourseAttributes.sortById(archivedCourses);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            CourseAttributes.sortById(recoveryCourses);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        data.init(activeCourses, archivedCourses, recoveryCourses, instructorsForCourses);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Explanation: Set any status messages that should be shown to the user.*/"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        if (data.isUsingAjax() \u0026\u0026 allCourses.isEmpty()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            statusToUser.add(new StatusMessage(Const.StatusMessages.COURSE_EMPTY, StatusMessageColor.WARNING));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Explanation: We must set this variable. It is the text that will"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "         * represent this particular execution of this action in the"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "         * \u0027admin activity log\u0027 page.*/"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        statusToAdmin \u003d \"instructorCourse Page Load\u003cbr\u003eTotal courses: \" + allCourses.size();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Explanation: Create the appropriate result object and return it.*/"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        return createShowPageResult(Const.ViewURIs.INSTRUCTOR_COURSES, data);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalessr": 4,
      "-": 81
    }
  },
  {
    "path": "src/main/java/teammates/ui/pagedata/InstructorCourseEditPageData.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.ui.pagedata;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.AccountAttributes;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.CourseAttributes;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.SanitizationHelper;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.template.CourseEditInstructorPanel;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.template.ElementTag;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class InstructorCourseEditPageData extends PageData {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    private int instructorToShowIndex;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private ElementTag editCourseButton;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private ElementTag deleteCourseButton;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private CourseAttributes course;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cCourseEditInstructorPanel\u003e instructorPanelList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private CourseEditInstructorPanel addInstructorPanel;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private ElementTag addInstructorButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorCourseEditPageData(AccountAttributes account, String sessionToken, CourseAttributes course,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                                        List\u003cInstructorAttributes\u003e instructorList,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                                        InstructorAttributes currentInstructor, int instructorToShowIndex,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                                        List\u003cString\u003e sectionNames, List\u003cString\u003e feedbackNames) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        super(account, sessionToken);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        this.course \u003d course;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        //TODO: [CourseAttribute] remove desanitization after data migration"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        //creating a new course with possibly desanitized name as course name cannot be accessed directly"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        this.course \u003d CourseAttributes"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                .builder(course.getId(),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                        SanitizationHelper.desanitizeIfHtmlSanitized(course.getName()),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                        course.getTimeZone())"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                 .build();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        this.course.createdAt \u003d course.createdAt;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        this.instructorToShowIndex \u003d instructorToShowIndex;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        createCourseRelatedButtons(currentInstructor);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isShowingAllInstructors \u003d instructorToShowIndex \u003d\u003d -1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isShowingAllInstructors) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            instructorPanelList \u003d createInstructorPanelList(currentInstructor, instructorList, sectionNames,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                                                            feedbackNames);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            instructorPanelList \u003d createInstructorPanelForSingleInstructor("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                                            currentInstructor, instructorList.get(0), instructorToShowIndex,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                                            sectionNames, feedbackNames);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        addInstructorPanel \u003d createInstructorPanel(currentInstructor, instructorPanelList.size() + 1, null,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                                                   sectionNames, feedbackNames);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cCourseEditInstructorPanel\u003e createInstructorPanelList(InstructorAttributes currentInstructor,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                                           List\u003cInstructorAttributes\u003e instructorList,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                                           List\u003cString\u003e sectionNames, List\u003cString\u003e feedbackNames) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCourseEditInstructorPanel\u003e panelList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        int instructorIndex \u003d 0;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        for (InstructorAttributes instructor : instructorList) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            instructorIndex++;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            CourseEditInstructorPanel instructorPanel \u003d createInstructorPanel(currentInstructor,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                              instructorIndex, instructor,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                              sectionNames, feedbackNames);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            panelList.add(instructorPanel);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        return panelList;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cCourseEditInstructorPanel\u003e createInstructorPanelForSingleInstructor(InstructorAttributes currentInstructor,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                                    InstructorAttributes instructorForPanel, int instructorIndex,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                                    List\u003cString\u003e sectionNames, List\u003cString\u003e feedbackNames) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCourseEditInstructorPanel\u003e panelList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseEditInstructorPanel instructorPanel \u003d createInstructorPanel("
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                                                            currentInstructor,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                                                            instructorIndex, instructorForPanel,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                                                            sectionNames, feedbackNames);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        panelList.add(instructorPanel);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        return panelList;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    private void createCourseRelatedButtons(InstructorAttributes currentInstructor) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isEditDeleteCourseButtonDisabled \u003d !currentInstructor.isAllowedForPrivilege("
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                                                       Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_COURSE);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        editCourseButton \u003d createEditCourseButton(isEditDeleteCourseButtonDisabled);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        deleteCourseButton \u003d createDeleteCourseButton(isEditDeleteCourseButtonDisabled);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isAddInstructorButtonDisabled \u003d !currentInstructor.isAllowedForPrivilege("
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                                                    Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_INSTRUCTOR);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        addInstructorButton \u003d createAddInstructorButton(isAddInstructorButtonDisabled);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    private CourseEditInstructorPanel createInstructorPanel(InstructorAttributes currentInstructor,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                                                            int instructorIndex,"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                                                            InstructorAttributes instructor,"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                                                            List\u003cString\u003e sectionNames,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                                                            List\u003cString\u003e feedbackNames) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseEditInstructorPanel instructorPanel \u003d new CourseEditInstructorPanel(instructorToShowIndex,"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                          instructorIndex, instructor,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                          sectionNames, feedbackNames);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        if (instructor \u003d\u003d null) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            instructorPanel.setCancelAddInstructorButton(createCancelAddInstructorButton());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            int panelIndex \u003d instructorPanel.getIndex();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean isDisabled \u003d !currentInstructor.isAllowedForPrivilege("
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                                         Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_INSTRUCTOR);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            if (instructor.googleId \u003d\u003d null) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorPanel.setResendInviteButton(createRemindInstructorButton(instructor, panelIndex, isDisabled));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            instructorPanel.setEditButton(createEditInstructorButton(panelIndex, isDisabled));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            instructorPanel.setCancelButton(createCancelEditInstructorButton(panelIndex, isDisabled));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            instructorPanel.setDeleteButton(createDeleteInstructorButton(instructor, panelIndex, isDisabled));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorPanel;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    public ElementTag getEditCourseButton() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        return editCourseButton;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    public ElementTag getDeleteCourseButton() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        return deleteCourseButton;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    public ElementTag getAddInstructorButton() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        return addInstructorButton;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    public CourseEditInstructorPanel getAddInstructorPanel() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        return addInstructorPanel;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    public CourseAttributes getCourse() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        return course;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cCourseEditInstructorPanel\u003e getInstructorPanelList() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorPanelList;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    public int getInstructorToShowIndex() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorToShowIndex;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    private ElementTag createAddInstructorButton(boolean isDisabled) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        // addInstructorButton is an actual \u003cinput\u003e button and is thus created differently from the rest of"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        // the buttons created with \u003ca\u003e tags"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        ElementTag button \u003d new ElementTag();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        button.setAttribute(\"type\", \"button\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        button.setAttribute(\"id\", \"btnShowNewInstructorForm\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        button.setAttribute(\"class\", \"btn btn-primary\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isDisabled) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            button.setAttribute(\"disabled\", null);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        return button;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    private ElementTag createEditCourseButton(boolean isDisabled) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        String buttonContent \u003d \"\u003cspan class\u003d\\\"glyphicon glyphicon-pencil\\\"\u003e\u003c/span\u003e Edit\";"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        String buttonId \u003d \"courseEditLink\";"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        return createBasicButton(buttonContent, buttonId, \"javascript:;\", Const.Tooltips.COURSE_INFO_EDIT,"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "                                 isDisabled);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    private ElementTag createDeleteCourseButton(boolean isDisabled) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        String buttonContent \u003d \"\u003cspan class\u003d\\\"glyphicon glyphicon-trash\\\"\u003e\u003c/span\u003e Delete\";"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        String buttonId \u003d \"courseDeleteLink\";"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        String href \u003d getInstructorCourseDeleteLink(course.getId(), false);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        ElementTag button \u003d createBasicButton(buttonContent, buttonId, href, Const.Tooltips.COURSE_MOVE_TO_RECOVERY,"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "                                              isDisabled);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        button.setAttribute(\"data-course-id\", course.getId());"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        String existingClasses \u003d button.removeAttribute(\"class\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        button.setAttribute(\"class\", existingClasses);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        return button;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    private ElementTag createRemindInstructorButton(InstructorAttributes instructor, int panelIndex, boolean isDisabled) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        String buttonContent \u003d \"\u003cspan class\u003d\\\"glyphicon glyphicon-envelope\\\"\u003e\u003c/span\u003e Resend Invite\";"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        String buttonId \u003d \"instrRemindLink\" + panelIndex;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        String href \u003d getInstructorCourseRemindInstructorLink(instructor.courseId, instructor.email);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        ElementTag button \u003d createBasicButton(buttonContent, buttonId, href, Const.Tooltips.COURSE_INSTRUCTOR_REMIND,"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "                                              isDisabled);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        button.setAttribute(\"data-instructor-name\", instructor.getName());"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        button.setAttribute(\"data-course-id\", instructor.getCourseId());"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        return button;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "    private ElementTag createDeleteInstructorButton(InstructorAttributes instructor, int panelIndex, boolean isDisabled) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        String buttonContent \u003d \"\u003cspan class\u003d\\\"glyphicon glyphicon-trash\\\"\u003e\u003c/span\u003e Delete\";"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        String buttonId \u003d \"instrDeleteLink\" + panelIndex;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        String href \u003d getInstructorCourseInstructorDeleteLink(instructor.courseId, instructor.email);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isDeleteSelf \u003d instructor.email.equals(this.account.email);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        ElementTag button \u003d createBasicButton(buttonContent, buttonId, href, Const.Tooltips.COURSE_INSTRUCTOR_DELETE,"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "                                              isDisabled);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        button.setAttribute(\"data-is-delete-self\", String.valueOf(isDeleteSelf));"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        button.setAttribute(\"data-instructor-name\", instructor.getName());"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        button.setAttribute(\"data-course-id\", instructor.getCourseId());"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "        return button;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "    private ElementTag createEditInstructorButton(int panelIndex, boolean isDisabled) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        String buttonContent \u003d \"\u003cspan class\u003d\\\"glyphicon glyphicon-pencil\\\"\u003e\u003c/span\u003e Edit\";"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        String buttonId \u003d \"instrEditLink\" + panelIndex;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        return createBasicButton(buttonContent, buttonId, \"javascript:;\", Const.Tooltips.COURSE_INSTRUCTOR_EDIT, isDisabled);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "    private ElementTag createCancelEditInstructorButton(int panelIndex, boolean isDisabled) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        String buttonContent \u003d \"\u003cspan class\u003d\\\"glyphicon glyphicon-remove\\\"\u003e\u003c/span\u003e Cancel\";"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "        String buttonId \u003d \"instrCancelLink\" + panelIndex;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        return createBasicButton(buttonContent, buttonId, \"javascript:;\", Const.Tooltips.COURSE_INSTRUCTOR_CANCEL_EDIT,"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "                                 isDisabled);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "    private ElementTag createCancelAddInstructorButton() {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        String buttonContent \u003d \"\u003cspan class\u003d\\\"glyphicon glyphicon-remove\\\"\u003e\u003c/span\u003e Cancel\";"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "        String buttonId \u003d \"cancelAddInstructorLink\";"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "        return createBasicButton(buttonContent, buttonId, \"javascript:;\", Const.Tooltips.COURSE_INSTRUCTOR_CANCEL_ADD,"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "                false);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a basic bootstrap button for use in {@code \u003ca\u003e\u003c/a\u003e} tags in panel header."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "    private ElementTag createBasicButton(String buttonText, String buttonId, String href, String tooltipText,"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "                                         boolean isDisabled) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "        ElementTag button \u003d new ElementTag(buttonText);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        button.setAttribute(\"type\", \"button\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        button.setAttribute(\"class\", \"btn btn-primary btn-xs\");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        if (buttonId !\u003d null) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "            button.setAttribute(\"id\", buttonId);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "        if (href !\u003d null) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "            button.setAttribute(\"href\", href);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "        if (tooltipText !\u003d null) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "            button.setAttribute(\"title\", tooltipText);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "            button.setAttribute(\"data-toggle\", \"tooltip\");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "            button.setAttribute(\"data-placement\", \"top\");"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isDisabled) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "            button.setAttribute(\"disabled\", null);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "        return button;"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalessr": 2,
      "-": 262
    }
  },
  {
    "path": "src/main/java/teammates/ui/pagedata/InstructorCoursesPageData.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.ui.pagedata;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.AccountAttributes;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.CourseAttributes;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.SanitizationHelper;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.template.ActiveCoursesTable;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.template.ActiveCoursesTableRow;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.template.ArchivedCoursesTable;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.template.ArchivedCoursesTableRow;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.template.ElementTag;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalessr"
        },
        "content": "import teammates.ui.template.RecoveryCoursesTable;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalessr"
        },
        "content": "import teammates.ui.template.RecoveryCoursesTableRow;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " * This is the PageData object for the \u0027Courses\u0027 page."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "public class InstructorCoursesPageData extends PageData {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    // Flag for deciding if loading the courses table, or the new course form."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    // if true -\u003e loads the courses table, else load the form"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean isUsingAjax;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private ArchivedCoursesTable archivedCourses;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private ActiveCoursesTable activeCourses;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    private RecoveryCoursesTable recoveryCourses;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private String courseIdToShow;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    private String courseNameToShow;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    private Map\u003cString, InstructorAttributes\u003e instructorsForCourses;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorCoursesPageData(AccountAttributes account, String sessionToken) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        super(account, sessionToken);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public void init(List\u003cCourseAttributes\u003e activeCoursesParam, List\u003cCourseAttributes\u003e archivedCoursesParam,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                     List\u003cCourseAttributes\u003e recoveryCoursesParam,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                     Map\u003cString, InstructorAttributes\u003e instructorsForCoursesParam) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        init(activeCoursesParam, archivedCoursesParam, recoveryCoursesParam, instructorsForCoursesParam, \"\", \"\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public void init(List\u003cCourseAttributes\u003e activeCoursesParam, List\u003cCourseAttributes\u003e archivedCoursesParam,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                     List\u003cCourseAttributes\u003e recoveryCoursesParam,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                     Map\u003cString, InstructorAttributes\u003e instructorsForCoursesParam, String courseIdToShowParam,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                     String courseNameToShowParam) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        this.instructorsForCourses \u003d instructorsForCoursesParam;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        this.activeCourses \u003d convertToActiveCoursesTable(activeCoursesParam);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        this.archivedCourses \u003d convertToArchivedCoursesTable(archivedCoursesParam);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        this.recoveryCourses \u003d convertToRecoveryCoursesTable(recoveryCoursesParam);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        this.courseIdToShow \u003d courseIdToShowParam;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        this.courseNameToShow \u003d courseNameToShowParam;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUsingAjax(boolean isUsingAjax) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isUsingAjax \u003d isUsingAjax;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isUsingAjax() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.isUsingAjax;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getCourseIdToShow() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        return courseIdToShow;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getCourseNameToShow() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        return courseNameToShow;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public ActiveCoursesTable getActiveCourses() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        return activeCourses;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    public ArchivedCoursesTable getArchivedCourses() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        return archivedCourses;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public RecoveryCoursesTable getRecoveryCourses() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        return recoveryCourses;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    private ArchivedCoursesTable convertToArchivedCoursesTable(List\u003cCourseAttributes\u003e archivedCourses) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        ArchivedCoursesTable archivedCoursesTable \u003d new ArchivedCoursesTable();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        int idx \u003d this.activeCourses.getRows().size() - 1;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        for (CourseAttributes course : archivedCourses) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            idx++;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cElementTag\u003e actionsParam \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            String unarchiveLink \u003d getInstructorCourseArchiveLink(course.getId(), false, false);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            ElementTag unarchivedButton \u003d createButton(\"Unarchive\", \"btn btn-default btn-xs\","
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                                                       \"t_course_unarchive\" + idx, unarchiveLink, \"\", false);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            String deleteLink \u003d getInstructorCourseDeleteLink(course.getId(), false);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            Boolean hasDeletePermission \u003d instructorsForCourses.get(course.getId()).isAllowedForPrivilege("
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                                                  Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_COURSE);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            ElementTag deleteButton \u003d createButton(\"Delete\", \"btn btn-default btn-xs\","
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                                                   \"t_course_delete\" + idx, deleteLink,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                                                   Const.Tooltips.COURSE_MOVE_TO_RECOVERY, !hasDeletePermission);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            deleteButton.setAttribute(\"data-course-id\", course.getId());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            actionsParam.add(unarchivedButton);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            actionsParam.add(deleteButton);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            ArchivedCoursesTableRow row \u003d new ArchivedCoursesTableRow(SanitizationHelper.sanitizeForHtml(course.getId()),"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                      SanitizationHelper.sanitizeForHtml(course.getName()),"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                      course.getCreatedAtDateString(),"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                      course.getCreatedAtDateStamp(),"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                      course.getCreatedAtFullDateTimeString(),"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                      actionsParam);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            archivedCoursesTable.getRows().add(row);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        return archivedCoursesTable;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    private ActiveCoursesTable convertToActiveCoursesTable(List\u003cCourseAttributes\u003e courses) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        ActiveCoursesTable activeCourses \u003d new ActiveCoursesTable();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        int idx \u003d -1;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        for (CourseAttributes course : courses) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            idx++;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cElementTag\u003e actionsParam \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            Boolean hasModifyPermission \u003d instructorsForCourses.get(course.getId()).isAllowedForPrivilege("
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                                                   Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_STUDENT);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            ElementTag enrollButton \u003d createButton(\"Enroll\", \"btn btn-default btn-xs t_course_enroll\" + idx, \"\","
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "                                                   getInstructorCourseEnrollLink(course.getId()),"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "                                                   Const.Tooltips.COURSE_ENROLL, !hasModifyPermission);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            ElementTag viewButton \u003d createButton(\"View\", \"btn btn-default btn-xs t_course_view\" + idx, \"\","
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 getInstructorCourseDetailsLink(course.getId()),"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 Const.Tooltips.COURSE_DETAILS, false);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            ElementTag editButton \u003d createButton(\"Edit\", \"btn btn-default btn-xs t_course_edit\" + idx, \"\","
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 getInstructorCourseEditLink(course.getId()),"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 Const.Tooltips.COURSE_EDIT, false);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            ElementTag archiveButton \u003d createButton(\"Archive\", \"btn btn-default btn-xs t_course_archive\" + idx, \"\","
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "                                                    getInstructorCourseArchiveLink(course.getId(), true, false),"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "                                                    Const.Tooltips.COURSE_ARCHIVE, false);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "            String deleteLink \u003d getInstructorCourseDeleteLink(course.getId(), false);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            Boolean hasDeletePermission \u003d instructorsForCourses.get(course.getId()).isAllowedForPrivilege("
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "                                                   Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_COURSE);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            ElementTag deleteButton \u003d createButton(\"Delete\", \"btn btn-default btn-xs \""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                                                   + \"t_course_delete\" + idx, \"\", deleteLink,"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                                                   Const.Tooltips.COURSE_MOVE_TO_RECOVERY, !hasDeletePermission);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "            deleteButton.setAttribute(\"data-course-id\", course.getId());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            actionsParam.add(enrollButton);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            actionsParam.add(viewButton);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            actionsParam.add(editButton);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "            actionsParam.add(archiveButton);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            actionsParam.add(deleteButton);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            ActiveCoursesTableRow row \u003d new ActiveCoursesTableRow(SanitizationHelper.sanitizeForHtml(course.getId()),"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                  SanitizationHelper.sanitizeForHtml(course.getName()),"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                  course.getCreatedAtDateString(),"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                  course.getCreatedAtDateStamp(),"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                  course.getCreatedAtFullDateTimeString(),"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                  this.getInstructorCourseStatsLink(course.getId()),"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                  actionsParam);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            activeCourses.getRows().add(row);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        return activeCourses;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    private RecoveryCoursesTable convertToRecoveryCoursesTable(List\u003cCourseAttributes\u003e courses) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        RecoveryCoursesTable recoveryCourses \u003d new RecoveryCoursesTable();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        int idx \u003d -1;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        for (CourseAttributes course : courses) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            idx++;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            List\u003cElementTag\u003e actionsParam \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            String restoreLink \u003d getInstructorCourseRestoreRecoveryCourseLink(course.getId());"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            ElementTag restoreButton \u003d createButton(\"Restore\", \"btn btn-default btn-xs t_course_restore\" + idx, \"\","
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                    restoreLink, Const.Tooltips.COURSE_RESTORE, false);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            String deleteLink \u003d getInstructorCourseDeleteRecoveryCourseLink(course.getId());"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            Boolean hasDeletePermission \u003d instructorsForCourses.get(course.getId()).isAllowedForPrivilege("
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                    Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_COURSE);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            ElementTag deleteButton \u003d createButton(\"Delete Permanently\", \"btn btn-default btn-xs course-delete-link \""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                            + \"t_course_delete\" + idx, \"\", deleteLink, Const.Tooltips.COURSE_DELETE,"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                    !hasDeletePermission);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            deleteButton.setAttribute(\"data-course-id\", course.getId());"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            deleteButton.setAttribute(\"style\", \"color: red\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            actionsParam.add(restoreButton);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            actionsParam.add(deleteButton);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            RecoveryCoursesTableRow row \u003d new RecoveryCoursesTableRow(SanitizationHelper.sanitizeForHtml(course.getId()),"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                    SanitizationHelper.sanitizeForHtml(course.getName()),"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                    course.getCreatedAtDateString(),"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                    course.getCreatedAtDateStamp(),"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                    course.getCreatedAtFullDateTimeString(),"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                    course.getDeletedAtDateString(),"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                    course.getDeletedAtDateStamp(),"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                    course.getDeletedAtFullDateTimeString(),"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                    this.getInstructorCourseStatsLink(course.getId()),"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                    actionsParam);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            recoveryCourses.getRows().add(row);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        return recoveryCourses;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "    private ElementTag createButton(String content, String buttonClass, String id, String href, String title,"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "                                    boolean isDisabled) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        ElementTag button \u003d new ElementTag(content);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        button.setAttribute(\"class\", buttonClass);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        if (id !\u003d null \u0026\u0026 !id.isEmpty()) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "            button.setAttribute(\"id\", id);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        if (href !\u003d null \u0026\u0026 !href.isEmpty()) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "            button.setAttribute(\"href\", href);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "        if (title !\u003d null \u0026\u0026 !title.isEmpty()) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "            button.setAttribute(\"title\", title);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "            button.setAttribute(\"data-toggle\", \"tooltip\");"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "            button.setAttribute(\"data-placement\", \"top\");"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isDisabled) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "            button.setAttribute(\"disabled\", null);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        return button;"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalessr": 59,
      "-": 187
    }
  },
  {
    "path": "src/main/java/teammates/ui/pagedata/InstructorHomeCourseAjaxPageData.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.ui.pagedata;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.CourseSummaryBundle;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.AccountAttributes;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.CourseAttributes;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.TimeHelper;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.template.CourseTable;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.template.ElementTag;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.template.HomeFeedbackSessionRow;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.template.InstructorHomeFeedbackSessionRow;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public class InstructorHomeCourseAjaxPageData extends PageData {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private CourseTable courseTable;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorHomeCourseAjaxPageData(AccountAttributes account, String sessionToken) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        super(account, sessionToken);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public void init(int tableIndex, CourseSummaryBundle courseSummary, InstructorAttributes instructor) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        this.index \u003d tableIndex;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        this.courseTable \u003d createCourseTable(courseSummary.course, instructor, courseSummary.feedbackSessions);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public CourseTable getCourseTable() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        return courseTable;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public int getIndex() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    private CourseTable createCourseTable(CourseAttributes course, InstructorAttributes instructor,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cFeedbackSessionAttributes\u003e feedbackSessions) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseId \u003d course.getId();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        return new CourseTable(course,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                               createCourseTableLinks(instructor, courseId),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                               createSessionRows(feedbackSessions, instructor));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    private ElementTag createButton(String text, String className, String href, String tooltip) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        return new ElementTag(text, \"class\", className, \"href\", href, \"title\", tooltip);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    private void addAttributeIf(boolean shouldAdd, ElementTag button, String key, String value) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        if (shouldAdd) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            button.setAttribute(key, value);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cElementTag\u003e createCourseTableLinks(InstructorAttributes instructor, String courseId) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        String className \u003d \"btn-tm-actions course-\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        ElementTag students \u003d new ElementTag(\"Students\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        ElementTag sessions \u003d new ElementTag(\"Sessions\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        ElementTag instructors \u003d new ElementTag(\"Instructors\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        ElementTag courses \u003d new ElementTag(\"Course\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        ElementTag enroll \u003d createButton(\"Enroll\","
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                                         className + \"enroll-for-test\","
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                                         getInstructorCourseEnrollLink(courseId),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                                         Const.Tooltips.COURSE_ENROLL);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        ElementTag view \u003d createButton(\"View / Edit\","
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                                       className + \"view-for-test\","
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                                       getInstructorCourseDetailsLink(courseId),"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                                       Const.Tooltips.COURSE_DETAILS);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        ElementTag edit \u003d createButton(\"View / Edit\","
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                                       className + \"edit-for-test\","
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                                       getInstructorCourseEditLink(courseId),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                                       Const.Tooltips.COURSE_EDIT);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        ElementTag add \u003d createButton(\"Add\","
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                                      className + \"add-eval-for-test\","
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                                      getInstructorFeedbackSessionsLink(courseId),"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                                      Const.Tooltips.COURSE_ADD_FEEDBACKSESSION);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        ElementTag archive \u003d createButton(\"Archive\","
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                                          className + \"archive-for-test\","
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                                          getInstructorCourseArchiveLink(courseId, true, true),"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                                          Const.Tooltips.COURSE_ARCHIVE);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        addAttributeIf(true, archive, \"data-course-id\", courseId);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        ElementTag delete \u003d createButton(\"Delete\","
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                                         className + \"delete-for-test course-move-to-recovery-link\","
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                                         getInstructorCourseDeleteLink(courseId, true),"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                                         Const.Tooltips.COURSE_MOVE_TO_RECOVERY);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        addAttributeIf(true, delete, \"data-course-id\", courseId);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        if (instructor.isAllowedForPrivilege(Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_STUDENT)) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            students.addNestedElement(enroll);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        students.addNestedElement(view);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        sessions.addNestedElement(add);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        instructors.addNestedElement(edit);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        courses.addNestedElement(archive);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        courses.addNestedElement(edit);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        if (instructor.isAllowedForPrivilege(Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_COURSE)) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            courses.addNestedElement(delete);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        if (!instructor.isAllowedForPrivilege(Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_SESSION)) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            return Arrays.asList(students, instructors, courses);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        return Arrays.asList(students, instructors, sessions, courses);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cHomeFeedbackSessionRow\u003e createSessionRows(List\u003cFeedbackSessionAttributes\u003e sessions,"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            InstructorAttributes instructor) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cHomeFeedbackSessionRow\u003e rows \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackSessionAttributes session : sessions) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            InstructorHomeFeedbackSessionRow row \u003d new InstructorHomeFeedbackSessionRow("
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                    sanitizeForHtml(session.getFeedbackSessionName()),"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                    getInstructorSubmissionsTooltipForFeedbackSession(session),"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                    getInstructorPublishedTooltipForFeedbackSession(session),"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "                    getInstructorSubmissionStatusForFeedbackSession(session),"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "                    getInstructorPublishedStatusForFeedbackSession(session),"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "                    TimeHelper.formatDateTimeForInstructorHomePage(session.getStartTimeLocal()),"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                    session.getStartTimeInIso8601UtcFormat(),"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "                    TimeHelper.formatDateTimeForDisplay(session.getStartTime(), session.getTimeZone()),"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "                    TimeHelper.formatDateTimeForInstructorHomePage(session.getEndTimeLocal()),"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                    session.getEndTimeInIso8601UtcFormat(),"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "                    TimeHelper.formatDateTimeForDisplay(session.getEndTime(), session.getTimeZone()),"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "                    getInstructorFeedbackStatsLink(session.getCourseId(), session.getFeedbackSessionName()),"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "                    getInstructorFeedbackSessionActions("
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "                            session, Const.ActionURIs.INSTRUCTOR_HOME_PAGE, instructor));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            rows.add(row);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        return rows;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalessr": 9,
      "-": 137
    }
  },
  {
    "path": "src/main/java/teammates/ui/pagedata/PageData.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.ui.pagedata;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.CourseRoster;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackParticipantType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.AccountAttributes;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentAttributes;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.NationalityHelper;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.SanitizationHelper;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.StatusMessage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.StringHelper;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.TimeHelper;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Url;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.template.ElementTag;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.template.InstructorFeedbackSessionActions;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": " * Data and utility methods needed to render a specific page."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "public class PageData {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    /** The user for whom the pages are displayed (i.e. the \u0027nominal user\u0027)."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     *  May not be the logged in user (under masquerade mode) */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public AccountAttributes account;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentAttributes student;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cStatusMessage\u003e statusMessagesToUser;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    private String sessionToken;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public PageData(AccountAttributes account, String sessionToken) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        this(account, null, sessionToken);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public PageData(AccountAttributes account, StudentAttributes student, String sessionToken) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        this.account \u003d account;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        this.student \u003d student;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        this.sessionToken \u003d sessionToken;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public AccountAttributes getAccount() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        return account;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getSessionToken() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        return sessionToken;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isUnregisteredStudent() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        return account.googleId \u003d\u003d null || student !\u003d null \u0026\u0026 !student.isRegistered();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    /* These util methods simply delegate the work to the matching *Helper"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     * class. We keep them here so that JSP pages do not have to import"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     * those *Helper classes."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String sanitizeForHtml(String unsanitizedStringLiteral) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        return SanitizationHelper.sanitizeForHtml(unsanitizedStringLiteral);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String sanitizeForJs(String unsanitizedStringLiteral) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        return SanitizationHelper.sanitizeForJs(unsanitizedStringLiteral);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String truncate(String untruncatedString, int truncateLength) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        return StringHelper.truncate(untruncatedString, truncateLength);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    public String addUserIdToUrl(String link) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        return Url.addParamToUrl(link, Const.ParamsNames.USER_ID, account.googleId);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    public String addSessionTokenToUrl(String link) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        return Url.addParamToUrl(link, Const.ParamsNames.SESSION_TOKEN, sessionToken);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the timezone options as HTML code."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "     * None is selected, since the selection should only be done in client side."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    protected List\u003cString\u003e getTimeZoneOptionsAsHtml(ZoneId existingTimeZone) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cZoneId\u003e options \u003d TimeHelper.getTimeZoneValues();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        ArrayList\u003cString\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        for (ZoneId timeZoneOption : options) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            result.add(\"\u003coption value\u003d\\\"\" + timeZoneOption.getId() + \"\\\"\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                    + (existingTimeZone.equals(timeZoneOption) ? \" selected\" : \"\") + \"\u003e\" + \"(\" + timeZoneOption.getId()"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \") \" + TimeHelper.getCitiesForTimeZone(timeZoneOption) + \"\u003c/option\u003e\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the nationalities as HTML code."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    public static List\u003cElementTag\u003e getNationalitiesAsElementTags(String existingNationality) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e nationalities \u003d NationalityHelper.getNationalities();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cElementTag\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        result.add(createOption(\"--- Select ---\", \"\", !nationalities.contains(existingNationality)));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String nationality : nationalities) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            ElementTag option \u003d createOption(nationality, nationality, nationality.equals(existingNationality));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            result.add(option);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates and returns a String if the existing nationality is incorrect."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String getLegacyNationalityInstructions(String existingNationality) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e nationalities \u003d NationalityHelper.getNationalities();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        if (nationalities.contains(existingNationality) || \"\".equals(existingNationality)) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"Previously entered value was \" + SanitizationHelper.sanitizeForHtml(existingNationality) + \". \""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "               + \"This is not a valid nationality; \""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "               + \"please choose a valid nationality from the dropdown list before saving.\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an element tag representing a HTML option."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    public static ElementTag createOption(String text, String value, boolean isSelected) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isSelected) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            return new ElementTag(text, \"value\", value, \"selected\", null);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        return new ElementTag(text, \"value\", value);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an element tag representing a HTML option."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    public static ElementTag createOption(String text, String value) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        return new ElementTag(text, \"value\", value);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the grace period options as HTML code."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    public static List\u003cElementTag\u003e getGracePeriodOptionsAsElementTags(long existingGracePeriod) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        ArrayList\u003cElementTag\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 0; i \u003c\u003d 30; i +\u003d 5) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "            ElementTag option \u003d createOption(i + \" mins\", String.valueOf(i),"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "                                            isGracePeriodToBeSelected(existingGracePeriod, i));"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "            result.add(option);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the time options as HTML code."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "     * By default the selected one is the last one."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    public static List\u003cElementTag\u003e getTimeOptionsAsElementTags(LocalDateTime timeToShowAsSelected) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cElementTag\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d 24; i++) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            ElementTag option \u003d createOption(String.format(\"%04dH\", i * 100 - (i \u003d\u003d 24 ? 41 : 0)),"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "                                             String.valueOf(i), isTimeToBeSelected(timeToShowAsSelected, i));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            result.add(option);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    //TODO: methods below this point should be made \u0027protected\u0027 and only the"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    //  child classes that need them should expose them using public methods"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "    //  with similar name. That way, we know which child needs which method."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the status of the student, whether he has joined the course."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "     * This is based on googleId, if it\u0027s null or empty, then we assume he"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "     * has not joined the course yet."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return \"Yet to Join\" or \"Joined\""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getStudentStatus(StudentAttributes student) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        return student.getStudentStatus();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns The relative path to the student home page. Defaults to whether the student is unregistered."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getStudentHomeLink() {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        return getStudentHomeLink(isUnregisteredStudent());"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns The relative path to the student home page. The user Id is encoded in the url as a parameter."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getStudentHomeLink(boolean isUnregistered) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.STUDENT_HOME_PAGE;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isUnregistered) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "            link \u003d Url.addParamToUrl(student.getRegistrationUrl(), Const.ParamsNames.NEXT_URL, link);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns The relative path to the student profile page. Defaults to whether the student is unregistered."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getStudentProfileLink() {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        return getStudentProfileLink(isUnregisteredStudent());"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns The relative path to the student profile page. The user Id is encoded in the url as a parameter."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getStudentProfileLink(boolean isUnregistered) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.STUDENT_PROFILE_PAGE;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isUnregistered) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "            link \u003d Url.addParamToUrl(student.getRegistrationUrl(), Const.ParamsNames.NEXT_URL, link);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getStudentCourseDetailsLink(String courseId) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.STUDENT_COURSE_DETAILS_PAGE;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.COURSE_ID, courseId);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getStudentFeedbackSubmissionEditLink(String courseId, String feedbackSessionName) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.STUDENT_FEEDBACK_SUBMISSION_EDIT_PAGE;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.COURSE_ID, courseId);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.FEEDBACK_SESSION_NAME, feedbackSessionName);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getStudentFeedbackResultsLink(String courseId, String feedbackSessionName) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.STUDENT_FEEDBACK_RESULTS_PAGE;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.COURSE_ID, courseId);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.FEEDBACK_SESSION_NAME, feedbackSessionName);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getStudentProfilePictureLink(String studentEmail, String courseId) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.STUDENT_PROFILE_PICTURE;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.STUDENT_EMAIL, studentEmail);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.COURSE_ID, courseId);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns The relative path to the instructor home page. The user Id is encoded in the url as a parameter."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorHomeLink() {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_HOME_PAGE;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorCoursesLink() {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_COURSES_PAGE;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorCourseEnrollLink(String courseId) {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_COURSE_ENROLL_PAGE;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.COURSE_ID, courseId);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorCourseEnrollSaveLink(String courseId) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "        //TODO: instead of using this method, the form should include these data as hidden fields?"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_COURSE_ENROLL_SAVE;"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.COURSE_ID, courseId);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorCourseDetailsLink(String courseId) {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_COURSE_DETAILS_PAGE;"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.COURSE_ID, courseId);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorCourseEditLink(String courseId) {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_COURSE_EDIT_PAGE;"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.COURSE_ID, courseId);"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorFeedbackStatsLink(String courseId, String feedbackSessionName) {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_FEEDBACK_STATS_PAGE;"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.COURSE_ID, courseId);"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.FEEDBACK_SESSION_NAME, feedbackSessionName);"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorCourseStatsLink(String courseId) {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_COURSE_STATS_PAGE;"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.COURSE_ID, courseId);"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorFeedbackEditCopyLink() {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_FEEDBACK_EDIT_COPY_PAGE;"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorQuestionCopyPageLink() {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_FEEDBACK_QUESTION_COPY_PAGE;"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "        return addUserIdToUrl(link);"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "     * Retrieves the link to submit the request for copy of session."
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "     * Appends the return url to the link."
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param returnUrl the url to return to after submitting the request"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return submit link with return url appended to it"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorFeedbackEditCopyActionLink(String returnUrl) {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_FEEDBACK_EDIT_COPY;"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.NEXT_URL, returnUrl);"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addSessionTokenToUrl(link);"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorCourseDeleteLink(String courseId, boolean isHome) {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_COURSE_DELETE;"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.COURSE_ID, courseId);"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link,"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "                                 Const.ParamsNames.NEXT_URL,"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "                                 isHome ? Const.ActionURIs.INSTRUCTOR_HOME_PAGE"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "                                        : Const.ActionURIs.INSTRUCTOR_COURSES_PAGE);"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addSessionTokenToUrl(link);"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorCourseArchiveLink(String courseId, boolean archiveStatus, boolean isHome) {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_COURSE_ARCHIVE;"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.COURSE_ID, courseId);"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.COURSE_ARCHIVE_STATUS, Boolean.toString(archiveStatus));"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link,"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "                                 Const.ParamsNames.NEXT_URL,"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "                                 isHome ? Const.ActionURIs.INSTRUCTOR_HOME_PAGE"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "                                        : Const.ActionURIs.INSTRUCTOR_COURSES_PAGE);"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addSessionTokenToUrl(link);"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public String getInstructorCourseRestoreRecoveryCourseLink(String courseId) {"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_COURSE_RECOVERY_COURSE_RESTORE;"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.COURSE_ID, courseId);"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.NEXT_URL, Const.ActionURIs.INSTRUCTOR_COURSES_PAGE);"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        link \u003d addSessionTokenToUrl(link);"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public String getInstructorCourseRestoreAllRecoveryCoursesLink() {"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_COURSE_RECOVERY_COURSE_RESTORE_ALL;"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.NEXT_URL, Const.ActionURIs.INSTRUCTOR_COURSES_PAGE);"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        link \u003d addSessionTokenToUrl(link);"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public String getInstructorCourseDeleteRecoveryCourseLink(String courseId) {"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_COURSE_RECOVERY_COURSE_DELETE;"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.COURSE_ID, courseId);"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.NEXT_URL, Const.ActionURIs.INSTRUCTOR_COURSES_PAGE);"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        link \u003d addSessionTokenToUrl(link);"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public String getInstructorCourseDeleteAllRecoveryCoursesLink() {"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_COURSE_RECOVERY_COURSE_DELETE_ALL;"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.NEXT_URL, Const.ActionURIs.INSTRUCTOR_COURSES_PAGE);"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        link \u003d addSessionTokenToUrl(link);"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorFeedbackSessionsLink() {"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_FEEDBACK_SESSIONS_PAGE;"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorFeedbackSessionsLink(String courseId) {"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_FEEDBACK_SESSIONS_PAGE;"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.COURSE_ID, courseId);"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "     * Retrieves the link to submit request to delete the session."
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param courseId course ID"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param feedbackSessionName the session name"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param returnUrl the url of the page to return to after the delete"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the link to submit request to delete the session with return page link"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorFeedbackDeleteLink(String courseId, String feedbackSessionName, String returnUrl) {"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_FEEDBACK_DELETE;"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.COURSE_ID, courseId);"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.FEEDBACK_SESSION_NAME, feedbackSessionName);"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.NEXT_URL, returnUrl);"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addSessionTokenToUrl(link);"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorFeedbackEditLink(String courseId, String feedbackSessionName, boolean shouldLoadInEditMode) {"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_FEEDBACK_EDIT_PAGE;"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.COURSE_ID, courseId);"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.FEEDBACK_SESSION_NAME, feedbackSessionName);"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.FEEDBACK_SESSION_ENABLE_EDIT,"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "                Boolean.toString(shouldLoadInEditMode));"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorFeedbackEditLink(String courseId, String feedbackSessionName) {"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_FEEDBACK_EDIT_PAGE;"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.COURSE_ID, courseId);"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.FEEDBACK_SESSION_NAME, feedbackSessionName);"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorFeedbackSubmissionEditLink(String courseId, String feedbackSessionName) {"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_FEEDBACK_SUBMISSION_EDIT_PAGE;"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.COURSE_ID, courseId);"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.FEEDBACK_SESSION_NAME, feedbackSessionName);"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorFeedbackResultsLink(String courseId, String feedbackSessionName) {"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_FEEDBACK_RESULTS_PAGE;"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.COURSE_ID, courseId);"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.FEEDBACK_SESSION_NAME, feedbackSessionName);"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "     * Retrieves the link to submit the request for remind student"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "     * Appends the return url to the link."
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param courseId the course ID"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param feedbackSessionName the name of the feedback session"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param returnUrl the url to return to after submitting the request"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return submit link with return url appended to it"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorFeedbackRemindLink(String courseId, String feedbackSessionName, String returnUrl) {"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_FEEDBACK_REMIND;"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.COURSE_ID, courseId);"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.FEEDBACK_SESSION_NAME, feedbackSessionName);"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.NEXT_URL, returnUrl);"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addSessionTokenToUrl(link);"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "     * Retrieves the link to load remind modal."
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param courseId the course ID"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param feedbackSessionName the name of the feedback session"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the link to load remind modal"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorFeedbackRemindParticularStudentsPageLink(String courseId, String feedbackSessionName) {"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_FEEDBACK_REMIND_PARTICULAR_STUDENTS_PAGE;"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.COURSE_ID, courseId);"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.FEEDBACK_SESSION_NAME, feedbackSessionName);"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "     * Retrieves the link to submit the request to remind a particular student(s)."
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param returnUrl the url to return to after submitting the request"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return submit link with return url appended to it"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorFeedbackRemindParticularStudentsLink(String returnUrl) {"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_FEEDBACK_REMIND_PARTICULAR_STUDENTS;"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.NEXT_URL, returnUrl);"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addSessionTokenToUrl(link);"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorFeedbackPublishLink(String courseId, String feedbackSessionName, String returnUrl) {"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_FEEDBACK_PUBLISH;"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.COURSE_ID, courseId);"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.FEEDBACK_SESSION_NAME, feedbackSessionName);"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.NEXT_URL, returnUrl);"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addSessionTokenToUrl(link);"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "     * Retrieves the link to load data for the resend session published email modal."
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param courseId the course ID"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param feedbackSessionName the name of the feedback session"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the link to load data for the modal"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorFeedbackResendPublishedEmailPageLink(String courseId, String feedbackSessionName) {"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_FEEDBACK_RESEND_PUBLISHED_EMAIL_PAGE;"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.COURSE_ID, courseId);"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.FEEDBACK_SESSION_NAME, feedbackSessionName);"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "     * Retrieves the link to submit the request for resending the session published email."
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param returnUrl the url to return to after submitting the request"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return submit link with return url appended to it"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorFeedbackResendPublishedEmailLink(String returnUrl) {"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_FEEDBACK_RESEND_PUBLISHED_EMAIL;"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.NEXT_URL, returnUrl);"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addSessionTokenToUrl(link);"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorFeedbackUnpublishLink(String courseId, String feedbackSessionName, String returnUrl) {"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_FEEDBACK_UNPUBLISH;"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.COURSE_ID, courseId);"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.FEEDBACK_SESSION_NAME, feedbackSessionName);"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.NEXT_URL, returnUrl);"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addSessionTokenToUrl(link);"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorStudentListLink() {"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_STUDENT_LIST_PAGE;"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorSearchLink() {"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_SEARCH_PAGE;"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorStudentRecordsLink(String courseId, String studentEmail) {"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_STUDENT_RECORDS_PAGE;"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.COURSE_ID, courseId);"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.STUDENT_EMAIL, studentEmail);"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorCourseRemindLink(String courseId) {"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_COURSE_REMIND;"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.COURSE_ID, courseId);"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addSessionTokenToUrl(link);"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorCourseStudentDetailsLink(String courseId, String studentEmail) {"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_COURSE_STUDENT_DETAILS_PAGE;"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.COURSE_ID, courseId);"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.STUDENT_EMAIL, studentEmail);"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorCourseStudentDetailsEditLink(String courseId, String studentEmail) {"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_COURSE_STUDENT_DETAILS_EDIT;"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.COURSE_ID, courseId);"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.STUDENT_EMAIL, studentEmail);"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addSessionTokenToUrl(link);"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorCourseRemindStudentLink(String courseId, String studentEmail) {"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_COURSE_REMIND;"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.COURSE_ID, courseId);"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.STUDENT_EMAIL, studentEmail);"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addSessionTokenToUrl(link);"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "    // TODO: create another delete action which redirects to studentListPage?"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorCourseStudentDeleteLink(String courseId, String studentEmail) {"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_COURSE_STUDENT_DELETE;"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.COURSE_ID, courseId);"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.STUDENT_EMAIL, studentEmail);"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addSessionTokenToUrl(link);"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorCourseStudentDeleteAllLink(String courseId) {"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_COURSE_STUDENT_DELETE_ALL;"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.COURSE_ID, courseId);"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addSessionTokenToUrl(link);"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorCourseInstructorDeleteLink(String courseId, String instructorEmail) {"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_COURSE_INSTRUCTOR_DELETE;"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.COURSE_ID, courseId);"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.INSTRUCTOR_EMAIL, instructorEmail);"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addSessionTokenToUrl(link);"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorCourseRemindInstructorLink(String courseId, String instructorEmail) {"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "        String link \u003d Const.ActionURIs.INSTRUCTOR_COURSE_REMIND;"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.COURSE_ID, courseId);"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d Url.addParamToUrl(link, Const.ParamsNames.INSTRUCTOR_EMAIL, instructorEmail);"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addUserIdToUrl(link);"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "        link \u003d addSessionTokenToUrl(link);"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String getInstructorSubmissionStatusForFeedbackSession(FeedbackSessionAttributes session) {"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "        if (session.isOpened()) {"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "            return \"Open\";"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (session.isWaitingToOpen()) {"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "            return \"Awaiting\";"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "            return \"Closed\";"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String getInstructorPublishedStatusForFeedbackSession(FeedbackSessionAttributes session) {"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "        if (session.isPublished()) {"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": "            return \"Published\";"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": "            return \"Not Published\";"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String getInstructorSubmissionsTooltipForFeedbackSession(FeedbackSessionAttributes session) {"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder msg \u003d new StringBuilder(50);"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": "        msg.append(\"The feedback session has been created\");"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": "        if (session.isVisible()) {"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": "            msg.append(Const.Tooltips.FEEDBACK_SESSION_STATUS_VISIBLE);"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": "        if (session.isOpened()) {"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "            msg.append(Const.Tooltips.FEEDBACK_SESSION_STATUS_OPEN);"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (session.isWaitingToOpen()) {"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": "            msg.append(Const.Tooltips.FEEDBACK_SESSION_STATUS_AWAITING);"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (session.isClosed()) {"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": "            msg.append(Const.Tooltips.FEEDBACK_SESSION_STATUS_CLOSED);"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": "        msg.append(\u0027.\u0027);"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": "        return msg.toString();"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String getInstructorPublishedTooltipForFeedbackSession(FeedbackSessionAttributes session) {"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": "        if (session.isPublished()) {"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": "            return Const.Tooltips.FEEDBACK_SESSION_STATUS_PUBLISHED;"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": "            return Const.Tooltips.FEEDBACK_SESSION_STATUS_NOT_PUBLISHED;"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the links of actions available for a specific session."
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param session"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": "     *         The feedback session details"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param returnUrl"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": "     *         The return URL after performing the action."
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param instructor"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": "     *         The Instructor details"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorFeedbackSessionActions getInstructorFeedbackSessionActions(FeedbackSessionAttributes session,"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                String returnUrl,"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                InstructorAttributes instructor) {"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": "        return new InstructorFeedbackSessionActions(this, session, returnUrl, instructor);"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": "    private static boolean isTimeToBeSelected(LocalDateTime timeToShowAsSelected, int hourOfTheOption) {"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isEditingExistingFeedbackSession \u003d timeToShowAsSelected !\u003d null;"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isEditingExistingFeedbackSession) {"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": "            if (timeToShowAsSelected.getMinute() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": "                if (timeToShowAsSelected.getHour() \u003d\u003d hourOfTheOption) {"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": "                if (hourOfTheOption \u003d\u003d 24) {"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": "            if (hourOfTheOption \u003d\u003d 24) {"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": "    private static boolean isGracePeriodToBeSelected(long existingGracePeriodValue, long gracePeriodOptionValue) {"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isEditingExistingEvaluation \u003d existingGracePeriodValue !\u003d Const.INT_UNINITIALIZED;"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isEditingExistingEvaluation) {"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": "            return gracePeriodOptionValue \u003d\u003d existingGracePeriodValue;"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": "        int defaultGracePeriod \u003d 15;"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": "        return gracePeriodOptionValue \u003d\u003d defaultGracePeriod;"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isResponseCommentVisibleTo(FeedbackQuestionAttributes qn,"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": "                                              FeedbackParticipantType viewerType) {"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": "        if (viewerType \u003d\u003d FeedbackParticipantType.GIVER) {"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": "        return qn.isResponseVisibleTo(viewerType);"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isResponseCommentGiverNameVisibleTo(FeedbackQuestionAttributes qn,"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": "                                                       FeedbackParticipantType viewerType) {"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getResponseCommentVisibilityString(FeedbackQuestionAttributes qn) {"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "-"
        },
        "content": "        String visibilityString \u003d StringHelper.removeEnclosingSquareBrackets(qn.showResponsesTo.toString());"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": "        return StringHelper.isWhiteSpace(visibilityString) ? \"GIVER\" : \"GIVER, \" + visibilityString;"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getResponseCommentVisibilityString(FeedbackResponseCommentAttributes frComment,"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "-"
        },
        "content": "                                                     FeedbackQuestionAttributes qn) {"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "-"
        },
        "content": "        if (frComment.isVisibilityFollowingFeedbackQuestion) {"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": "            return getResponseCommentVisibilityString(qn);"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": "        return StringHelper.removeEnclosingSquareBrackets(frComment.showCommentTo.toString());"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getResponseCommentGiverNameVisibilityString(FeedbackQuestionAttributes qn) {"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": "        return getResponseCommentVisibilityString(qn);"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getResponseCommentGiverNameVisibilityString(FeedbackResponseCommentAttributes frComment,"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": "                                                              FeedbackQuestionAttributes qn) {"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": "        if (frComment.isVisibilityFollowingFeedbackQuestion) {"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": "            return getResponseCommentGiverNameVisibilityString(qn);"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": "        return StringHelper.removeEnclosingSquareBrackets(frComment.showGiverNameTo.toString());"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getPictureUrl(String pictureKey) {"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": "        if (pictureKey \u003d\u003d null || pictureKey.isEmpty()) {"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": "            return Const.SystemParams.DEFAULT_PROFILE_PICTURE_PATH;"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": "        return Const.ActionURIs.STUDENT_PROFILE_PICTURE + \"?\""
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": "               + Const.ParamsNames.BLOB_KEY + \"\u003d\" + pictureKey + \"\u0026\""
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": "               + Const.ParamsNames.USER_ID + \"\u003d\" + account.googleId;"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getRecipientNames(Set\u003cString\u003e recipients, String courseId, String studentEmail, CourseRoster roster) {"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder namesStringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String recipient : recipients) {"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": "            if (i \u003d\u003d recipients.size() - 1 \u0026\u0026 recipients.size() \u003e 1) {"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": "                namesStringBuilder.append(\" and \");"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (i \u003e 0 \u0026\u0026 i \u003c recipients.size() - 1 \u0026\u0026 recipients.size() \u003e 2) {"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": "                namesStringBuilder.append(\", \");"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": "            StudentAttributes student \u003d roster.getStudentForEmail(recipient);"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "-"
        },
        "content": "            if (recipient.equals(studentEmail)) {"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": "                namesStringBuilder.append(\"you\");"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (courseId.equals(recipient)) {"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": "                namesStringBuilder.append(\"all students in this course\");"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (student \u003d\u003d null) {"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": "                namesStringBuilder.append(recipient);"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": "                if (recipients.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": "                    namesStringBuilder.append(student.name + \" (\" + student.team + \", \" + student.email + \")\");"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": "                    namesStringBuilder.append(student.name);"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": "        return namesStringBuilder.toString();"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the list of status messages."
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param statusMessagesToUser a list of status messages that is to be displayed to the user"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setStatusMessagesToUser(List\u003cStatusMessage\u003e statusMessagesToUser) {"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessagesToUser \u003d statusMessagesToUser;"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the list of status messages."
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return a list of status messages that is to be displayed to the user"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cStatusMessage\u003e getStatusMessagesToUser() {"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": "        return statusMessagesToUser;"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalessr": 36,
      "-": 806
    }
  },
  {
    "path": "src/main/java/teammates/ui/template/RecoveryCoursesTable.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalessr"
        },
        "content": "package teammates.ui.template;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalessr"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalessr"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalessr"
        },
        "content": "public class RecoveryCoursesTable {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    private List\u003cRecoveryCoursesTableRow\u003e rows;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public RecoveryCoursesTable() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        rows \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public List\u003cRecoveryCoursesTableRow\u003e getRows() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        return rows;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public void setRows(List\u003cRecoveryCoursesTableRow\u003e rows) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        this.rows \u003d rows;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalessr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalessr": 20
    }
  },
  {
    "path": "src/main/java/teammates/ui/template/RecoveryCoursesTableRow.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalessr"
        },
        "content": "package teammates.ui.template;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalessr"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalessr"
        },
        "content": "public class RecoveryCoursesTableRow {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    private String courseId;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    private String courseName;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    private String createdAtDateString;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    private String createdAtDateStamp;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    private String createdAtFullDateTimeString;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    private String deletedAtDateString;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    private String deletedAtDateStamp;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    private String deletedAtFullDateTimeString;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    private String href;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    private List\u003cElementTag\u003e actions;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public RecoveryCoursesTableRow(String courseIdParam, String courseNameParam,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            String createdAtDateStringParam, String createdAtDateStampParam, String createdAtFullDateTimeStringParam,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            String deletedAtDateStringParam, String deletedAtDateStampParam, String deletedAtFullDateTimeStringParam,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            String href, List\u003cElementTag\u003e actionsParam) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        this.courseId \u003d courseIdParam;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        this.courseName \u003d courseNameParam;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        this.createdAtDateString \u003d createdAtDateStringParam;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        this.createdAtDateStamp \u003d createdAtDateStampParam;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        this.createdAtFullDateTimeString \u003d createdAtFullDateTimeStringParam;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        this.deletedAtDateString \u003d deletedAtDateStringParam;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        this.deletedAtDateStamp \u003d deletedAtDateStampParam;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        this.deletedAtFullDateTimeString \u003d deletedAtFullDateTimeStringParam;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        this.href \u003d href;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        this.actions \u003d actionsParam;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public String getCourseId() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        return courseId;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public String getCourseName() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        return courseName;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public String getCreatedAtDateString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        return createdAtDateString;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public String getCreatedAtDateStamp() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        return createdAtDateStamp;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public String getCreatedAtFullDateTimeString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        return createdAtFullDateTimeString;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public String getDeletedAtDateString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        return deletedAtDateString;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public String getDeletedAtDateStamp() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        return deletedAtDateStamp;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public String getDeletedAtFullDateTimeString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        return deletedAtFullDateTimeString;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public String getHref() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        return href;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public List\u003cElementTag\u003e getActions() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        return actions;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dalessr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalessr": 73
    }
  },
  {
    "path": "src/main/java/teammates/ui/template/StudentFeedbackResultsQuestionWithResponses.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.ui.template;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalessr"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalessr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalessr"
        },
        "content": " * View Model for student/feedbackResults/questionWithResponses.tag"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalessr"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalessr"
        },
        "content": " * \u003cp\u003eManages student feedback results questions details, self-responses tables and others-responses tables separately"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalessr"
        },
        "content": " * for a specific question."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalessr"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class StudentFeedbackResultsQuestionWithResponses {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    private FeedbackResultsQuestionDetails questionDetails;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cFeedbackResultsResponseTable\u003e responseTables;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentFeedbackResultsQuestionWithResponses("
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "                                    FeedbackResultsQuestionDetails questionDetails,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "                                    List\u003cFeedbackResultsResponseTable\u003e responseTables) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        this.questionDetails \u003d questionDetails;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        this.responseTables \u003d responseTables;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResultsQuestionDetails getQuestionDetails() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        return questionDetails;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     * Returns a list of responses which are provided by user himself."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public List\u003cFeedbackResultsResponseTable\u003e getSelfResponseTables() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        return responseTables.stream().filter(responseTable -\u003e responseTable.isGiverNameYou())"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     * Returns a list of responses which are provided by others."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dalessr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public List\u003cFeedbackResultsResponseTable\u003e getOthersResponseTables() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        return responseTables.stream().filter(responseTable -\u003e !responseTable.isGiverNameYou())"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public boolean getIsSelfResponseTablesEmpty() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        return getSelfResponseTables().isEmpty();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalessr": 25,
      "-": 22
    }
  },
  {
    "path": "src/main/webapp/WEB-INF/tags/instructor/course/activeCoursesTable.tag",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c%@ tag trimDirectiveWhitespaces\u003d\"true\" %\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c%@ tag description\u003d\"instructorCourse - Course table\" pageEncoding\u003d\"UTF-8\" %\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c%@ taglib uri\u003d\"http://java.sun.com/jsp/jstl/core\" prefix\u003d\"c\" %\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c%@ attribute name\u003d\"activeCourses\" type\u003d\"teammates.ui.template.ActiveCoursesTable\" required\u003d\"true\" %\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ch2\u003eActive courses\u003c/h2\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ctable class\u003d\"table table-bordered table-striped\" id\u003d\"tableActiveCourses\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cthead class\u003d\"fill-primary\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctr\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth id\u003d\"button_sortcourseid\" class\u003d\"button-sort-none toggle-sort\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        Course ID\u003cspan class\u003d\"icon-sort unsorted\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/th\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth id\u003d\"button_sortcoursename\" class\u003d\"button-sort-none toggle-sort\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        Course Name\u003cspan class\u003d\"icon-sort unsorted\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/th\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth id\u003d\"button_sortcoursecreateddate\" data-toggle-sort-comparator\u003d\"sortDate\" data-toggle-sort-extractor\u003d\"dateStampExtractor\" class\u003d\"button-sort-none toggle-sort\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        Creation Date\u003cspan class\u003d\"icon-sort unsorted\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/th\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        Sections"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/th\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        Teams"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/th\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        Total Students"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/th\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        Total Unregistered"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/th\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth class\u003d\"align-center no-print\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        Action(s)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/th\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/tr\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/thead\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cc:forEach items\u003d\"${activeCourses.rows}\" var\u003d\"activeCourse\" varStatus\u003d\"i\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctr\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd id\u003d\"courseid${i.index}\"\u003e${activeCourse.courseId}\u003c/td\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd id\u003d\"coursename${i.index}\"\u003e${activeCourse.courseName}\u003c/td\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        id\u003d\"coursecreateddate${i.index}\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        data-date-stamp\u003d\"${activeCourse.createdAtDateStamp}\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        data-toggle\u003d\"tooltip\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        data-original-title\u003d\"${activeCourse.createdAtFullDateTimeString}\"\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "          ${activeCourse.createdAtDateString}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd id\u003d\"course-stats-sectionNum-${i.index}\"\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ca class\u003d\"course-stats-link-${i.index}\" oncontextmenu\u003d\"return false;\" href\u003d\"${activeCourse.href}\"\u003eShow\u003c/a\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd id\u003d\"course-stats-teamNum-${i.index}\"\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ca class\u003d\"course-stats-link-${i.index}\" oncontextmenu\u003d\"return false;\" href\u003d\"${activeCourse.href}\"\u003eShow\u003c/a\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd id\u003d\"course-stats-totalStudentNum-${i.index}\"\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ca class\u003d\"course-stats-link-${i.index}\" oncontextmenu\u003d\"return false;\" href\u003d\"${activeCourse.href}\"\u003eShow\u003c/a\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd id\u003d\"course-stats-unregisteredStudentNum-${i.index}\"\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ca class\u003d\"course-stats-link-${i.index}\" oncontextmenu\u003d\"return false;\" href\u003d\"${activeCourse.href}\"\u003eShow\u003c/a\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd class\u003d\"align-center no-print\"\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cc:forEach items\u003d\"${activeCourse.actions}\" var\u003d\"button\"\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ca ${button.attributesToString}\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            ${button.content}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/a\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/c:forEach\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/tr\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/c:forEach\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cc:if test\u003d\"${empty activeCourses.rows}\"\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctr\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/tr\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/c:if\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/table\u003e"
      }
    ],
    "authorContributionMap": {
      "dalessr": 1,
      "-": 80
    }
  },
  {
    "path": "src/main/webapp/WEB-INF/tags/instructor/course/archivedCoursesTable.tag",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c%@ tag trimDirectiveWhitespaces\u003d\"true\" %\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c%@ tag description\u003d\"instructorCourse - Course table\" pageEncoding\u003d\"UTF-8\" %\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c%@ taglib uri\u003d\"http://java.sun.com/jsp/jstl/core\" prefix\u003d\"c\" %\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c%@ taglib prefix\u003d\"fn\" uri\u003d\"http://java.sun.com/jsp/jstl/functions\" %\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c%@ attribute name\u003d\"archivedCourses\" type\u003d\"teammates.ui.template.ArchivedCoursesTable\" required\u003d\"true\" %\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c%@ attribute name\u003d\"activeCourses\" type\u003d\"teammates.ui.template.ActiveCoursesTable\" required\u003d\"true\" %\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalessr"
        },
        "content": "\u003ch2 class\u003d\"text-muted\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalessr"
        },
        "content": "  \u003cspan class\u003d\"glyphicon glyphicon-floppy-disk\"\u003e\u003c/span\u003e Archived courses"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalessr"
        },
        "content": "\u003c/h2\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ctable class\u003d\"table table-bordered table-striped\" id\u003d\"tableArchivedCourses\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cthead\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    \u003ctr class\u003d\"fill-info\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth id\u003d\"button_sortid\" class\u003d\"button-sort-none toggle-sort\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        Course ID\u003cspan class\u003d\"icon-sort unsorted\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/th\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003cth id\u003d\"button_sortname\" class\u003d\"button-sort-none toggle-sort\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        Course Name\u003cspan class\u003d\"icon-sort unsorted\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/th\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth id\u003d\"button_sortcoursecreateddate\" data-toggle-sort-comparator\u003d\"sortDate\" data-toggle-sort-extractor\u003d\"dateStampExtractor\" class\u003d\"button-sort-none toggle-sort\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        Creation Date\u003cspan class\u003d\"icon-sort unsorted\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/th\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth class\u003d\"align-center no-print\"\u003eAction(s)\u003c/th\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/tr\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/thead\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cc:forEach items\u003d\"${archivedCourses.rows}\" var\u003d\"archivedCourse\" varStatus\u003d\"i\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctr\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd id\u003d\"courseid${i.index + fn:length(activeCourses.rows)}\"\u003e${archivedCourse.courseId}\u003c/td\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd id\u003d\"coursename${i.index + fn:length(activeCourses.rows)}\"\u003e${archivedCourse.courseName}\u003c/td\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        id\u003d\"coursecreateddate${i.index + fn:length(activeCourses.rows)}\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        data-date-stamp\u003d\"${archivedCourse.createdAtDateStamp}\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        data-toggle\u003d\"tooltip\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        data-original-title\u003d\"${archivedCourse.createdAtFullDateTimeString}\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "          ${archivedCourse.createdAtDateString}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/td\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd class\u003d\"align-center no-print\"\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cc:forEach items\u003d\"${archivedCourse.actions}\" var\u003d\"button\"\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ca ${button.attributesToString}\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            ${button.content}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/a\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/c:forEach\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/tr\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/c:forEach\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/table\u003e"
      }
    ],
    "authorContributionMap": {
      "dalessr": 5,
      "-": 41
    }
  },
  {
    "path": "src/main/webapp/WEB-INF/tags/instructor/course/recoveryCoursePanel.tag",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalessr"
        },
        "content": "\u003c%@ tag trimDirectiveWhitespaces\u003d\"true\" %\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalessr"
        },
        "content": "\u003c%@ tag description\u003d\"instructorCourses - Recovery courses table panel\" pageEncoding\u003d\"UTF-8\" %\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalessr"
        },
        "content": "\u003c%@ taglib uri\u003d\"http://java.sun.com/jsp/jstl/core\" prefix\u003d\"c\" %\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalessr"
        },
        "content": "\u003c%@ taglib uri\u003d\"http://java.sun.com/jsp/jstl/functions\" prefix\u003d\"fn\" %\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalessr"
        },
        "content": "\u003c%@ taglib tagdir\u003d\"/WEB-INF/tags/instructor/course\" prefix\u003d\"course\" %\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalessr"
        },
        "content": "\u003c%@ tag import\u003d\"teammates.common.util.Const\" %\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalessr"
        },
        "content": "\u003ch2 class\u003d\"text-muted\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalessr"
        },
        "content": "  \u003cspan class\u003d\"glyphicon glyphicon-trash\"\u003e\u003c/span\u003e Deleted courses"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalessr"
        },
        "content": "\u003c/h2\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalessr"
        },
        "content": "\u003cdiv class\u003d\"panel\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalessr"
        },
        "content": "  \u003cdiv class\u003d\"panel-heading ajax_submit fill-default\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    \u003cdiv class\u003d\"pull-right margin-left-7px\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003cspan class\u003d\"glyphicon ajax_submit glyphicon-chevron-down\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    \u003ca class\u003d\"btn btn-default btn-xs pull-right pull-down margin-left-7px course-delete-all-link color-negative\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalessr"
        },
        "content": "       id\u003d\"btn-course-deleteall\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalessr"
        },
        "content": "       href\u003d\"${data.instructorCourseDeleteAllRecoveryCoursesLink}\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalessr"
        },
        "content": "       title\u003d\"\u003c%\u003d Const.Tooltips.COURSE_DELETE_ALL %\u003e\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalessr"
        },
        "content": "       data-toggle\u003d\"tooltip\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalessr"
        },
        "content": "       data-placement\u003d\"top\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003cspan class\u003d\"glyphicon glyphicon-remove\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003cstrong\u003eDelete All\u003c/strong\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    \u003c/a\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    \u003ca class\u003d\"btn btn-default btn-xs pull-right pull-down\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalessr"
        },
        "content": "       id\u003d\"btn-course-restoreall\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalessr"
        },
        "content": "       href\u003d\"${data.instructorCourseRestoreAllRecoveryCoursesLink}\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalessr"
        },
        "content": "       title\u003d\"\u003c%\u003d Const.Tooltips.COURSE_RESTORE_ALL %\u003e\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalessr"
        },
        "content": "       data-toggle\u003d\"tooltip\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalessr"
        },
        "content": "       data-placement\u003d\"top\"\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003cspan class\u003d\"glyphicon glyphicon-ok\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003cstrong\u003eRestore All\u003c/strong\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    \u003c/a\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    \u003cstrong class\u003d\"ajax_submit\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      Recycle Bin"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    \u003c/strong\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dalessr"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dalessr"
        },
        "content": "  \u003cdiv class\u003d\"panel-collapse collapse\"\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    \u003cdiv class\u003d\"panel-body padding-0\"\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003ccourse:recoveryCoursesTable recoveryCourses\u003d\"${data.recoveryCourses}\"/\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dalessr"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dalessr"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "dalessr": 43
    }
  },
  {
    "path": "src/main/webapp/WEB-INF/tags/instructor/course/recoveryCoursesTable.tag",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalessr"
        },
        "content": "\u003c%@ tag trimDirectiveWhitespaces\u003d\"true\" %\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalessr"
        },
        "content": "\u003c%@ tag description\u003d\"instructorCourse - Recovery courses table\" pageEncoding\u003d\"UTF-8\" %\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalessr"
        },
        "content": "\u003c%@ taglib uri\u003d\"http://java.sun.com/jsp/jstl/core\" prefix\u003d\"c\" %\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalessr"
        },
        "content": "\u003c%@ taglib uri\u003d\"http://java.sun.com/jsp/jstl/functions\" prefix\u003d\"fn\" %\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalessr"
        },
        "content": "\u003c%@ attribute name\u003d\"recoveryCourses\" type\u003d\"teammates.ui.template.RecoveryCoursesTable\" required\u003d\"true\" %\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalessr"
        },
        "content": "\u003cc:set var\u003d\"tableHeaderClass\" value\u003d\"background-color-medium-gray text-color-gray font-weight-normal\" /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalessr"
        },
        "content": "\u003ctable class\u003d\"table table-bordered table-striped margin-0\" id\u003d\"tableRecoveryCourses\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalessr"
        },
        "content": "  \u003cthead class\u003d\"${tableHeaderClass}\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    \u003ctr\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003cth id\u003d\"btn_sortid\" class\u003d\"button-sort-none toggle-sort\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        Course ID\u003cspan class\u003d\"icon-sort unsorted\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003c/th\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003cth id\u003d\"btn_sortname\" class\u003d\"button-sort-none toggle-sort\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        Course Name\u003cspan class\u003d\"icon-sort unsorted\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003c/th\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003cth id\u003d\"btn_sortcoursecreateddate\" data-toggle-sort-comparator\u003d\"sortDate\" data-toggle-sort-extractor\u003d\"dateStampExtractor\" class\u003d\"button-sort-none toggle-sort\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        Creation Date\u003cspan class\u003d\"icon-sort unsorted\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003c/th\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003cth id\u003d\"btn_sortcoursedeleteddate\" data-toggle-sort-comparator\u003d\"sortDate\" data-toggle-sort-extractor\u003d\"dateStampExtractor\" class\u003d\"button-sort-none toggle-sort\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        Deletion Date\u003cspan class\u003d\"icon-sort unsorted\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003c/th\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003cth class\u003d\"align-center no-print\"\u003eAction(s)\u003c/th\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    \u003c/tr\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalessr"
        },
        "content": "  \u003c/thead\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalessr"
        },
        "content": "  \u003cc:forEach items\u003d\"${recoveryCourses.rows}\" var\u003d\"recoveryCourse\" varStatus\u003d\"i\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    \u003ctr\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003ctd id\u003d\"recoverycourseid${i.index + fn:length(recoveryCourses.rows)}\"\u003e${recoveryCourse.courseId}\u003c/td\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003ctd id\u003d\"recoverycoursename${i.index + fn:length(recoveryCourses.rows)}\"\u003e${recoveryCourse.courseName}\u003c/td\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003ctd"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dalessr"
        },
        "content": "          id\u003d\"recoverycoursecreateddate${i.index + fn:length(recoveryCourses.rows)}\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dalessr"
        },
        "content": "          data-date-stamp\u003d\"${recoveryCourse.createdAtDateStamp}\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalessr"
        },
        "content": "          data-toggle\u003d\"tooltip\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dalessr"
        },
        "content": "          data-original-title\u003d\"${recoveryCourse.createdAtFullDateTimeString}\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dalessr"
        },
        "content": "          ${recoveryCourse.createdAtDateString}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003ctd"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dalessr"
        },
        "content": "          id\u003d\"recoverycoursedeleteddate${i.index + fn:length(recoveryCourses.rows)}\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dalessr"
        },
        "content": "          data-date-stamp\u003d\"${recoveryCourse.deletedAtDateStamp}\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dalessr"
        },
        "content": "          data-toggle\u003d\"tooltip\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dalessr"
        },
        "content": "          data-original-title\u003d\"${recoveryCourse.deletedAtFullDateTimeString}\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dalessr"
        },
        "content": "          ${recoveryCourse.deletedAtDateString}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003ctd class\u003d\"align-center no-print\"\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        \u003cc:forEach items\u003d\"${recoveryCourse.actions}\" var\u003d\"button\"\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dalessr"
        },
        "content": "          \u003ca ${button.attributesToString}\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dalessr"
        },
        "content": "              ${button.content}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dalessr"
        },
        "content": "          \u003c/a\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        \u003c/c:forEach\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    \u003c/tr\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dalessr"
        },
        "content": "  \u003c/c:forEach\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dalessr"
        },
        "content": "\u003c/table\u003e"
      }
    ],
    "authorContributionMap": {
      "dalessr": 53
    }
  },
  {
    "path": "src/main/webapp/WEB-INF/tags/instructor/navBar.tag",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c%@ tag trimDirectiveWhitespaces\u003d\"true\" %\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c%@ tag description\u003d\"Instructor Navigation Bar\" pageEncoding\u003d\"UTF-8\" %\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c%@ tag import\u003d\"teammates.common.util.Const\" %\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c%@ taglib uri\u003d\"http://java.sun.com/jsp/jstl/core\" prefix\u003d\"c\" %\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c%@ taglib uri\u003d\"http://java.sun.com/jsp/jstl/functions\" prefix\u003d\"fn\" %\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c%@ taglib tagdir\u003d\"/WEB-INF/tags\" prefix\u003d\"t\" %\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"navbar navbar-inverse navbar-fixed-top\" role\u003d\"navigation\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"container\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"navbar-header\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton type\u003d\"button\" class\u003d\"navbar-toggle\" data-toggle\u003d\"collapse\" data-target\u003d\"#contentLinks\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan class\u003d\"sr-only\"\u003eToggle navigation\u003c/span\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan class\u003d\"icon-bar\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan class\u003d\"icon-bar\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan class\u003d\"icon-bar\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/button\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ct:teammatesLogo/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"collapse navbar-collapse\" id\u003d\"contentLinks\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cul class\u003d\"nav navbar-nav\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli\u003cc:if test\u003d\"${fn:contains(data.getClass(), \u0027Home\u0027)}\"\u003e class\u003d\"active\"\u003c/c:if\u003e\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ca class\u003d\u0027nav home\u0027 data-link\u003d\"instructorHome\" href\u003d\"${data.instructorHomeLink}\"\u003eHome\u003c/a\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/li\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli\u003cc:if test\u003d\"${fn:contains(data.getClass(), \u0027InstructorCourse\u0027) \u0026\u0026 !fn:contains(data.getClass(), \u0027CourseStudent\u0027)}\"\u003e class\u003d\"active\"\u003c/c:if\u003e\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ca class\u003d\u0027nav courses\u0027 data-link\u003d\"instructorCourse\" href\u003d\"${data.instructorCoursesLink}\"\u003eCourses\u003c/a\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/li\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli\u003cc:if test\u003d\"${fn:contains(data.getClass(), \u0027Feedback\u0027)}\"\u003e class\u003d\"active\"\u003c/c:if\u003e\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ca class\u003d\u0027nav evaluations\u0027 data-link\u003d\"instructorEval\" href\u003d\"${data.instructorFeedbackSessionsLink}\"\u003eSessions\u003c/a\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/li\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli\u003cc:if test\u003d\"${fn:contains(data.getClass(), \u0027Student\u0027)}\"\u003e class\u003d\"active\"\u003c/c:if\u003e\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ca class\u003d\u0027nav students\u0027 data-link\u003d\"instructorStudent\" href\u003d\"${data.instructorStudentListLink}\"\u003eStudents\u003c/a\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/li\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli\u003cc:if test\u003d\"${fn:contains(data.getClass(), \u0027Search\u0027)}\"\u003e class\u003d\"active\"\u003c/c:if\u003e\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalessr"
        },
        "content": "          \u003ca class\u003d\u0027nav search\u0027 data-link\u003d\"instructorSearch\" href\u003d\"${data.instructorSearchLink}\"\u003eSearch\u003c/a\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/li\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ca class\u003d\"nav help\" href\u003d\"/instructorHelp.jsp\" target\u003d\"_blank\" rel\u003d\"noopener noreferrer\"\u003eHelp\u003c/a\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/li\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/ul\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cul class\u003d\"nav navbar-nav pull-right\"\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ca id\u003d\"btnLogout\" class\u003d\"nav logout\" href\u003d\"\u003c%\u003d Const.ActionURIs.LOGOUT %\u003e\"\u003eLogout"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            (\u003cspan class\u003d\"text-info\" data-toggle\u003d\"tooltip\" title\u003d\"${data.account.googleId}\" data-placement\u003d\"bottom\"\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "              ${data.account.truncatedGoogleId}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/a\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/li\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/ul\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "dalessr": 1,
      "-": 50
    }
  },
  {
    "path": "src/main/webapp/WEB-INF/tags/student/feedbackResults/questionWithResponses.tag",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c%@ tag trimDirectiveWhitespaces\u003d\"true\" %\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c%@ tag description\u003d\"studentFeedbackResults.jsp - Student feedback results question with responses\" pageEncoding\u003d\"UTF-8\" %\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c%@ taglib uri\u003d\"http://java.sun.com/jsp/jstl/core\" prefix\u003d\"c\" %\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c%@ taglib tagdir\u003d\"/WEB-INF/tags/student/feedbackResults\" prefix\u003d\"feedbackResults\" %\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c%@ attribute name\u003d\"questionWithResponses\" type\u003d\"teammates.ui.template.StudentFeedbackResultsQuestionWithResponses\" required\u003d\"true\" %\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"panel panel-default\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"panel-heading\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c%-- Note: When an element has class text-preserve-space, do not insert HTML spaces --%\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ch4\u003eQuestion ${questionWithResponses.questionDetails.questionIndex}: \u003cspan class\u003d\"text-preserve-space\"\u003e\u003cc:out value\u003d\"${questionWithResponses.questionDetails.questionText}\"/\u003e${questionWithResponses.questionDetails.additionalInfo}\u003c/span\u003e\u003c/h4\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    ${questionWithResponses.questionDetails.questionResultStatistics}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cc:if test\u003d\"${questionWithResponses.questionDetails.individualResponsesShownToStudents}\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003cc:forEach items\u003d\"${questionWithResponses.othersResponseTables}\" var\u003d\"othersResponseTable\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        \u003cfeedbackResults:responseTable responseTable\u003d\"${othersResponseTable}\"/\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/c:forEach\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003cc:if test\u003d\"${!questionWithResponses.isSelfResponseTablesEmpty}\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        \u003ch5\u003e\u003cb\u003eYour own responses:\u003c/b\u003e\u003c/h5\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        \u003cc:forEach items\u003d\"${questionWithResponses.selfResponseTables}\" var\u003d\"selfResponseTable\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalessr"
        },
        "content": "          \u003cfeedbackResults:responseTable responseTable\u003d\"${selfResponseTable}\"/\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        \u003c/c:forEach\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003c/c:if\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/c:if\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbr\u003e"
      }
    ],
    "authorContributionMap": {
      "dalessr": 12,
      "-": 21
    }
  },
  {
    "path": "src/main/webapp/dev/js/common/instructor.js",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    showModalConfirmation,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./bootboxWrapper\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    scrollToElement,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./scrollTo\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    BootstrapContextualColors,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    ParamsNames,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./const\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    setStatusMessage,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./statusMessage\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    countRemainingCharactersOnInput,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./countRemainingCharactersOnInput\u0027;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    TimeZone,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./timezone\u0027;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "/*"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": " * This JavaScript file is included in all instructor pages. Functions here"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " * should be common to some/all instructor pages."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "// -----------------------------------------------------------------------------"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "function setupFsCopyModal() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    $(\u0027#fsCopyModal\u0027).on(\u0027show.bs.modal\u0027, (event) \u003d\u003e {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        const button \u003d $(event.relatedTarget); // Button that triggered the modal"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        const actionlink \u003d button.data(\u0027actionlink\u0027);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        const courseid \u003d button.data(\u0027courseid\u0027);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        const fsname \u003d button.data(\u0027fsname\u0027);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        const appUrl \u003d window.location.origin;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        const currentPage \u003d window.location.href.substring(appUrl.length); // use the page\u0027s relative URL"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        $.ajax({"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            type: \u0027GET\u0027,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            url: `${actionlink}\u0026courseid\u003d${encodeURIComponent(courseid)}\u0026fsname\u003d${encodeURIComponent(fsname)}`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                    + `\u0026currentPage\u003d${encodeURIComponent(currentPage)}`,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            beforeSend() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                $(\u0027#fscopy_submit\u0027).prop(\u0027disabled\u0027, true);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                $(\u0027#courseList\u0027).html(\u0027Loading possible destination courses. Please wait ...\u003cbr\u003e\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                                      + \"\u003cimg class\u003d\u0027margin-center-horizontal\u0027 src\u003d\u0027/images/ajax-loader.gif\u0027/\u003e\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            },"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            error() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                $(\u0027#courseList\u0027).html(\"\u003cp id\u003d\u0027fs-copy-modal-error\u0027\u003eError retrieving course list.\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                                      + \u0027Please close the dialog window and try again.\u003c/p\u003e\u0027);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            },"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            success(data) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                $(\u0027#courseList\u0027).html(data);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                // If the user alt-clicks, the form does not send any parameters and results in an error."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                // Prevent default form submission and submit using jquery."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                $(\u0027#fscopy_submit\u0027).off(\u0027click\u0027)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                        .on(\u0027click\u0027, (e) \u003d\u003e {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                            $(\u0027#fscopy_submit\u0027).prop(\u0027disabled\u0027, true);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                            e.preventDefault();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                            $(\u0027#fscopy_submit\u0027).closest(\u0027form\u0027).submit();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                        });"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                $(\u0027#fscopy_submit\u0027).prop(\u0027disabled\u0027, false);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                countRemainingCharactersOnInput(ParamsNames.COPIED_FEEDBACK_SESSION_NAME);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            },"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    $(\u0027#instructorCopyModalForm\u0027).submit(function (e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        e.preventDefault();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        const $this \u003d $(this);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        const $copyModalStatusMessage \u003d $(\u0027#feedback-copy-modal-status\u0027);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        $.ajax({"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            type: \u0027POST\u0027,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            url: $this.prop(\u0027action\u0027),"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            data: $this.serialize(),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            beforeSend() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                $copyModalStatusMessage.removeClass(\u0027alert alert-danger\u0027);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                $copyModalStatusMessage.html(\u0027\u003cimg src\u003d\"/images/ajax-loader.gif\" class\u003d\"margin-center-horizontal\"\u003e\u0027);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            },"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            error() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                $copyModalStatusMessage.addClass(\u0027alert alert-danger\u0027);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                $copyModalStatusMessage.text(\u0027There was an error during submission. \u0027"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 + \u0027Please close the dialog window and try again.\u0027);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            },"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            success(data) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                const isError \u003d data.errorMessage !\u003d\u003d \u0027\u0027;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!isError \u0026\u0026 data.redirectUrl) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                    window.location.href \u003d data.redirectUrl;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                    $copyModalStatusMessage.addClass(\u0027alert alert-danger\u0027);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                    $copyModalStatusMessage.text(data.errorMessage);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                    $(\u0027#fscopy_submit\u0027).prop(\u0027disabled\u0027, false);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            },"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "function initializeTimeZoneOptions($selectElement) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    if (typeof moment !\u003d\u003d \u0027undefined\u0027) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        TimeZone.prepareTimeZoneInput($selectElement);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        const existingTimeZone \u003d $selectElement.data(\u0027timeZone\u0027);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        if (existingTimeZone) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            TimeZone.updateTimeZone($selectElement, existingTimeZone);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            TimeZone.autoDetectAndUpdateTimeZone($selectElement);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        $(\u0027#auto-detect-time-zone\u0027).on(\u0027click\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            TimeZone.autoDetectAndUpdateTimeZone($selectElement);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "// Student Profile Picture"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "// --------------------------------------------------------------------------"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": " * updates all the student names that show profile picture"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": " * on hover with the resolved link after one instance of the name"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": " * has been loaded\u003cbr\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": " * Helps to avoid clicking view photo when hovering over names of"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": " * students whose picture has already been loaded elsewhere in the page"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": " * @param link"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": " * @param resolvedLink"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "function updateHoverShowPictureEvents(actualLink, resolvedLink) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    $(`.profile-pic-icon-hover[data-link\u003d\"${actualLink}\"]`)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            .attr(\u0027data-link\u0027, \u0027\u0027)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            .off(\u0027mouseenter mouseleave\u0027)"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            .popover(\u0027destroy\u0027)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            .popover({"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "                html: true,"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "                trigger: \u0027manual\u0027,"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "                placement: \u0027top\u0027,"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "                content() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "                    return `\u003cimg class\u003d\"profile-pic\" src\u003d\"${resolvedLink}\"\u003e`;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "                },"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            })"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            .mouseenter(function () {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "                $(this).popover(\u0027show\u0027);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "                $(this).siblings(\u0027.popover\u0027).on(\u0027mouseleave\u0027, function () {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "                    $(this).siblings(\u0027.profile-pic-icon-hover\u0027).popover(\u0027hide\u0027);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "                });"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "                $(this).mouseleave(function () {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "                    // this is so that the user can hover over the"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                    // pop-over photo without hiding the photo"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "                    setTimeout((obj) \u003d\u003e {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "                        if ($(obj).siblings(\u0027.popover\u0027).find(\u0027:hover\u0027).length \u003d\u003d\u003d 0) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "                            $(obj).popover(\u0027hide\u0027);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "                    }, 200, this);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "                });"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            })"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            .children(\u0027img[src\u003d\"\"]\u0027)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            .attr(\u0027src\u0027, resolvedLink);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": " * @param elements:"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": " * identifier that points to elements with"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": " * class: student-profile-pic-view-link"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "function bindStudentPhotoLink(elements) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    $(elements).on(\u0027click\u0027, function (e) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        const event \u003d e || window.event;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        event.cancelBubble \u003d true;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        if (event.stopPropagation) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            event.stopPropagation();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        const actualLink \u003d $(this).parent().attr(\u0027data-link\u0027);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        const $loadingImage \u003d $(\u0027\u003cimg\u003e\u0027).attr(\u0027src\u0027, \u0027/images/ajax-loader.gif\u0027)"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "                .addClass(\u0027center-block margin-top-7px\u0027);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        $(this).siblings(\u0027img\u0027).attr(\u0027src\u0027, actualLink).load(function () {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "            const resolvedLink \u003d $(this).attr(\u0027src\u0027);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "            $loadingImage.remove();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "            $(this).removeClass(\u0027hidden\u0027)"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "                    .parent().attr(\u0027data-link\u0027, \u0027\u0027)"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "                    .popover({"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "                        html: true,"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "                        trigger: \u0027manual\u0027,"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "                        placement: \u0027top\u0027,"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "                        content() {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "                            return `\u003cimg class\u003d\"profile-pic\" src\u003d\"${resolvedLink}\"\u003e`;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "                        },"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "                    })"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "                    .mouseenter(function () {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "                        $(this).popover(\u0027show\u0027);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "                        $(this).siblings(\u0027.popover\u0027).on(\u0027mouseleave\u0027, function () {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "                            $(this).siblings(\u0027.profile-pic-icon-click\u0027).popover(\u0027hide\u0027);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "                        });"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "                        $(this).mouseleave(function () {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "                            // this is so that the user can hover over the"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "                            // pop-over photo without hiding the photo"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "                            setTimeout((obj) \u003d\u003e {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "                                if ($(obj).siblings(\u0027.popover\u0027).find(\u0027:hover\u0027).length \u003d\u003d\u003d 0) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "                                    $(obj).popover(\u0027hide\u0027);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "                            }, 200, this);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "                        });"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "                    });"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "            updateHoverShowPictureEvents(actualLink, resolvedLink);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        const $imageCell \u003d $(this).closest(\u0027td\u0027);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        $(this).remove();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        $imageCell.append($loadingImage);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": " * completes the loading cycle for showing profile picture"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": " * for a onhover event"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": " * @param link"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": " * @param resolvedLink"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "function loadProfilePictureForHoverEvent(obj) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "    obj.children(\u0027img\u0027)[0].src \u003d obj.attr(\u0027data-link\u0027);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    const $loadingImage \u003d $(\u0027\u003cimg\u003e\u0027).attr(\u0027src\u0027, \u0027/images/ajax-loader.gif\u0027);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    // load the pictures in all similar links"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "    obj.children(\u0027img\u0027).load(function () {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "        const actualLink \u003d $(this).parent().attr(\u0027data-link\u0027);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        const resolvedLink \u003d $(this).attr(\u0027src\u0027);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        $loadingImage.remove();"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "        updateHoverShowPictureEvents(actualLink, resolvedLink);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "        // this is to show the picture immediately for the one"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        // the user just clicked on"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        $(this).parent()"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "                .popover(\u0027show\u0027)"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "                // this is to handle the manual hide action of the popover"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "                .siblings(\u0027.popover\u0027)"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "                .on(\u0027mouseleave\u0027, function () {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "                    $(this).siblings(\u0027.profile-pic-icon-hover\u0027).popover(\u0027hide\u0027);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "                });"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "    obj.popover(\u0027destroy\u0027).popover({"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "        html: true,"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "        trigger: \u0027manual\u0027,"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        placement: \u0027top\u0027,"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "        content() {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "            return $loadingImage.get(0).outerHTML;"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "        },"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "    obj.popover(\u0027show\u0027);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": " * @param elements:"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": " * identifier that points to elements with"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": " * class: profile-pic-icon-hover"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "function bindStudentPhotoHoverLink(elements) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "    $(elements)"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "            .mouseenter(function () {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "                $(this).popover(\u0027show\u0027);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "                $(this).siblings(\u0027.popover\u0027).on(\u0027mouseleave\u0027, function () {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "                    $(this).siblings(\u0027.profile-pic-icon-hover\u0027).popover(\u0027hide\u0027);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "                });"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "            })"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "            .mouseleave(function () {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "                // this is so that the user can hover over the"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "                // pop-over without accidentally hiding the \u0027view photo\u0027 link"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "                setTimeout((obj) \u003d\u003e {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "                    if ($(obj).siblings(\u0027.popover\u0027).find(\u0027.profile-pic\u0027).length !\u003d\u003d 0"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "                    || $(obj).siblings(\u0027.popover\u0027).find(\u0027:hover\u0027).length \u003d\u003d\u003d 0) {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "                        $(obj).popover(\u0027hide\u0027);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "                }, 200, this);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "    // bind the default popover event for the"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "    // show picture onhover events"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "    $(elements).popover({"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "        html: true,"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "        trigger: \u0027manual\u0027,"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "        placement: \u0027top\u0027,"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "        content() {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "            $(\u0027body\u0027).on(\u0027click\u0027, \u0027.cursor-pointer\u0027, (event) \u003d\u003e {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "                const toLoad \u003d $(event.currentTarget).closest(\u0027.popover\u0027).siblings(\u0027.profile-pic-icon-hover\u0027);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "                loadProfilePictureForHoverEvent(toLoad);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "            return \u0027\u003ca class\u003d\"cursor-pointer\"\u003eView Photo\u003c/a\u003e\u0027;"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "        },"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "function bindDeleteButtons() {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "    $(\u0027body\u0027).on(\u0027click\u0027, \u0027.session-delete-for-test\u0027, (event) \u003d\u003e {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "        event.preventDefault();"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "        const $button \u003d $(event.currentTarget);"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "        const courseId \u003d $button.data(\u0027courseid\u0027);"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "        const feedbackSessionName \u003d $button.data(\u0027fsname\u0027);"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        const messageText \u003d `Are you sure you want to delete the feedback session ${feedbackSessionName} in ${courseId}?`;"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        const okCallback \u003d function () {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "            window.location \u003d $button.attr(\u0027href\u0027);"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "        showModalConfirmation(\u0027Confirm deleting feedback session\u0027, messageText, okCallback, null,"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "                null, null, BootstrapContextualColors.DANGER);"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "dalessr"
        },
        "content": "function bindCourseMoveToRecoveryLinks() {"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    $(\u0027body\u0027).on(\u0027click\u0027, \u0027.course-move-to-recovery-link\u0027, (event) \u003d\u003e {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        event.preventDefault();"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        const $clickedLink \u003d $(event.currentTarget);"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        const messageText \u003d `Are you sure you want to delete the course: ${$clickedLink.data(\u0027courseId\u0027)}? `"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                + \u0027This action can be reverted by going to the \"courses\" tab and restoring the desired course(s).\u0027;"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        const okCallback \u003d function () {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            window.location \u003d $clickedLink.attr(\u0027href\u0027);"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        };"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        showModalConfirmation(\u0027Confirm moving course to recovery\u0027, messageText, okCallback, null,"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                null, null, BootstrapContextualColors.WARNING);"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    });"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "dalessr"
        },
        "content": "}"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "function bindCourseDeleteLinks() {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "    $(\u0027body\u0027).on(\u0027click\u0027, \u0027.course-delete-link\u0027, (event) \u003d\u003e {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "        event.preventDefault();"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "        const $clickedLink \u003d $(event.currentTarget);"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        const messageText \u003d `Are you sure you want to permanently delete the course: ${$clickedLink.data(\u0027courseId\u0027)}? `"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "                          + \u0027This operation will delete all students and sessions in this course. \u0027"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "                          + \u0027All instructors of this course will not be able to access it hereafter as well.\u0027;"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "        const okCallback \u003d function () {"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "            window.location \u003d $clickedLink.attr(\u0027href\u0027);"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "        showModalConfirmation(\u0027Confirm deleting course\u0027, messageText, okCallback, null,"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "                null, null, BootstrapContextualColors.DANGER);"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "dalessr"
        },
        "content": "function bindCourseDeleteAllLinks() {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    $(\u0027body\u0027).on(\u0027click\u0027, \u0027.course-delete-all-link\u0027, (event) \u003d\u003e {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        event.preventDefault();"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        const $clickedLink \u003d $(event.currentTarget);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        const messageText \u003d \u0027Are you sure you want to permanently delete all the courses? \u0027"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                + \u0027This operation will delete all students and sessions in these courses. \u0027"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                + \u0027All instructors of these courses will not be able to access them hereafter as well.\u0027;"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        const okCallback \u003d function () {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            window.location \u003d $clickedLink.attr(\u0027href\u0027);"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        };"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        showModalConfirmation(\u0027Confirm deleting all courses\u0027, messageText, okCallback, null,"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                null, null, BootstrapContextualColors.DANGER);"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    });"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "dalessr"
        },
        "content": "}"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "function bindSessionDeleteLinks() {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "    $(\u0027body\u0027).on(\u0027click\u0027, \u0027#fsDeleteLink\u0027, (event) \u003d\u003e {"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "        event.preventDefault();"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "        const $clickedLink \u003d $(event.currentTarget);"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "        const messageText \u003d \u0027Are you sure you want to delete the feedback session \u0027"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "                + `${$clickedLink.data(\u0027feedbackSessionName\u0027)} in ${$clickedLink.data(\u0027courseId\u0027)}?`;"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "        const okCallback \u003d function () {"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "            window.location \u003d $clickedLink.attr(\u0027href\u0027);"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "        showModalConfirmation(\u0027Confirm deleting feedback session\u0027, messageText, okCallback, null,"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "                null, null, BootstrapContextualColors.DANGER);"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "function attachEventToSendInviteLink() {"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "    $(document).on(\u0027click\u0027, \u0027.course-student-remind-link\u0027, (event) \u003d\u003e {"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "        event.preventDefault();"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "        const $clickedLink \u003d $(event.currentTarget);"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "        const messageText \u003d \u0027Usually, there is no need to use this feature because TEAMMATES sends an automatic \u0027"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "                + \u0027invite to students at the opening time of each session. Send a join request anyway?\u0027;"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "        const okCallback \u003d function okCallback() {"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "            $.get($clickedLink.attr(\u0027href\u0027), () \u003d\u003e {"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "                const studentEmail \u003d $clickedLink.parent().siblings(\"td[id|\u003d\u0027studentemail\u0027]\").html().trim();"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "                const message \u003d `An email has been sent to ${studentEmail}`;"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "                setStatusMessage(message, \u0027success\u0027);"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "        showModalConfirmation(\u0027Confirm sending join request\u0027, messageText, okCallback, null,"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "                null, null, BootstrapContextualColors.INFO);"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "function attachEventToDeleteStudentLink() {"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "    $(document).on(\u0027click\u0027, \u0027.course-student-delete-link\u0027, (event) \u003d\u003e {"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "        event.preventDefault();"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "        const $clickedLink \u003d $(event.currentTarget);"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "        const messageText \u003d `Are you sure you want to remove ${$clickedLink.data(\u0027studentName\u0027)}`"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "                + ` from the course ${$clickedLink.data(\u0027courseId\u0027)}?`;"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "        const okCallback \u003d function () {"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "            window.location \u003d $clickedLink.attr(\u0027href\u0027);"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "        showModalConfirmation(\u0027Confirm deletion\u0027, messageText, okCallback, null,"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "                null, null, BootstrapContextualColors.DANGER);"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "function sendRemindersToStudents(urlLink) {"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "    const $statusMessage \u003d $(\u0027#statusMessagesToUser\u0027);"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "    $.ajax({"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "        type: \u0027POST\u0027,"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "        url: urlLink,"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "        beforeSend() {"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "            $statusMessage.html(\u0027\u003cimg src\u003d\"/images/ajax-loader.gif\"\u003e\u0027);"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "            $statusMessage.css(\u0027display\u0027, \u0027block\u0027);"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "        },"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "        error() {"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "            $statusMessage.html(\u0027An error has occurred while sending reminder. Please try again.\u0027);"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "        },"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "        success(data) {"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "            const statusToUser \u003d $(data).find(\u0027#statusMessagesToUser\u0027).html();"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "            $statusMessage.html(statusToUser);"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "            scrollToElement($statusMessage[0], { duration: 1000 });"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "        },"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "function resendPublishedEmailToStudents(urlLink) {"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "    const $statusMessage \u003d $(\u0027#statusMessagesToUser\u0027);"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "    $.ajax({"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "        type: \u0027POST\u0027,"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "        url: urlLink,"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "        beforeSend() {"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "            $statusMessage.html(\u0027\u003cimg src\u003d\"/images/ajax-loader.gif\"\u003e\u0027);"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "            $statusMessage.css(\u0027display\u0027, \u0027block\u0027);"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "        },"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "        error() {"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "            $statusMessage.html(\u0027An error has occurred while requesting for emails to be resent. Please try again.\u0027);"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "        },"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "        success(data) {"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "            const statusToUser \u003d $(data).find(\u0027#statusMessagesToUser\u0027).html();"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "            $statusMessage.html(statusToUser);"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "            scrollToElement($statusMessage[0], { duration: 1000 });"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "        },"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "function attachEventToDeleteAllStudentLink() {"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "    $(\u0027body\u0027).on(\u0027click\u0027, \u0027.course-student-delete-all-link\u0027, (event) \u003d\u003e {"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "        event.preventDefault();"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "        const $clickedLink \u003d $(event.currentTarget);"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "        const messageText \u003d `Are you sure you want to remove all students"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "                from the course ${$clickedLink.data(\u0027courseId\u0027)}?`;"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "        const okCallback \u003d () \u003d\u003e {"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "            window.location \u003d $clickedLink.attr(\u0027href\u0027);"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "        showModalConfirmation(\u0027Confirm deletion\u0027, messageText, okCallback, null,"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "                null, null, BootstrapContextualColors.DANGER);"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "function bindRemindButtons() {"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "    $(\u0027body\u0027).on(\u0027click\u0027, \u0027.session-remind-inner-for-test, .session-remind-for-test\u0027, (event) \u003d\u003e {"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "        event.preventDefault();"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "        const $button \u003d $(event.currentTarget);"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "        const messageText \u003d \u0027Send e-mails to remind students who have not submitted their feedback for \u0027"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "                + `${$button.data(\u0027fsname\u0027)}?`;"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "        const okCallback \u003d function () {"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "            const urlLink \u003d $button.attr(\u0027href\u0027);"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "            sendRemindersToStudents(urlLink);"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "        showModalConfirmation(\u0027Confirm sending reminders\u0027, messageText, okCallback, null,"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "                null, null, BootstrapContextualColors.INFO);"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "function bindPublishButtons() {"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "    $(\u0027body\u0027).on(\u0027click\u0027, \u0027.session-publish-for-test\u0027, function (event) {"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "        event.preventDefault();"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "        const $button \u003d $(this);"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "        const feedbackSessionName \u003d $button.data(\u0027fsname\u0027);"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "        let messageText \u003d `Are you sure you want to publish the responses for the session \"${feedbackSessionName}\"?`;"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "        const isSendingPublishedEmail \u003d $button.data(\u0027sending-published-email\u0027);"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isSendingPublishedEmail) {"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "            messageText +\u003d \u0027 An email will be sent to students to inform them that the responses are ready for viewing.\u0027;"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "        const okCallback \u003d function () {"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "            window.location \u003d $button.attr(\u0027href\u0027);"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "        showModalConfirmation(\u0027Confirm publishing responses\u0027, messageText, okCallback, null,"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "                null, null, BootstrapContextualColors.WARNING);"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "function bindUnpublishButtons() {"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "    $(\u0027body\u0027).on(\u0027click\u0027, \u0027.session-unpublish-for-test\u0027, (event) \u003d\u003e {"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "        event.preventDefault();"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "        const $button \u003d $(event.currentTarget);"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "        const messageText \u003d `Are you sure you want to unpublish the session \"${$button.data(\u0027fsname\u0027)}\"?"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "                             An email will be sent to students to inform them that the session has been unpublished"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "                             and the session responses will no longer be viewable by students.`;"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "        const okCallback \u003d function () {"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "            window.location \u003d $button.attr(\u0027href\u0027);"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "        showModalConfirmation(\u0027Confirm unpublishing responses\u0027, messageText, okCallback, null,"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "                null, null, BootstrapContextualColors.WARNING);"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "// --------------------------------------------------------------------------"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": " * Selects contents inside an element."
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": " * @param {HTML DOM Object} elementNode The element to select contents from."
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "function selectElementContents(elementNode) {"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "    const { body } \u003d document;"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "    let range;"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "    if (document.createRange \u0026\u0026 window.getSelection) {"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "        range \u003d document.createRange();"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "        const selection \u003d window.getSelection();"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "        selection.removeAllRanges();"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "            range.selectNodeContents(elementNode);"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "            selection.addRange(range);"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (e) {"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "            range.selectNode(elementNode);"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "            selection.addRange(range);"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "    } else if (body.createTextRange) {"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "        range \u003d body.createTextRange();"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "        range.moveToElementText(elementNode);"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "        range.select();"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": " * Simulates the copy action in the right-click menu, typically \u0027Ctrl + C\u0027."
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "function executeCopyCommand() {"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "    document.execCommand(\u0027copy\u0027);"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "// Initial load-up"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "// -----------------------------------------------------------------------------"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "function prepareInstructorPages() {"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "    // bind the show picture onclick events"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "    bindStudentPhotoLink(\u0027.profile-pic-icon-click \u003e .student-profile-pic-view-link\u0027);"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "    // bind the show picture onhover events"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "    bindStudentPhotoHoverLink(\u0027.profile-pic-icon-hover\u0027);"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "    // bind the event handler to show confirmation modal"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    bindCourseMoveToRecoveryLinks();"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "    bindCourseDeleteLinks();"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    bindCourseDeleteAllLinks();"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "    bindSessionDeleteLinks();"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "export {"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "    attachEventToDeleteStudentLink,"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "    attachEventToDeleteAllStudentLink,"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "    attachEventToSendInviteLink,"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "    bindDeleteButtons,"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "    bindPublishButtons,"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "    bindRemindButtons,"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "    bindStudentPhotoHoverLink,"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "    bindStudentPhotoLink,"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "    bindUnpublishButtons,"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "    executeCopyCommand,"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "    initializeTimeZoneOptions,"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "    prepareInstructorPages,"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "    resendPublishedEmailToStudents,"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "    selectElementContents,"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "    setupFsCopyModal,"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "    sendRemindersToStudents,"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      }
    ],
    "authorContributionMap": {
      "dalessr": 37,
      "-": 570
    }
  },
  {
    "path": "src/main/webapp/dev/js/main/instructorCourses.js",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    ParamsNames,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    BootstrapContextualColors,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../common/const\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    initializeTimeZoneOptions,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    prepareInstructorPages,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../common/instructor\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    toggleSort,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../common/sortBy\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    appendStatusMessage,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    clearStatusMessages,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    setStatusMessage,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../common/statusMessage\u0027;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "let isFetchingCourses \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "let needsRetrying \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "function linkAjaxForCourseStats() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    const courseStatsClickHandler \u003d function (e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        const row \u003d $(this).closest(\u0027tr\u0027);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        const ajaxCols \u003d $(row).children(\u0027td[id^\u003d\"course-stats\"]\u0027);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        const hyperlinkObject \u003d $(this);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        e.preventDefault();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        $.ajax({"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            type: \u0027POST\u0027,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            url: $(this).attr(\u0027href\u0027),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            beforeSend() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                ajaxCols.html(\u0027\u003cimg class\u003d\"course-stats-loader\" src\u003d\"/images/ajax-loader.gif\"/\u003e\u0027);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            },"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            error() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                $.each(ajaxCols, (i, ajaxCol) \u003d\u003e {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                    const tryAgainLink \u003d hyperlinkObject.clone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                    $(ajaxCol).html(\u0027Failed. \u0027)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                            .append(tryAgainLink);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                    tryAgainLink"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                            .attr(\u0027data-toggle\u0027, \u0027tooltip\u0027)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                            .attr(\u0027data-placement\u0027, \u0027top\u0027)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                            .prop(\u0027title\u0027, \u0027Error occured while trying to fetch course stats. Click to retry.\u0027)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                            .html(\u0027Try again?\u0027)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                            .click(courseStatsClickHandler);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                });"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            },"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            success(data) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                $(ajaxCols[0]).text(data.courseDetails.stats.sectionsTotal);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                $(ajaxCols[1]).html(data.courseDetails.stats.teamsTotal);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                $(ajaxCols[2]).html(data.courseDetails.stats.studentsTotal);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                $(ajaxCols[3]).html(data.courseDetails.stats.unregisteredTotal);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            },"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    $(\u0027td[id^\u003d\"course-stats\"] \u003e a\u0027).click(courseStatsClickHandler);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dalessr"
        },
        "content": "function bindCollapseEvents() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    const tables \u003d $(\u0027div.courses-tables\u0027);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    const panels \u003d $(tables[0]).children(\u0027.panel\u0027);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    const heading \u003d $(panels[0]).children(\u0027.panel-heading\u0027);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    const bodyCollapse \u003d $(panels[0]).children(\u0027.panel-collapse\u0027);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    if (heading.length !\u003d\u003d 0 \u0026\u0026 bodyCollapse.length !\u003d\u003d 0) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        $(heading[0]).attr(\u0027data-target\u0027, \u0027#recoveryPanelBodyCollapse\u0027);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        $(heading[0]).attr(\u0027id\u0027, \u0027recoveryPanelHeading\u0027);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        $(heading[0]).css(\u0027cursor\u0027, \u0027pointer\u0027);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        $(bodyCollapse[0]).attr(\u0027id\u0027, \u0027recoveryPanelBodyCollapse\u0027);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    $(heading[0]).click((e) \u003d\u003e {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        if ($(e.target).hasClass(\u0027ajax_submit\u0027)) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            const toggleChevronDown \u003d $(panels[0]).find(\u0027.glyphicon-chevron-down\u0027);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            const toggleChevronUp \u003d $(panels[0]).find(\u0027.glyphicon-chevron-up\u0027);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            if (toggleChevronDown.length \u003d\u003d\u003d 0) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                $(bodyCollapse).collapse(\u0027toggle\u0027);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                $(toggleChevronUp[0]).addClass(\u0027glyphicon-chevron-down\u0027).removeClass(\u0027glyphicon-chevron-up\u0027);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                $(bodyCollapse).collapse(\u0027toggle\u0027);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                $(toggleChevronDown[0]).addClass(\u0027glyphicon-chevron-up\u0027).removeClass(\u0027glyphicon-chevron-down\u0027);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    });"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dalessr"
        },
        "content": "}"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "$(document).ready(() \u003d\u003e {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    prepareInstructorPages();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    const ajaxRequest \u003d function (e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isFetchingCourses) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        e.preventDefault();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        const formData \u003d $(this).serialize();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        $.ajax({"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            type: \u0027POST\u0027,"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            cache: false,"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            url: `${$(this).attr(\u0027action\u0027)}?${formData}`,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            beforeSend() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                $(\u0027#coursesList\u0027).html("
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u0027\u003cimg height\u003d\"75\" width\u003d\"75\" class\u003d\"margin-center-horizontal\" src\u003d\"/images/ajax-preload.gif\"/\u003e\u0027"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "                );"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "                isFetchingCourses \u003d true;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            },"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            error() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                isFetchingCourses \u003d false;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                needsRetrying \u003d true;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                $(\u0027#coursesList\u0027).html(\u0027\u0027);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                setStatusMessage("
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u0027Courses could not be loaded. Click \u003ca href\u003d\"javascript:;\" id\u003d\"retryAjax\"\u003ehere\u003c/a\u003e to retry.\u0027,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                        BootstrapContextualColors.WARNING"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                );"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                $(\u0027#retryAjax\u0027).click((ev) \u003d\u003e {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                    ev.preventDefault();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                    $(\u0027#ajaxForCourses\u0027).trigger(\u0027submit\u0027);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                });"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            },"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            success(data) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                isFetchingCourses \u003d false;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                if (needsRetrying) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                    clearStatusMessages();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                    needsRetrying \u003d false;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                const statusMessages \u003d $(data).find(\u0027.statusMessage\u0027);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                appendStatusMessage(statusMessages);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "                const appendedCoursesTable \u003d $(data).find(\u0027#coursesList\u0027).html();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "                $(\u0027#coursesList\u0027)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                        .removeClass(\u0027align-center\u0027)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "                        .html(appendedCoursesTable);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "                toggleSort($(\u0027#button_sortcourseid\u0027));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                linkAjaxForCourseStats();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                bindCollapseEvents();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            },"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    $(\u0027#ajaxForCourses\u0027).submit(ajaxRequest);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    $(\u0027#ajaxForCourses\u0027).trigger(\u0027submit\u0027);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    initializeTimeZoneOptions($(`#${ParamsNames.COURSE_TIME_ZONE}`));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "dalessr": 29,
      "-": 116
    }
  },
  {
    "path": "src/main/webapp/jsp/instructorCourses.jsp",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c%@ page trimDirectiveWhitespaces\u003d\"true\" %\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c%@ page pageEncoding\u003d\"UTF-8\" %\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c%@ page import\u003d\"teammates.common.util.FrontEndLibrary\" %\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c%@ taglib uri\u003d\"http://java.sun.com/jsp/jstl/core\" prefix\u003d\"c\" %\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c%@ taglib tagdir\u003d\"/WEB-INF/tags\" prefix\u003d\"t\" %\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c%@ taglib tagdir\u003d\"/WEB-INF/tags/instructor\" prefix\u003d\"ti\" %\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c%@ taglib tagdir\u003d\"/WEB-INF/tags/instructor/course\" prefix\u003d\"course\" %\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cc:set var\u003d\"jsIncludes\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cscript type\u003d\"text/javascript\" src\u003d\"\u003c%\u003d FrontEndLibrary.MOMENT %\u003e\"\u003e\u003c/script\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cscript type\u003d\"text/javascript\" src\u003d\"/data/moment-timezone-with-data-2013-2023.min.js\"\u003e\u003c/script\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cscript type\u003d\"text/javascript\" src\u003d\"/js/instructorCourses.js\"\u003e\u003c/script\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/c:set\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cti:instructorPage title\u003d\"Add New Course\" jsIncludes\u003d\"${jsIncludes}\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cc:if test\u003d\"${!data.usingAjax}\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ccourse:addCoursePanel courseIdToShow\u003d\"${data.courseIdToShow}\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        courseNameToShow\u003d\"${data.courseNameToShow}\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        googleId\u003d\"${data.account.googleId}\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        sessionToken\u003d\"${data.sessionToken}\"/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ccourse:loadCoursesTableByAjaxForm /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/c:if\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cbr\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ct:statusMessage statusMessagesToUser\u003d\"${data.statusMessagesToUser}\"/\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cbr\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalessr"
        },
        "content": "  \u003cdiv id\u003d\"coursesList\" class\u003d\"courses-tables align-center\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cc:if test\u003d\"${data.usingAjax}\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ccourse:activeCoursesTable activeCourses\u003d\"${data.activeCourses}\"/\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbr\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbr\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cc:if test\u003d\"${empty data.activeCourses.rows}\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        No records found. \u003cbr\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbr\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/c:if\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbr\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbr\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cc:if test\u003d\"${not empty data.archivedCourses.rows}\"\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ccourse:archivedCoursesTable archivedCourses\u003d\"${data.archivedCourses}\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            activeCourses\u003d\"${data.activeCourses}\"/\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbr\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbr\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbr\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbr\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/c:if\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003cc:if test\u003d\"${not empty data.recoveryCourses.rows}\"\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        \u003ccourse:recoveryCoursePanel /\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        \u003cbr\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        \u003cbr\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        \u003cbr\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        \u003cbr\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003c/c:if\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/c:if\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/ti:instructorPage\u003e"
      }
    ],
    "authorContributionMap": {
      "dalessr": 9,
      "-": 48
    }
  },
  {
    "path": "src/main/webapp/partials/instructorHelpCourses.jsp",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c%@ page trimDirectiveWhitespaces\u003d\"true\" %\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c%@ page pageEncoding\u003d\"UTF-8\" %\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ch2 class\u003d\"text-color-primary\" id\u003d\"courses\"\u003eCourses\u003c/h2\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"contentHolder\"\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ch3\u003eEnrolling Students in Courses\u003c/h3\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"panel-group\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"panel panel-default\" id\u003d\"course-add-students\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"panel-heading cursor-pointer\" data-toggle\u003d\"collapse\" data-target\u003d\"#course-add-students-body\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ch3 class\u003d\"panel-title\"\u003eHow do I add students to a course?\u003c/h3\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv id\u003d\"course-add-students-body\" class\u003d\"panel-collapse collapse\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"panel-body\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cp\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "            There are two ways to enroll students in a course:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/p\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cul\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cli\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "              From the \u003cb\u003eHome\u003c/b\u003e page, click on the \u003cbutton class\u003d\"btn btn-primary btn-xs\"\u003eStudents\u003c/button\u003e button of the corresponding course, and choose \u003cb\u003eEnroll\u003c/b\u003e."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/li\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cli\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "              From the \u003cb\u003eCourses\u003c/b\u003e page, click on the \u003cbutton class\u003d\"btn btn-default btn-xs\"\u003eEnroll\u003c/button\u003e button of the corresponding course."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/li\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/ul\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"panel panel-default\" id\u003d\"course-size\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"panel-heading cursor-pointer\" data-toggle\u003d\"collapse\" data-target\u003d\"#course-size-body\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ch3 class\u003d\"panel-title\"\u003eIs there a size limit for a course?\u003c/h3\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv id\u003d\"course-size-body\" class\u003d\"panel-collapse collapse\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"panel-body\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cp\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            No. However, if courses with an enrollment of more than 100 students need to be \u003ca class\u003d\"collapse-link\" data-target\u003d\"#course-enroll-sections-body\" href\u003d\"#course-enroll-sections\"\u003edivided into sections\u003c/a\u003e.\u003cbr\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            TEAMMATES uses section information to organize the results of your sessions into a downloadable report."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/p\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"panel panel-default\" id\u003d\"course-teams\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"panel-heading cursor-pointer\" data-toggle\u003d\"collapse\" data-target\u003d\"#course-teams-body\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ch3 class\u003d\"panel-title\"\u003eWhat should I do if my course doesn’t have teams?\u003c/h3\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv id\u003d\"course-teams-body\" class\u003d\"panel-collapse collapse\"\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"panel-body\"\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cp\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            When you enroll students in a course, TEAMMATES requires you to specify a \u003cb\u003eTeam\u003c/b\u003e for each student.\u003cbr\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            If your class does not use groups or teams, simply provide a dummy value in the Team column."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/p\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"panel panel-default\" id\u003d\"course-sections\"\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"panel-heading cursor-pointer\" data-toggle\u003d\"collapse\" data-target\u003d\"#course-sections-body\"\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ch3 class\u003d\"panel-title\"\u003eWhat are sections meant for?\u003c/h3\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv id\u003d\"course-sections-body\" class\u003d\"panel-collapse collapse\"\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"panel-body\"\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cp\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            Sections are used to organize students in courses with significantly large numbers of students."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            It is mandatory for courses with more than 100 students to organize students into sections."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            Courses with less than 100 students do not need to be split into sections."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/p\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cp\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            Section information is used to paginate the downloadable report of a session\u0027s results."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            When you download the results of a session as an Excel spreadsheet, each section will be given its own page in the file."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/p\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"panel panel-default\" id\u003d\"course-enroll-sections\"\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"panel-heading cursor-pointer\" data-toggle\u003d\"collapse\" data-target\u003d\"#course-enroll-sections-body\"\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ch3 class\u003d\"panel-title\"\u003eHow do I enroll students into sections?\u003c/h3\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv id\u003d\"course-enroll-sections-body\" class\u003d\"panel-collapse collapse\"\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"panel-body\"\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cp\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            To specify a section for each student at the time of enrollment, include a \u003cb\u003eSection\u003c/b\u003e column in the spreadsheet and ensure it is copied over to the student data text box, together with the rest of the data."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            To view more information, go to the \u003cb\u003eCourses\u003c/b\u003e page, click on the \u003cbutton class\u003d\"btn btn-default btn-xs\" type\u003d\"button\"\u003eEnroll\u003c/button\u003e button for any course and scroll down to the \u003cb\u003eMore Info\u003c/b\u003e section."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/p\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ch3\u003eAdding Instructors to Courses\u003c/h3\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"panel-group\"\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"panel panel-default\" id\u003d\"course-add-instructor\"\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"panel-heading cursor-pointer\" data-toggle\u003d\"collapse\" data-target\u003d\"#course-add-instructor-body\"\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ch3 class\u003d\"panel-title\"\u003eHow do I add instructors to my course?\u003c/h3\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv id\u003d\"course-add-instructor-body\" class\u003d\"panel-collapse collapse\"\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"panel-body\"\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cp\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            From your \u003cb\u003eHome\u003c/b\u003e or \u003cb\u003eCourses\u003c/b\u003e page, click the \u003cbutton class\u003d\"btn btn-default btn-xs\" type\u003d\"button\"\u003eEdit\u003c/button\u003e button of the course you would like to edit. You will be directed to the \u003cb\u003eEdit Course\u003c/b\u003e page, which will look similar to the example below.\u003cbr\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            Here, you can add new instructors to the course, edit existing instructors\u0027 details, and delete instructors from the course, depending on your access privileges."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/p\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"bs-example\"\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"panel panel-primary\"\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cdiv class\u003d\"panel-heading\"\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cstrong\u003eInstructor 3:\u003c/strong\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cdiv class\u003d\"pull-right\"\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003ca href\u003d\"javascript:;\" id\u003d\"instrEditLink3\" class\u003d\"btn btn-primary btn-xs\" data-toggle\u003d\"tooltip\" data-placement\u003d\"top\" title\u003d\"Edit instructor details\" disabled\u003d\"\"\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cspan class\u003d\"glyphicon glyphicon-pencil\"\u003e\u003c/span\u003e Edit"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003c/a\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003ca href\u003d\"javascript:;\" id\u003d\"instrDeleteLink3\" class\u003d\"btn btn-primary btn-xs\" data-toggle\u003d\"tooltip\" data-placement\u003d\"top\" title\u003d\"Delete the instructor from the course\" disabled\u003d\"\"\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cspan class\u003d\"glyphicon glyphicon-trash\"\u003e\u003c/span\u003e Delete"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003c/a\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/div\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/div\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cdiv class\u003d\"panel-body\"\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cform method\u003d\"post\" action\u003d\"#\" id\u003d\"formEditInstructor3\" name\u003d\"formEditInstructors\" class\u003d\"form form-horizontal\"\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003cinput type\u003d\"hidden\" name\u003d\"courseid\" value\u003d\"testCourse\"\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003cinput type\u003d\"hidden\" name\u003d\"instructorid\" value\u003d\"sampleInstr\"\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003cinput type\u003d\"hidden\" name\u003d\"user\" value\u003d\"sampleInstr\"\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003cdiv id\u003d\"instructorTable3\"\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cdiv class\u003d\"form-group\"\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003clabel class\u003d\"col-sm-3 control-label\"\u003eGoogle ID:\u003c/label\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003cdiv class\u003d\"col-sm-9\"\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cinput class\u003d\"form-control immutable\" type\u003d\"text\" id\u003d\"instructorid3\" value\u003d\"sampleInstr\" maxlength\u003d\"45\" tabindex\u003d\"3\" disabled\u003d\"\"\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003c/div\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/div\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cdiv class\u003d\"form-group\"\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003clabel class\u003d\"col-sm-3 control-label\"\u003eName:\u003c/label\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003cdiv class\u003d\"col-sm-9\"\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cinput class\u003d\"form-control\" type\u003d\"text\" name\u003d\"instructorname\" id\u003d\"instructorname3\" value\u003d\"sampleInstr\" data-toggle\u003d\"tooltip\" data-placement\u003d\"top\" maxlength\u003d\"100\" tabindex\u003d\"4\" disabled\u003d\"\" title\u003d\"Enter the name of the instructor.\"\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003c/div\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/div\u003e"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cdiv class\u003d\"form-group\"\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003clabel class\u003d\"col-sm-3 control-label\"\u003eEmail:\u003c/label\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003cdiv class\u003d\"col-sm-9\"\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cinput class\u003d\"form-control\" type\u003d\"text\" name\u003d\"instructoremail\" id\u003d\"instructoremail3\" value\u003d\"sampleInstr@google.com\" data-toggle\u003d\"tooltip\" data-placement\u003d\"top\" maxlength\u003d\"45\" tabindex\u003d\"5\" disabled\u003d\"\" title\u003d\"Enter the Email of the instructor.\"\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003c/div\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/div\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cdiv class\u003d\"form-group\"\u003e"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003clabel class\u003d\"col-sm-3 control-label\"\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cinput type\u003d\"checkbox\" name\u003d\"instructorisdisplayed\" value\u003d\"true\" data-toggle\u003d\"tooltip\" data-placement\u003d\"top\" disabled\u003d\"\" title\u003d\"If this is unselected, the instructor will be completely invisible to students. E.g. to give access to a colleague for ‘auditing’ your course\"\u003e Display to students as:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003c/label\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003cdiv class\u003d\"col-sm-9\"\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cinput class\u003d\"form-control\" type\u003d\"text\" name\u003d\"instructordisplayname\" placeholder\u003d\"E.g.Co-lecturer, Teaching Assistant\" value\u003d\"Instructor\" data-toggle\u003d\"tooltip\" data-placement\u003d\"top\" disabled\u003d\"\" title\u003d\"Specify the role of this instructor in this course as shown to the students\"\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003c/div\u003e"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/div\u003e"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cdiv id\u003d\"accessControlInfoForInstr3\"\u003e"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003cdiv class\u003d\"form-group\"\u003e"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003clabel class\u003d\"col-sm-3 control-label\"\u003eAccess Level:\u003c/label\u003e"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cdiv class\u003d\"col-sm-9\"\u003e"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003cp class\u003d\"form-control-static\"\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "                            \u003cspan\u003eCo-owner\u003c/span\u003e"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "                            \u003ca href\u003d\"javascript:;\"\u003e"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "                              \u0026nbsp;View Details"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "                            \u003c/a\u003e"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003c/p\u003e"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003c/div\u003e"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003c/div\u003e"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/div\u003e"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cdiv class\u003d\"form-group\"\u003e"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003cdiv class\u003d\"align-center\"\u003e"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cinput id\u003d\"btnSaveInstructor3\" type\u003d\"button\" class\u003d\"btn btn-primary\" style\u003d\"display:none;\" value\u003d\"Save changes\" tabindex\u003d\"6\"\u003e"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003c/div\u003e"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/div\u003e"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003c/div\u003e"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/form\u003e"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/div\u003e"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbr\u003e"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbr\u003e"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"align-center\"\u003e"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cinput id\u003d\"btnShowNewInstructorForm\" class\u003d\"btn btn-primary\" value\u003d\"Add New Instructor\" disabled\u003d\"\"\u003e"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cp\u003e"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "            To add an instructor:"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/p\u003e"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003col\u003e"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cli\u003e"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "              Click the \u003cbutton class\u003d\"btn btn-primary btn-s\" type\u003d\"button\"\u003eAdd New Instructor\u003c/button\u003e button at the bottom of the page. A form will appear for you to specify the necessary information about the new instructor."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/li\u003e"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cli\u003e"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "              Fill in the name, email, role, and access level of the instructor you want to add. If you are not clear about certain input field, hover your cursor over the input field to view the tooltip for explanation of the field.\u003cbr\u003e"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/li\u003e"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cli\u003e"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "              Click \u003cbutton class\u003d\"btn btn-primary btn-s\" type\u003d\"button\"\u003eAdd Instructor\u003c/button\u003e to add the instructor."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/li\u003e"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/ol\u003e"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"bs-example\"\u003e"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"panel panel-primary\" id\u003d\"panelAddInstructor\" style\u003d\"\"\u003e"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cdiv class\u003d\"panel-heading\"\u003e"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cstrong\u003eInstructor 2:\u003c/strong\u003e"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/div\u003e"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cdiv class\u003d\"panel-body fill-plain\"\u003e"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cform class\u003d\"form form-horizontal\"\u003e"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003cinput type\u003d\"hidden\" name\u003d\"courseid\" value\u003d\"testCourse2\"\u003e"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003cinput type\u003d\"hidden\" name\u003d\"user\" value\u003d\"sampleInstr\"\u003e"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003cdiv id\u003d\"instructorAddTable\"\u003e"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cdiv class\u003d\"form-group\"\u003e"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003clabel class\u003d\"col-sm-3 control-label\"\u003eName:\u003c/label\u003e"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003cdiv class\u003d\"col-sm-9\"\u003e"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cinput class\u003d\"form-control\" type\u003d\"text\" name\u003d\"instructorname\" id\u003d\"instructorname\" data-toggle\u003d\"tooltip\" data-placement\u003d\"top\" maxlength\u003d\"100\" tabindex\u003d\"8/\" title\u003d\"Enter the name of the instructor.\"\u003e"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003c/div\u003e"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/div\u003e"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cdiv class\u003d\"form-group\"\u003e"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003clabel class\u003d\"col-sm-3 control-label\"\u003eEmail:\u003c/label\u003e"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003cdiv class\u003d\"col-sm-9\"\u003e"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cinput class\u003d\"form-control\" type\u003d\"text\" name\u003d\"instructoremail\" id\u003d\"instructoremail\" data-toggle\u003d\"tooltip\" data-placement\u003d\"top\" maxlength\u003d\"45\" tabindex\u003d\"9/\" title\u003d\"Enter the Email of the instructor.\"\u003e"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003c/div\u003e"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/div\u003e"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cdiv id\u003d\"accessControlEditDivForInstr2\"\u003e"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003cdiv class\u003d\"form-group\"\u003e"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003clabel class\u003d\"col-sm-3 control-label\"\u003e"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003cinput type\u003d\"checkbox\" name\u003d\"instructorisdisplayed\" value\u003d\"true\" data-toggle\u003d\"tooltip\" data-placement\u003d\"top\" title\u003d\"If this is unselected, the instructor will be completely invisible to students. E.g. to give access to a colleague for ‘auditing’ your course\"\u003e Display to students as:"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003c/label\u003e"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cdiv class\u003d\"col-sm-9\"\u003e"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003cinput class\u003d\"form-control\" type\u003d\"text\" name\u003d\"instructordisplayname\" placeholder\u003d\"E.g.Co-lecturer, Teaching Assistant\" data-toggle\u003d\"tooltip\" data-placement\u003d\"top\" title\u003d\"Specify the role of this instructor in this course as shown to the students\"\u003e"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003c/div\u003e"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003c/div\u003e"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003cdiv class\u003d\"form-group\"\u003e"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cdiv class\u003d\"col-sm-3\"\u003e"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003clabel class\u003d\"control-label pull-right\"\u003eAccess-level\u003c/label\u003e"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003c/div\u003e"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cdiv class\u003d\"col-sm-9\"\u003e"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                          \u003cinput type\u003d\"radio\" name\u003d\"instructorrole\" id\u003d\"instructorrole1forinstructor2\" value\u003d\"Co-owner\" checked\u003d\"\"\u003e\u0026nbsp;Co-owner: Can do everything"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003ca href\u003d\"javascript:;\"\u003e"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "                            View Details"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003c/a\u003e"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003cbr\u003e"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                          \u003cinput type\u003d\"radio\" name\u003d\"instructorrole\" id\u003d\"instructorrole2forinstructor2\" value\u003d\"Manager\"\u003e\u0026nbsp;Manager: Can do everything except for deleting the course"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003ca href\u003d\"javascript:;\"\u003e"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "                            View Details"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003c/a\u003e"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003cbr\u003e"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                          \u003cinput type\u003d\"radio\" name\u003d\"instructorrole\" id\u003d\"instructorrole3forinstructor2\" value\u003d\"Observer\"\u003e\u0026nbsp;Observer: Can only view information(students, submissions, comments etc.). \u0026nbsp;Cannot edit/delete/submit anything."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003ca href\u003d\"javascript:;\"\u003e"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "                            View Details"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003c/a\u003e"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003cbr\u003e"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                          \u003cinput type\u003d\"radio\" name\u003d\"instructorrole\" id\u003d\"instructorrole4forinstructor2\" value\u003d\"Tutor\"\u003e\u0026nbsp;Tutor: Can view student details, give/view comments, submit/view responses for sessions"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003ca href\u003d\"javascript:;\"\u003e"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "                            View Details"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003c/a\u003e"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003cbr\u003e"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                          \u003cinput type\u003d\"radio\" name\u003d\"instructorrole\" id\u003d\"instructorrole5forinstructor2\" value\u003d\"Custom\"\u003e\u0026nbsp;Custom: No access by default. Any access needs to be granted explicitly."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003c/div\u003e"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003c/div\u003e"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/div\u003e"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cdiv class\u003d\"form-group\"\u003e"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003cdiv class\u003d\"align-center\"\u003e"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cinput id\u003d\"btnAddInstructor\" type\u003d\"button\" class\u003d\"btn btn-primary\" value\u003d\"Add Instructor\" tabindex\u003d\"10\"\u003e"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003c/div\u003e"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/div\u003e"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003c/div\u003e"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/form\u003e"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/div\u003e"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"panel panel-default\" id\u003d\"course-edit-instructor\"\u003e"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"panel-heading cursor-pointer\" data-toggle\u003d\"collapse\" data-target\u003d\"#course-edit-instructor-body\"\u003e"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ch3 class\u003d\"panel-title\"\u003eHow do I edit the information of an instructor in my course?\u003c/h3\u003e"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv id\u003d\"course-edit-instructor-body\" class\u003d\"panel-collapse collapse\"\u003e"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"panel-body\"\u003e"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cp\u003e"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "            To edit the name, email and visible role of Instructor A from Course B, first go to the \u003cb\u003eEdit Course\u003c/b\u003e page of Course B.\u003cbr\u003e"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "            From your \u003cb\u003eHome\u003c/b\u003e or \u003cb\u003eCourses\u003c/b\u003e page, click the \u003cbutton class\u003d\"btn btn-default btn-xs\" type\u003d\"button\"\u003eEdit\u003c/button\u003e button of the course you would like to edit. You will be directed to the \u003cb\u003eEdit Course\u003c/b\u003e page.\u003cbr\u003e"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/p\u003e"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cp\u003e"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "            To edit Instructor A\u0027s information:"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/p\u003e"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003col\u003e"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cli\u003e"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "              Scroll to the panel showing Instructor A\u0027s information.\u003cbr\u003e"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/li\u003e"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cli\u003e"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "              Click the \u003cbutton class\u003d\"btn btn-primary btn-xs\" type\u003d\"button\"\u003e\u003cspan class\u003d\"glyphicon glyphicon-pencil\"\u003e\u003c/span\u003e Edit\u003c/button\u003e button in the top right hand corner of Instructor A\u0027s information panel. \u003cbr\u003e"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/li\u003e"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cli\u003e"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "              Update the relevant fields with Instructor A\u0027s new information."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/li\u003e"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cli\u003e"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "              Click \u003cbutton class\u003d\"btn btn-primary btn-s\" type\u003d\"button\"\u003eSave changes\u003c/button\u003e to save the changes and complete the edit process."
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/li\u003e"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/ol\u003e"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"panel panel-default\" id\u003d\"course-instructor-access\"\u003e"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"panel-heading cursor-pointer\" data-toggle\u003d\"collapse\" data-target\u003d\"#course-instructor-access-body\"\u003e"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ch3 class\u003d\"panel-title\"\u003eHow do I set an instructor\u0027s access level?\u003c/h3\u003e"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv id\u003d\"course-instructor-access-body\" class\u003d\"panel-collapse collapse\"\u003e"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"panel-body\"\u003e"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cp\u003e"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "            When \u003ca class\u003d\"collapse-link\" data-target\u003d\"#course-add-instructor-body\" href\u003d\"#course-add-instructor\"\u003eadding an instructor\u003c/a\u003e or \u003ca class\u003d\"collapse-link\" data-target\u003d\"#course-edit-instructor-body\" href\u003d\"#course-edit-instructor\"\u003e editing an instructor\u0027s information\u003c/a\u003e, you can set the instructor\u0027s access level."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "            There are 4 pre-defined privilege options for you to choose from:"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/p\u003e"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cul\u003e"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cli\u003e"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cb\u003eCo-owner\u003c/b\u003e: is able to perform any action on the course, including deleting the course. When you create a new course, your access level is Co-owner. This is the highest access level."
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/li\u003e"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cli\u003e"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cb\u003eManager\u003c/b\u003e: has the same privileges as a Co-owner except that s/he is not allowed to delete the course."
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/li\u003e"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cli\u003e"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cb\u003eObserver\u003c/b\u003e: can view the course\u0027s information, but cannot edit or submit information"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/li\u003e"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cli\u003e"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cb\u003eTutor\u003c/b\u003e: can view student details, give/view comments, and submit/view responses for sessions."
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/li\u003e"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/ul\u003e"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cp\u003e"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "            All the access levels listed above have pre-defined privileges which you can view by clicking the \u0027View details\u0027 link next to the access level description.\u003cbr\u003e"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "            To set custom privileges for an instructor, select the \u003cb\u003eCustom\u003c/b\u003e access level, and specify which privileges the instructor should get."
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/p\u003e"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"panel panel-default\" id\u003d\"course-custom-instructor-access\"\u003e"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"panel-heading cursor-pointer\" data-toggle\u003d\"collapse\" data-target\u003d\"#course-custom-instructor-access-body\"\u003e"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ch3 class\u003d\"panel-title\"\u003eHow do I set custom privileges for an instructor?\u003c/h3\u003e"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv id\u003d\"course-custom-instructor-access-body\" class\u003d\"panel-collapse collapse\"\u003e"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"panel-body\"\u003e"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cp\u003e"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "            When you set the access level for an instructor to \u003cb\u003eCustom\u003c/b\u003e, detailed privilege settings will appear.\u003cbr\u003e"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "            Use the checkboxes to give instructors specific privileges."
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/p\u003e"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cp\u003e"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "            If a course has sections, you can customize an instructor\u0027s permissions for each section by clicking \u0027Give different permissions for a specific section\u0027.\u003cbr\u003e"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "            In the panel for section-level privilege settings, use the section checkboxes to apply your chosen settings to more than one section.\u003cbr\u003e"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "            You can also change the degree of access the instructor has to specific sessions in that section by clicking \u0027Give different permissions for sessions in this section\u0027."
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/p\u003e"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"bs-example\"\u003e"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"panel panel-primary\"\u003e"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cdiv class\u003d\"panel-heading\"\u003e"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cstrong\u003eInstructor 1:\u003c/strong\u003e"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cdiv class\u003d\"pull-right\"\u003e"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003ca href\u003d\"javascript:;\" id\u003d\"instrEditLink1\" class\u003d\"btn btn-primary btn-xs\" data-toggle\u003d\"tooltip\" data-placement\u003d\"top\" title\u003d\"Edit instructor details\" style\u003d\"display: none;\"\u003e"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cspan class\u003d\"glyphicon glyphicon-pencil\"\u003e\u003c/span\u003e Edit"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003c/a\u003e"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003ca href\u003d\"javascript:;\" id\u003d\"instrDeleteLink1\" class\u003d\"btn btn-primary btn-xs\" data-toggle\u003d\"tooltip\" data-placement\u003d\"top\" title\u003d\"Delete the instructor from the course\"\u003e"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cspan class\u003d\"glyphicon glyphicon-trash\"\u003e\u003c/span\u003e Delete"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003c/a\u003e"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/div\u003e"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/div\u003e"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cdiv class\u003d\"panel-body\"\u003e"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cform class\u003d\"form form-horizontal\"\u003e"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003cinput type\u003d\"hidden\" name\u003d\"courseid\" value\u003d\"testCourse2\"\u003e"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003cinput type\u003d\"hidden\" name\u003d\"instructorid\" value\u003d\"sampleInstr\"\u003e"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003cinput type\u003d\"hidden\" name\u003d\"user\" value\u003d\"sampleInstr\"\u003e"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003cdiv id\u003d\"instructorTable1\"\u003e"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cdiv class\u003d\"form-group\"\u003e"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003clabel class\u003d\"col-sm-3 control-label\"\u003eGoogle ID:\u003c/label\u003e"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003cdiv class\u003d\"col-sm-9\"\u003e"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cinput class\u003d\"form-control immutable\" type\u003d\"text\" id\u003d\"instructorid1\" value\u003d\"sampleInstr\" maxlength\u003d\"45\" tabindex\u003d\"3\" disabled\u003d\"\"\u003e"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003c/div\u003e"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/div\u003e"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cdiv class\u003d\"form-group\"\u003e"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003clabel class\u003d\"col-sm-3 control-label\"\u003eName:\u003c/label\u003e"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003cdiv class\u003d\"col-sm-9\"\u003e"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cinput class\u003d\"form-control\" type\u003d\"text\" name\u003d\"instructorname\" id\u003d\"instructorname1\" value\u003d\"sampleInstr\" data-toggle\u003d\"tooltip\" data-placement\u003d\"top\" maxlength\u003d\"100\" tabindex\u003d\"4\" title\u003d\"Enter the name of the instructor.\"\u003e"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003c/div\u003e"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/div\u003e"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cdiv class\u003d\"form-group\"\u003e"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003clabel class\u003d\"col-sm-3 control-label\"\u003eEmail:\u003c/label\u003e"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003cdiv class\u003d\"col-sm-9\"\u003e"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cinput class\u003d\"form-control\" type\u003d\"text\" name\u003d\"instructoremail\" id\u003d\"instructoremail1\" value\u003d\"sampleInstr@google.com\" data-toggle\u003d\"tooltip\" data-placement\u003d\"top\" maxlength\u003d\"45\" tabindex\u003d\"5\" title\u003d\"Enter the Email of the instructor.\"\u003e"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003c/div\u003e"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/div\u003e"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cdiv class\u003d\"form-group\"\u003e"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003clabel class\u003d\"col-sm-3 control-label\"\u003e"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cinput type\u003d\"checkbox\" name\u003d\"instructorisdisplayed\" value\u003d\"true\" data-toggle\u003d\"tooltip\" data-placement\u003d\"top\" title\u003d\"If this is unselected, the instructor will be completely invisible to students. E.g. to give access to a colleague for ‘auditing’ your course\"\u003e Display to students as:"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003c/label\u003e"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003cdiv class\u003d\"col-sm-9\"\u003e"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cinput class\u003d\"form-control\" type\u003d\"text\" name\u003d\"instructordisplayname\" placeholder\u003d\"E.g.Co-lecturer, Teaching Assistant\" value\u003d\"Instructor\" data-toggle\u003d\"tooltip\" data-placement\u003d\"top\" title\u003d\"Specify the role of this instructor in this course as shown to the students\"\u003e"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003c/div\u003e"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/div\u003e"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cdiv id\u003d\"accessControlInfoForInstr1\" style\u003d\"display: none;\"\u003e"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003cdiv class\u003d\"form-group\"\u003e"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003clabel class\u003d\"col-sm-3 control-label\"\u003eAccess Level:\u003c/label\u003e"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cdiv class\u003d\"col-sm-9\"\u003e"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003cp class\u003d\"form-control-static\"\u003e"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "                            \u003cspan\u003eCo-owner\u003c/span\u003e"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "                            \u003ca href\u003d\"javascript:;\"\u003e"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "                              \u0026nbsp;View Details"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "                            \u003c/a\u003e"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003c/p\u003e"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003c/div\u003e"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003c/div\u003e"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/div\u003e"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cdiv id\u003d\"accessControlEditDivForInstr1\" style\u003d\"\"\u003e"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003cdiv class\u003d\"form-group\"\u003e"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cdiv class\u003d\"col-sm-3\"\u003e"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003clabel class\u003d\"control-label pull-right\"\u003eAccess-level\u003c/label\u003e"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003c/div\u003e"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cdiv class\u003d\"col-sm-9\"\u003e"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                          \u003cinput type\u003d\"radio\" name\u003d\"instructorrole\" id\u003d\"instructorrole1forinstructor1\" value\u003d\"Co-owner\"\u003e \u0026nbsp;Co-owner: Can do everything \u0026nbsp;"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003ca href\u003d\"javascript:;\"\u003e"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "                            View Details"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003c/a\u003e"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003cbr\u003e"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                          \u003cinput type\u003d\"radio\" name\u003d\"instructorrole\" id\u003d\"instructorrole2forinstructor1\" value\u003d\"Manager\"\u003e \u0026nbsp;Manager: Can do everything except for deleting the course \u0026nbsp;"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003ca href\u003d\"javascript:;\"\u003e"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "                            View Details"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003c/a\u003e"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003cbr\u003e"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                          \u003cinput type\u003d\"radio\" name\u003d\"instructorrole\" id\u003d\"instructorrole3forinstructor1\" value\u003d\"Observer\"\u003e \u0026nbsp;Observer: Can only view information(students, submissions, comments etc.). \u0026nbsp;Cannot edit/delete/submit anything. \u0026nbsp;"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003ca href\u003d\"javascript:;\"\u003e"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "                            View Details"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003c/a\u003e"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003cbr\u003e"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                          \u003cinput type\u003d\"radio\" name\u003d\"instructorrole\" id\u003d\"instructorrole4forinstructor1\" value\u003d\"Tutor\"\u003e \u0026nbsp;Tutor: Can view student details, give/view comments, submit/view responses for sessions \u0026nbsp;"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003ca href\u003d\"javascript:;\"\u003e"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "                            View Details"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003c/a\u003e"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003cbr\u003e"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                          \u003cinput type\u003d\"radio\" name\u003d\"instructorrole\" id\u003d\"instructorrole5forinstructor1\" value\u003d\"Custom\" checked\u003d\"\"\u003e \u0026nbsp;Custom: No access by default. Any access needs to be granted explicitly."
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003cbr\u003e"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003c/div\u003e"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003c/div\u003e"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003cdiv id\u003d\"tunePermissionsDivForInstructor1\" style\u003d\"\"\u003e"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cdiv class\u003d\"form-group\"\u003e"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003cdiv class\u003d\"col-xs-12\"\u003e"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "                            \u003cdiv class\u003d\"panel panel-info\"\u003e"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "                              \u003cdiv class\u003d\"panel-heading\"\u003e"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "                                \u003cstrong\u003eIn general, this instructor can\u003c/strong\u003e"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "                              \u003c/div\u003e"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "                              \u003cdiv class\u003d\"panel-body\"\u003e"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "                                \u003cdiv class\u003d\"col-sm-3\"\u003e"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "                                  \u003cinput type\u003d\"checkbox\" name\u003d\"canmodifycourse\" value\u003d\"true\"\u003e Edit/Delete Course"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "                                \u003c/div\u003e"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "                                \u003cdiv class\u003d\"col-sm-3\"\u003e"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "                                  \u003cinput type\u003d\"checkbox\" name\u003d\"canmodifyinstructor\" value\u003d\"true\"\u003e Add/Edit/Delete Instructors"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "                                \u003c/div\u003e"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "                                \u003cdiv class\u003d\"col-sm-3\"\u003e"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "                                  \u003cinput type\u003d\"checkbox\" name\u003d\"canmodifysession\" value\u003d\"true\"\u003e Create/Edit/Delete Sessions"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "                                \u003c/div\u003e"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "                                \u003cdiv class\u003d\"col-sm-3\"\u003e"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "                                  \u003cinput type\u003d\"checkbox\" name\u003d\"canmodifystudent\" value\u003d\"true\"\u003e Enroll/Edit/Delete Students"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "                                \u003c/div\u003e"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "                                \u003cbr\u003e"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "                                \u003cbr\u003e"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "                                \u003cdiv class\u003d\"col-sm-6 border-right-gray\"\u003e"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "                                  \u003cinput type\u003d\"checkbox\" name\u003d\"canviewstudentinsection\" value\u003d\"true\"\u003e View Students\u0027 Details"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "                                  \u003cbr\u003e"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "                                  \u003cinput type\u003d\"checkbox\" name\u003d\"cangivecommentinsection\" value\u003d\"true\"\u003e Give Comments for Students"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "                                  \u003cbr\u003e"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "                                  \u003cinput type\u003d\"checkbox\" name\u003d\"canviewcommentinsection\" value\u003d\"true\"\u003e View Others\u0027 Comments on Students"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "                                  \u003cbr\u003e"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "                                  \u003cinput type\u003d\"checkbox\" name\u003d\"canmodifycommentinsection\" value\u003d\"true\"\u003e Edit/Delete Others\u0027 Comments on Students"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "                                  \u003cbr\u003e"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "                                \u003c/div\u003e"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "                                \u003cdiv class\u003d\"col-sm-5 col-sm-offset-1\"\u003e"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "                                  \u003cinput type\u003d\"checkbox\" name\u003d\"cansubmitsessioninsection\" value\u003d\"true\"\u003e Sessions: Submit Responses and Add Comments"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "                                  \u003cbr\u003e"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "                                  \u003cinput type\u003d\"checkbox\" name\u003d\"canviewsessioninsection\" value\u003d\"true\"\u003e Sessions: View Responses and Comments"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "                                  \u003cbr\u003e"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "                                  \u003cinput type\u003d\"checkbox\" name\u003d\"canmodifysessioncommentinsection\" value\u003d\"true\"\u003e Sessions: Edit/Delete Responses/Comments by Others"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "                                  \u003cbr\u003e"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "                                \u003c/div\u003e"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "                              \u003c/div\u003e"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "                            \u003c/div\u003e"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "                            \u003cdiv id\u003d\"tuneSectionPermissionsDiv0ForInstructor1\" style\u003d\"\"\u003e"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "                              \u003cdiv class\u003d\"panel panel-info\"\u003e"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "                                \u003cdiv class\u003d\"panel-heading\"\u003e"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "                                  \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "                                    \u003cdiv class\u003d\"col-sm-2\"\u003e"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "                                      \u003cp\u003e"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "                                        \u003cstrong\u003eBut in section(s)\u003c/strong\u003e"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "                                      \u003c/p\u003e"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "                                    \u003c/div\u003e"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "                                    \u003cdiv class\u003d\"col-sm-9\"\u003e"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "                                      \u003cdiv class\u003d\"col-sm-12\"\u003e"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "                                        \u003cdiv class\u003d\"col-sm-4\"\u003e"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "                                          \u003cinput type\u003d\"checkbox\" name\u003d\"sectiongroup0section0\" value\u003d\"section 1\" checked\u003d\"\"\u003e section 1"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "                                        \u003c/div\u003e"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "                                        \u003cdiv class\u003d\"col-sm-4\"\u003e"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "                                          \u003cinput type\u003d\"checkbox\" name\u003d\"sectiongroup0section1\" value\u003d\"section 2\"\u003e section 2"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "                                        \u003c/div\u003e"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "                                      \u003c/div\u003e"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "                                    \u003c/div\u003e"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "                                    \u003cdiv class\u003d\"col-sm-1\"\u003e"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "                                      \u003ca href\u003d\"javascript:;\" class\u003d\"pull-right\"\u003e"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "                                        \u003cspan class\u003d\"glyphicon glyphicon-trash\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "                                      \u003c/a\u003e"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "                                    \u003c/div\u003e"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "                                  \u003c/div\u003e"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "                                  \u003cbr\u003e"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "                                  \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "                                    \u003cdiv class\u003d\"col-sm-12\"\u003e"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "                                      \u003cp\u003e"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "                                        \u003cstrong\u003e the instructor can only,\u003c/strong\u003e"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "                                      \u003c/p\u003e"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "                                    \u003c/div\u003e"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "                                  \u003c/div\u003e"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "                                  \u003cinput type\u003d\"hidden\" name\u003d\"issectiongroup0set\" value\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "                                \u003c/div\u003e"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "                                \u003cdiv class\u003d\"panel-body\"\u003e"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "                                  \u003cbr\u003e"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "                                  \u003cdiv class\u003d\"col-sm-6 border-right-gray\"\u003e"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "                                    \u003cinput type\u003d\"checkbox\" name\u003d\"canviewstudentinsectionsectiongroup0\" value\u003d\"true\"\u003e View Students\u0027 Details"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "                                    \u003cbr\u003e"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "                                    \u003cinput type\u003d\"checkbox\" name\u003d\"cangivecommentinsectionsectiongroup0\" value\u003d\"true\"\u003e Give Comments for Students"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "                                    \u003cbr\u003e"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "                                    \u003cinput type\u003d\"checkbox\" name\u003d\"canviewcommentinsectionsectiongroup0\" value\u003d\"true\"\u003e View Others\u0027 Comments on Students"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "                                    \u003cbr\u003e"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "                                    \u003cinput type\u003d\"checkbox\" name\u003d\"canmodifycommentinsectionsectiongroup0\" value\u003d\"true\"\u003e Edit/Delete Others\u0027 Comments on Students"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "                                    \u003cbr\u003e"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "                                    \u003cbr\u003e"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "                                  \u003c/div\u003e"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "                                  \u003cdiv class\u003d\"col-sm-5 col-sm-offset-1\"\u003e"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "                                    \u003cinput type\u003d\"checkbox\" name\u003d\"cansubmitsessioninsectionsectiongroup0\" value\u003d\"true\"\u003e Sessions: Submit Responses and Add Comments"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "                                    \u003cbr\u003e"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "                                    \u003cinput type\u003d\"checkbox\" name\u003d\"canviewsessioninsectionsectiongroup0\" value\u003d\"true\"\u003e Sessions: View Responses and Comments"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "                                    \u003cbr\u003e"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "                                    \u003cinput type\u003d\"checkbox\" name\u003d\"canmodifysessioncommentinsectionsectiongroup0\" value\u003d\"true\"\u003e Sessions: Edit/Delete Responses/Comments by Others"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "                                    \u003cbr\u003e"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "                                    \u003cbr\u003e"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "                                  \u003c/div\u003e"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "                                  \u003ca href\u003d\"javascript:;\" id\u003d\"toggleSessionLevelInSection0ForInstructor1\" class\u003d\"small col-sm-5\"\u003eGive different permissions for sessions in this section\u003c/a\u003e"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "                                  \u003cdiv id\u003d\"tuneSessionPermissionsDiv0ForInstructor1\" class\u003d\"row\" style\u003d\"display: none;\"\u003e"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "                                    \u003cinput type\u003d\"hidden\" name\u003d\"issectiongroup0sessionsset\" value\u003d\"false\"\u003e"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "                                    \u003ctable class\u003d\"table table-striped\"\u003e"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "                                      \u003cthead\u003e"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "                                      \u003ctr\u003e"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "                                        \u003ctd\u003eSessionName\u003c/td\u003e"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "                                        \u003ctd\u003eSubmit Responses and Add Comments\u003c/td\u003e"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "                                        \u003ctd\u003eView Responses and Comments\u003c/td\u003e"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "                                        \u003ctd\u003eEdit/Delete Responses/Comments by Others\u003c/td\u003e"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "                                      \u003c/tr\u003e"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "                                      \u003c/thead\u003e"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "                                      \u003ctbody\u003e"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "                                      \u003ctr\u003e"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "                                        \u003ctd colspan\u003d\"4\" class\u003d\"text-center text-bold\"\u003eNo sessions in this course for you to configure\u003c/td\u003e"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "                                      \u003c/tr\u003e"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "                                      \u003c/tbody\u003e"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "                                    \u003c/table\u003e"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "                                  \u003c/div\u003e"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "                                \u003c/div\u003e"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "                              \u003c/div\u003e"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "                            \u003c/div\u003e"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "                            \u003ca href\u003d\"javascript:;\" class\u003d\"small\" id\u003d\"addSectionLevelForInstructor1\"\u003eGive different permissions for a specific section\u003c/a\u003e"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003c/div\u003e"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003c/div\u003e"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003c/div\u003e"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/div\u003e"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cdiv class\u003d\"form-group\"\u003e"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003cdiv class\u003d\"align-center\"\u003e"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cinput id\u003d\"btnSaveInstructor1\" type\u003d\"button\" class\u003d\"btn btn-primary\" style\u003d\"\" value\u003d\"Save changes\" tabindex\u003d\"6\"\u003e"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003c/div\u003e"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/div\u003e"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003c/div\u003e"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/form\u003e"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/div\u003e"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ch3\u003eManaging Courses\u003c/h3\u003e"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"panel-group\"\u003e"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"panel panel-default\" id\u003d\"course-view-students\"\u003e"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"panel-heading cursor-pointer\" data-toggle\u003d\"collapse\" data-target\u003d\"#course-view-students-body\"\u003e"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ch3 class\u003d\"panel-title\"\u003eHow do I view a list of students in a course?\u003c/h3\u003e"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv id\u003d\"course-view-students-body\" class\u003d\"panel-collapse collapse\"\u003e"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"panel-body\"\u003e"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cp\u003e"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "            There are two ways to access the list of students in a course."
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/p\u003e"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cp\u003e"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "            To view the list of students in Course A:"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/p\u003e"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cul\u003e"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cli\u003e"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "              From the \u003cb\u003eHome\u003c/b\u003e page, find the panel corresponding to Course A. On the right hand side, click \u003cbutton class\u003d\"btn btn-primary btn-xs\"\u003eStudents \u003cspan class\u003d\"caret dropdown-toggle\"\u003e\u003c/span\u003e\u003c/button\u003e"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "              and then select \u003cb\u003eView/Edit\u003c/b\u003e."
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/li\u003e"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cli\u003e"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "              From the \u003cb\u003eCourses\u003c/b\u003e page, click \u003cbutton class\u003d\"btn btn-default btn-xs\"\u003eView\u003c/button\u003e button of the row corresponding to Course A."
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/li\u003e"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/ul\u003e"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"panel panel-default\" id\u003d\"course-change-student-section\"\u003e"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"panel-heading cursor-pointer\" data-toggle\u003d\"collapse\" data-target\u003d\"#course-change-student-section-body\"\u003e"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ch3 class\u003d\"panel-title\"\u003eHow do I change a student\u0027s section?\u003c/h3\u003e"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv id\u003d\"course-change-student-section-body\" class\u003d\"panel-collapse collapse\"\u003e"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"panel-body\"\u003e"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cp\u003e"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "            To edit the section Student A from Course B is enrolled in:"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/p\u003e"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003col\u003e"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cli\u003e"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "              Go to the \u003cb\u003eStudents\u003c/b\u003e page and click Course B\u0027s panel heading. You will see a list of students enrolled in Course B."
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/li\u003e"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cli\u003e"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "              Click the \u003cbutton class\u003d\"btn btn-default btn-xs\"\u003eEdit\u003c/button\u003e button in the last column of the row corresponding to Student A."
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/li\u003e"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cli\u003e"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "              A new page will open that allows you to \u003ca class\u003d\"collapse-link\" data-target\u003d\"#student-edit-details-body\" href\u003d\"#student-edit-details\"\u003eedit the student\u0027s profile\u003c/a\u003e, including a field to edit the student\u0027s section.\u003cbr\u003e"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/li\u003e"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cli\u003e"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "              After editing the section name, click \u003cbutton class\u003d\"btn btn-primary btn-s\"\u003eSave Changes\u003c/button\u003e to confirm Student A\u0027s new section."
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/li\u003e"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/ol\u003e"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/p\u003e"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"panel panel-default\" id\u003d\"course-disappear\"\u003e"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"panel-heading cursor-pointer\" data-toggle\u003d\"collapse\" data-target\u003d\"#course-disappear-body\"\u003e"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ch3 class\u003d\"panel-title\"\u003eWhat should I do if a student says his/her courses have disappeared from the system?\u003c/h3\u003e"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv id\u003d\"course-disappear-body\" class\u003d\"panel-collapse collapse\"\u003e"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"panel-body\"\u003e"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cp\u003e"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "            The most likely reason for this is that the student has changed the primary email address associated with his/her Google ID. Please ask the student to email"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ca href\u003d\"mailto:teammates@comp.nus.edu.sg\"\u003eteammates@comp.nus.edu.sg\u003c/a\u003e so that we help to rectify the problem."
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/p\u003e"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"panel panel-default\" id\u003d\"course-delete-students\"\u003e"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"panel-heading cursor-pointer\" data-toggle\u003d\"collapse\" data-target\u003d\"#course-delete-students-body\"\u003e"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ch3 class\u003d\"panel-title\"\u003eHow do I delete students from a course?\u003c/h3\u003e"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv id\u003d\"course-delete-students-body\" class\u003d\"panel-collapse collapse\"\u003e"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"panel-body\"\u003e"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cp\u003e"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "            To remove Student A from Course B:"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/p\u003e"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003col\u003e"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cli\u003e"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ca class\u003d\"collapse-link\" data-target\u003d\"#course-view-students-body\" href\u003d\"#course-view-students\"\u003eView the student list\u003c/a\u003e of Course B."
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/li\u003e"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cli\u003e"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": "              In the row corresponding to Student A, click the \u003cbutton class\u003d\"btn btn-default btn-xs\"\u003eDelete\u003c/button\u003e button."
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/li\u003e"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cli\u003e"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": "              Click \u003cb\u003eOK\u003c/b\u003e to confirm that you would like to delete Student A from Course B."
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/li\u003e"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/ol\u003e"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ch3\u003eArchiving Courses\u003c/h3\u003e"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"panel-group\"\u003e"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"panel panel-default\" id\u003d\"course-archive\"\u003e"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"panel-heading cursor-pointer\" data-toggle\u003d\"collapse\" data-target\u003d\"#course-archive-body\"\u003e"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ch3 class\u003d\"panel-title\"\u003eHow do I archive a course?\u003c/h3\u003e"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv id\u003d\"course-archive-body\" class\u003d\"panel-collapse collapse\"\u003e"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"panel-body\"\u003e"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cp\u003e"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": "            When a course has ended, you can archive it so that it doesn\u0027t appear in your home page. Course, student and session details of an archived course are still stored on TEAMMATES. However, you cannot edit, create feedback sessions for or enroll students in an archived course."
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/p\u003e"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cp\u003e"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": "            In your \u003cb\u003eHome\u003c/b\u003e page, you will see panels for each course and a table of feedback sessions inside it, similar to the example below.\u003cbr\u003e"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": "            Click on the \u003cbutton class\u003d\"btn btn-primary btn-xs\" type\u003d\"button\"\u003eCourse \u003cspan class\u003d\"caret\"\u003e\u003c/span\u003e\u003c/button\u003e button on the card heading of the course you want to archive.\u003cbr\u003e"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": "            Then select \u003cbutton class\u003d\"btn btn-default btn-xs\" type\u003d\"button\"\u003eArchive\u003c/button\u003e in the drop-down menu and click \u003cb\u003eOK\u003c/b\u003e to confirm."
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/p\u003e"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cp\u003e"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": "            You can also archive a course from the \u003cb\u003eCourses\u003c/b\u003e page.\u003cbr\u003e"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": "            Under \u0027Active Courses\u0027, click on the \u003cbutton class\u003d\"btn btn-default btn-xs\" type\u003d\"button\"\u003eArchive\u003c/button\u003e button in the row corresponding to the course you want to archive."
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/p\u003e"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"bs-example\"\u003e"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"panel panel-primary\"\u003e"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cdiv class\u003d\"panel-heading\"\u003e"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003cdiv class\u003d\"col-sm-6\"\u003e"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cstrong\u003e"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": "                      [AI532] : Artificial Intelligence"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/strong\u003e"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003c/div\u003e"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003cdiv class\u003d\"mobile-margin-top-10px col-sm-6\"\u003e"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cspan class\u003d\"mobile-no-pull pull-right\"\u003e"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003cdiv class\u003d\"dropdown courses-table-dropdown\"\u003e"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cbutton class\u003d\"btn btn-primary btn-xs\" type\u003d\"button\"\u003e"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": "                          Students"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003cspan class\u003d\"caret\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003c/button\u003e"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003c/div\u003e"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003cdiv class\u003d\"dropdown courses-table-dropdown\"\u003e"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cbutton class\u003d\"btn btn-primary btn-xs\" type\u003d\"button\"\u003e"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": "                          Instructors"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003cspan class\u003d\"caret\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003c/button\u003e"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003c/div\u003e"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003cdiv class\u003d\"dropdown courses-table-dropdown\"\u003e"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cbutton class\u003d\"btn btn-primary btn-xs\" type\u003d\"button\"\u003e"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": "                          Sessions"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003cspan class\u003d\"caret\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003c/button\u003e"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003c/div\u003e"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003cdiv class\u003d\"dropdown courses-table-dropdown\"\u003e"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cbutton class\u003d\"btn btn-primary btn-xs\" type\u003d\"button\"\u003e"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": "                          Course"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003cspan class\u003d\"caret\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003c/button\u003e"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u003c/div\u003e"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/span\u003e"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003c/div\u003e"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/div\u003e"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/div\u003e"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"panel panel-default\" id\u003d\"course-view-archived\"\u003e"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"panel-heading cursor-pointer\" data-toggle\u003d\"collapse\" data-target\u003d\"#course-view-archived-body\"\u003e"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ch3 class\u003d\"panel-title\"\u003eHow do I view courses I have archived?\u003c/h3\u003e"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv id\u003d\"course-view-archived-body\" class\u003d\"panel-collapse collapse\"\u003e"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"panel-body\"\u003e"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cp\u003e"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": "            You can view all your archived courses by navigating to the \u003cb\u003eCourses\u003c/b\u003e page.\u003cbr\u003e"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            Scroll to the \u003cb\u003eArchived courses\u003c/b\u003e heading, which looks similar to this:"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/p\u003e"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"bs-example\"\u003e"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            \u003ch2 class\u003d\"text-muted\"\u003e"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "dalessr"
        },
        "content": "              \u003cspan class\u003d\"glyphicon glyphicon-floppy-disk\"\u003e\u003c/span\u003e Archived courses"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            \u003c/h2\u003e"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctable class\u003d\"table table-bordered table-striped\"\u003e"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cthead\u003e"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "dalessr"
        },
        "content": "              \u003ctr class\u003d\"fill-info\"\u003e"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cth onclick\u003d\"toggleSort(this);\" class\u003d\"button-sort-none\"\u003e"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": "                  Course ID\u003cspan class\u003d\"icon-sort unsorted\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/th\u003e"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cth onclick\u003d\"toggleSort(this);\" class\u003d\"button-sort-none\"\u003e"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": "                  Course Name\u003cspan class\u003d\"icon-sort unsorted\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/th\u003e"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003cth onclick\u003d\"toggleSort(this);\" class\u003d\"button-sort-none\"\u003e"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                  Creation Date\u003cspan class\u003d\"icon-sort unsorted\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003c/th\u003e"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cth class\u003d\"align-center no-print\"\u003eAction(s)\u003c/th\u003e"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/tr\u003e"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/thead\u003e"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctr\u003e"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ctd\u003eAI532\u003c/td\u003e"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ctd\u003eArtificial Intelligence\u003c/td\u003e"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003ctd\u003e20 Jan 2018\u003c/td\u003e"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ctd class\u003d\"align-center no-print\"\u003e"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003cbutton href\u003d\"#\" class\u003d\"btn btn-default btn-xs\" type\u003d\"button\"\u003eUnarchive\u003c/button\u003e"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003cbutton href\u003d\"#\" class\u003d\"btn btn-default btn-xs\" type\u003d\"button\"\u003eDelete\u003c/button\u003e"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/td\u003e"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/tr\u003e"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/table\u003e"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cp\u003e"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": "            The courses you have previously archived are listed here."
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": "            In order to access information in an archived course, \u003ca class\u003d\"collapse-link\" data-target\u003d\"#course-unarchive-body\" href\u003d\"#course-unarchive\"\u003eunarchive the course\u003c/a\u003e."
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/p\u003e"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"panel panel-default\" id\u003d\"course-unarchive\"\u003e"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"panel-heading cursor-pointer\" data-toggle\u003d\"collapse\" data-target\u003d\"#course-unarchive-body\"\u003e"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ch3 class\u003d\"panel-title\"\u003eHow do I unarchive an archived course?\u003c/h3\u003e"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv id\u003d\"course-unarchive-body\" class\u003d\"panel-collapse collapse\"\u003e"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"panel-body\"\u003e"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cp\u003e"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": "            To unarchive a course, first \u003ca class\u003d\"collapse-link\" data-target\u003d\"#course-view-archived-body\" href\u003d\"#course-view-archived\"\u003eview the course\u003c/a\u003e that you would like to unarchive in the \u003cb\u003eCourses\u003c/b\u003e page.\u003cbr\u003e"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": "            Then, click on the \u003cbutton href\u003d\"#\" class\u003d\"btn btn-default btn-xs\" type\u003d\"button\"\u003eUnarchive\u003c/button\u003e button corresponding to the course you want to unarchive."
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/p\u003e"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"bs-example\"\u003e"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            \u003ch2 class\u003d\"text-muted\"\u003e"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "dalessr"
        },
        "content": "              \u003cspan class\u003d\"glyphicon glyphicon-floppy-disk\"\u003e\u003c/span\u003e Archived courses"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            \u003c/h2\u003e"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctable class\u003d\"table table-bordered table-striped\"\u003e"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cthead\u003e"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "dalessr"
        },
        "content": "              \u003ctr class\u003d\"fill-info\"\u003e"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cth onclick\u003d\"toggleSort(this);\" class\u003d\"button-sort-none\"\u003e"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": "                  Course ID\u003cspan class\u003d\"icon-sort unsorted\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/th\u003e"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cth onclick\u003d\"toggleSort(this);\" class\u003d\"button-sort-none\"\u003e"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": "                  Course Name\u003cspan class\u003d\"icon-sort unsorted\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/th\u003e"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003cth onclick\u003d\"toggleSort(this);\" class\u003d\"button-sort-none\"\u003e"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                  Creation Date\u003cspan class\u003d\"icon-sort unsorted\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003c/th\u003e"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cth class\u003d\"align-center no-print\"\u003eAction(s)\u003c/th\u003e"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/tr\u003e"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/thead\u003e"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctr\u003e"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ctd\u003eAI532\u003c/td\u003e"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ctd\u003eArtificial Intelligence\u003c/td\u003e"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003ctd\u003e20 Jan 2018\u003c/td\u003e"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ctd class\u003d\"align-center no-print\"\u003e"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003cbutton href\u003d\"#\" class\u003d\"btn btn-default btn-xs\" type\u003d\"button\"\u003eUnarchive\u003c/button\u003e"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003cbutton href\u003d\"#\" class\u003d\"btn btn-default btn-xs\" type\u003d\"button\"\u003eDelete\u003c/button\u003e"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/td\u003e"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/tr\u003e"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/table\u003e"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "dalessr"
        },
        "content": "  \u003ch3\u003eRestoring Deleted Courses\u003c/h3\u003e"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "dalessr"
        },
        "content": "  \u003cdiv class\u003d\"panel-group\"\u003e"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    \u003cdiv class\u003d\"panel panel-default\" id\u003d\"course-view-deleted\"\u003e"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003cdiv class\u003d\"panel-heading cursor-pointer\" data-toggle\u003d\"collapse\" data-target\u003d\"#course-view-deleted-body\"\u003e"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        \u003ch3 class\u003d\"panel-title\"\u003eHow do I view courses I have deleted?\u003c/h3\u003e"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003cdiv id\u003d\"course-view-deleted-body\" class\u003d\"panel-collapse collapse\"\u003e"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        \u003cdiv class\u003d\"panel-body\"\u003e"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "dalessr"
        },
        "content": "          \u003cp\u003e"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            You can view all your deleted courses by navigating to the \u003cb\u003eCourses\u003c/b\u003e page.\u003cbr\u003e"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            Scroll to the \u003cb\u003eDeleted courses\u003c/b\u003e heading, which looks similar to this:"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "dalessr"
        },
        "content": "          \u003c/p\u003e"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "dalessr"
        },
        "content": "          \u003cdiv class\u003d\"bs-example\"\u003e"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            \u003ch2 class\u003d\"text-muted\"\u003e"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "dalessr"
        },
        "content": "              \u003cspan class\u003d\"glyphicon glyphicon-trash\"\u003e\u003c/span\u003e Deleted courses"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            \u003c/h2\u003e"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            \u003cdiv class\u003d\"panel\"\u003e"
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "dalessr"
        },
        "content": "              \u003cdiv class\u003d\"panel-heading fill-default\"\u003e"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003cdiv class\u003d\"pull-right margin-left-7px\"\u003e"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                  \u003cspan class\u003d\"glyphicon glyphicon-chevron-up\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003c/div\u003e"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003ca class\u003d\"btn btn-default btn-xs pull-right pull-down margin-left-7px color-negative\""
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                   data-toggle\u003d\"tooltip\""
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                   data-placement\u003d\"top\"\u003e"
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                  \u003cspan class\u003d\"glyphicon glyphicon-remove\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                  \u003cstrong\u003eDelete All\u003c/strong\u003e"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003c/a\u003e"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003ca class\u003d\"btn btn-default btn-xs pull-right pull-down\""
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                   data-toggle\u003d\"tooltip\""
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                   data-placement\u003d\"top\"\u003e"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                  \u003cspan class\u003d\"glyphicon glyphicon-ok\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                  \u003cstrong\u003eRestore All\u003c/strong\u003e"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003c/a\u003e"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003cstrong\u003e"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                  Recycle Bin"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003c/strong\u003e"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "dalessr"
        },
        "content": "              \u003c/div\u003e"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "dalessr"
        },
        "content": "              \u003cdiv class\u003d\"panel-collapse\"\u003e"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003cdiv class\u003d\"panel-body padding-0\"\u003e"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                  \u003ctable class\u003d\"table table-bordered table-striped margin-0\"\u003e"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                    \u003cthead class\u003d\"background-color-medium-gray text-color-gray font-weight-normal\"\u003e"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003ctr\u003e"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                        \u003cth onclick\u003d\"toggleSort(this);\" class\u003d\"button-sort-none\"\u003e"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                          Course ID\u003cspan class\u003d\"icon-sort unsorted\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                        \u003c/th\u003e"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                        \u003cth onclick\u003d\"toggleSort(this);\" class\u003d\"button-sort-none\"\u003e"
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                          Course Name\u003cspan class\u003d\"icon-sort unsorted\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                        \u003c/th\u003e"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                        \u003cth onclick\u003d\"toggleSort(this);\" class\u003d\"button-sort-none\"\u003e"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                          Creation Date\u003cspan class\u003d\"icon-sort unsorted\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                        \u003c/th\u003e"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                        \u003cth onclick\u003d\"toggleSort(this);\" class\u003d\"button-sort-none\"\u003e"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                          Deletion Date\u003cspan class\u003d\"icon-sort unsorted\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                        \u003c/th\u003e"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                        \u003cth class\u003d\"align-center no-print\"\u003eAction(s)\u003c/th\u003e"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003c/tr\u003e"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                    \u003c/thead\u003e"
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                    \u003ctr\u003e"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003ctd\u003eAI532\u003c/td\u003e"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003ctd\u003eArtificial Intelligence\u003c/td\u003e"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003ctd\u003e20 Jan 2018\u003c/td\u003e"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003ctd\u003e10 Mar 2018\u003c/td\u003e"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003ctd class\u003d\"align-center no-print\"\u003e"
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                        \u003cbutton href\u003d\"#\" class\u003d\"btn btn-default btn-xs\" type\u003d\"button\"\u003eRestore\u003c/button\u003e"
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                        \u003cbutton href\u003d\"#\" class\u003d\"btn btn-default btn-xs color-negative\" type\u003d\"button\"\u003eDelete Permanently\u003c/button\u003e"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003c/td\u003e"
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                    \u003c/tr\u003e"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                  \u003c/table\u003e"
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003c/div\u003e"
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "dalessr"
        },
        "content": "              \u003c/div\u003e"
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "dalessr"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "dalessr"
        },
        "content": "          \u003cp\u003e"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            The courses you have previously deleted are listed here."
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            In order to access information in a deleted course, \u003ca class\u003d\"collapse-link\" data-target\u003d\"#course-restore-body\" href\u003d\"#course-restore\"\u003erestore the course\u003c/a\u003e."
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "dalessr"
        },
        "content": "          \u003c/p\u003e"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    \u003cdiv class\u003d\"panel panel-default\" id\u003d\"course-restore\"\u003e"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003cdiv class\u003d\"panel-heading cursor-pointer\" data-toggle\u003d\"collapse\" data-target\u003d\"#course-restore-body\"\u003e"
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        \u003ch3 class\u003d\"panel-title\"\u003eHow do I restore a deleted course?\u003c/h3\u003e"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003cdiv id\u003d\"course-restore-body\" class\u003d\"panel-collapse collapse\"\u003e"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        \u003cdiv class\u003d\"panel-body\"\u003e"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "dalessr"
        },
        "content": "          \u003cp\u003e"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            To restore a deleted course, first \u003ca class\u003d\"collapse-link\" data-target\u003d\"#course-view-deleted-body\" href\u003d\"#course-view-deleted\"\u003eview the course\u003c/a\u003e that you would like to restore in the \u003cb\u003eCourses\u003c/b\u003e page.\u003cbr\u003e"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            Then, click on the \u003cbutton href\u003d\"#\" class\u003d\"btn btn-default btn-xs\" type\u003d\"button\"\u003eRestore\u003c/button\u003e button corresponding to the course you want to restore."
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "dalessr"
        },
        "content": "          \u003c/p\u003e"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "dalessr"
        },
        "content": "          \u003cdiv class\u003d\"bs-example\"\u003e"
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            \u003ch2 class\u003d\"text-muted\"\u003e"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "dalessr"
        },
        "content": "              \u003cspan class\u003d\"glyphicon glyphicon-trash\"\u003e\u003c/span\u003e Deleted courses"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            \u003c/h2\u003e"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            \u003cdiv class\u003d\"panel\"\u003e"
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "dalessr"
        },
        "content": "              \u003cdiv class\u003d\"panel-heading fill-default\"\u003e"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003cdiv class\u003d\"pull-right margin-left-7px\"\u003e"
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                  \u003cspan class\u003d\"glyphicon glyphicon-chevron-up\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003c/div\u003e"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003ca class\u003d\"btn btn-default btn-xs pull-right pull-down margin-left-7px color-negative\""
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                   data-toggle\u003d\"tooltip\""
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                   data-placement\u003d\"top\"\u003e"
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                  \u003cspan class\u003d\"glyphicon glyphicon-remove\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                  \u003cstrong\u003eDelete All\u003c/strong\u003e"
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003c/a\u003e"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003ca class\u003d\"btn btn-default btn-xs pull-right pull-down\""
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                   data-toggle\u003d\"tooltip\""
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                   data-placement\u003d\"top\"\u003e"
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                  \u003cspan class\u003d\"glyphicon glyphicon-ok\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                  \u003cstrong\u003eRestore All\u003c/strong\u003e"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003c/a\u003e"
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003cstrong\u003e"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                  Recycle Bin"
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003c/strong\u003e"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "dalessr"
        },
        "content": "              \u003c/div\u003e"
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "dalessr"
        },
        "content": "              \u003cdiv class\u003d\"panel-collapse\"\u003e"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003cdiv class\u003d\"panel-body padding-0\"\u003e"
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                  \u003ctable class\u003d\"table table-bordered table-striped margin-0\"\u003e"
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                    \u003cthead class\u003d\"background-color-medium-gray text-color-gray font-weight-normal\"\u003e"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                    \u003ctr\u003e"
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003cth onclick\u003d\"toggleSort(this);\" class\u003d\"button-sort-none\"\u003e"
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                        Course ID\u003cspan class\u003d\"icon-sort unsorted\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003c/th\u003e"
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003cth onclick\u003d\"toggleSort(this);\" class\u003d\"button-sort-none\"\u003e"
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                        Course Name\u003cspan class\u003d\"icon-sort unsorted\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003c/th\u003e"
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003cth onclick\u003d\"toggleSort(this);\" class\u003d\"button-sort-none\"\u003e"
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                        Creation Date\u003cspan class\u003d\"icon-sort unsorted\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003c/th\u003e"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003cth onclick\u003d\"toggleSort(this);\" class\u003d\"button-sort-none\"\u003e"
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                        Deletion Date\u003cspan class\u003d\"icon-sort unsorted\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003c/th\u003e"
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003cth class\u003d\"align-center no-print\"\u003eAction(s)\u003c/th\u003e"
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                    \u003c/tr\u003e"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                    \u003c/thead\u003e"
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                    \u003ctr\u003e"
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003ctd\u003eAI532\u003c/td\u003e"
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003ctd\u003eArtificial Intelligence\u003c/td\u003e"
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003ctd\u003e20 Jan 2018\u003c/td\u003e"
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003ctd\u003e10 Mar 2018\u003c/td\u003e"
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003ctd class\u003d\"align-center no-print\"\u003e"
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                        \u003cbutton href\u003d\"#\" class\u003d\"btn btn-default btn-xs\" type\u003d\"button\"\u003eRestore\u003c/button\u003e"
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                        \u003cbutton href\u003d\"#\" class\u003d\"btn btn-default btn-xs color-negative\" type\u003d\"button\"\u003eDelete Permanently\u003c/button\u003e"
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003c/td\u003e"
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                    \u003c/tr\u003e"
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                  \u003c/table\u003e"
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003c/div\u003e"
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "dalessr"
        },
        "content": "              \u003c/div\u003e"
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "dalessr"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "dalessr"
        },
        "content": "          \u003cp\u003e"
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            After restoring the course, all the information relevant to the course (e.g. instructors, sessions, students) will also be restored."
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "dalessr"
        },
        "content": "          \u003c/p\u003e"
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    \u003cdiv class\u003d\"panel panel-default\" id\u003d\"course-delete\"\u003e"
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003cdiv class\u003d\"panel-heading cursor-pointer\" data-toggle\u003d\"collapse\" data-target\u003d\"#course-delete-body\"\u003e"
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        \u003ch3 class\u003d\"panel-title\"\u003eHow do I permanently delete a course?\u003c/h3\u003e"
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003cdiv id\u003d\"course-delete-body\" class\u003d\"panel-collapse collapse\"\u003e"
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        \u003cdiv class\u003d\"panel-body\"\u003e"
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "dalessr"
        },
        "content": "          \u003cp\u003e"
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            To permanently delete a course, first \u003ca class\u003d\"collapse-link\" data-target\u003d\"#course-view-deleted-body\" href\u003d\"#course-view-deleted\"\u003eview the course\u003c/a\u003e that you would like to permanently delete in the \u003cb\u003eCourses\u003c/b\u003e page.\u003cbr\u003e"
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            Then, click on the \u003cbutton href\u003d\"#\" class\u003d\"btn btn-default btn-xs color-negative\" type\u003d\"button\"\u003eDelete Permanently\u003c/button\u003e button corresponding to the course you want to delete."
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "dalessr"
        },
        "content": "          \u003c/p\u003e"
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "dalessr"
        },
        "content": "          \u003cdiv class\u003d\"bs-example\"\u003e"
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            \u003ch2 class\u003d\"text-muted\"\u003e"
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "dalessr"
        },
        "content": "              \u003cspan class\u003d\"glyphicon glyphicon-trash\"\u003e\u003c/span\u003e Deleted courses"
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            \u003c/h2\u003e"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            \u003cdiv class\u003d\"panel\"\u003e"
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "dalessr"
        },
        "content": "              \u003cdiv class\u003d\"panel-heading fill-default\"\u003e"
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003cdiv class\u003d\"pull-right margin-left-7px\"\u003e"
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                  \u003cspan class\u003d\"glyphicon glyphicon-chevron-up\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003c/div\u003e"
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003ca class\u003d\"btn btn-default btn-xs pull-right pull-down margin-left-7px color-negative\""
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                   data-toggle\u003d\"tooltip\""
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                   data-placement\u003d\"top\"\u003e"
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                  \u003cspan class\u003d\"glyphicon glyphicon-remove\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                  \u003cstrong\u003eDelete All\u003c/strong\u003e"
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003c/a\u003e"
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003ca class\u003d\"btn btn-default btn-xs pull-right pull-down\""
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                   data-toggle\u003d\"tooltip\""
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                   data-placement\u003d\"top\"\u003e"
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                  \u003cspan class\u003d\"glyphicon glyphicon-ok\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                  \u003cstrong\u003eRestore All\u003c/strong\u003e"
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003c/a\u003e"
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003cstrong\u003e"
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                  Recycle Bin"
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003c/strong\u003e"
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "dalessr"
        },
        "content": "              \u003c/div\u003e"
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "dalessr"
        },
        "content": "              \u003cdiv class\u003d\"panel-collapse\"\u003e"
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003cdiv class\u003d\"panel-body padding-0\"\u003e"
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                  \u003ctable class\u003d\"table table-bordered table-striped margin-0\"\u003e"
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                    \u003cthead class\u003d\"background-color-medium-gray text-color-gray font-weight-normal\"\u003e"
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                    \u003ctr\u003e"
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003cth onclick\u003d\"toggleSort(this);\" class\u003d\"button-sort-none\"\u003e"
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                        Course ID\u003cspan class\u003d\"icon-sort unsorted\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003c/th\u003e"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003cth onclick\u003d\"toggleSort(this);\" class\u003d\"button-sort-none\"\u003e"
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                        Course Name\u003cspan class\u003d\"icon-sort unsorted\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003c/th\u003e"
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003cth onclick\u003d\"toggleSort(this);\" class\u003d\"button-sort-none\"\u003e"
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                        Creation Date\u003cspan class\u003d\"icon-sort unsorted\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003c/th\u003e"
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003cth onclick\u003d\"toggleSort(this);\" class\u003d\"button-sort-none\"\u003e"
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                        Deletion Date\u003cspan class\u003d\"icon-sort unsorted\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003c/th\u003e"
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003cth class\u003d\"align-center no-print\"\u003eAction(s)\u003c/th\u003e"
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                    \u003c/tr\u003e"
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                    \u003c/thead\u003e"
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                    \u003ctr\u003e"
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003ctd\u003eAI532\u003c/td\u003e"
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003ctd\u003eArtificial Intelligence\u003c/td\u003e"
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003ctd\u003e20 Jan 2018\u003c/td\u003e"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003ctd\u003e10 Mar 2018\u003c/td\u003e"
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003ctd class\u003d\"align-center no-print\"\u003e"
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                        \u003cbutton href\u003d\"#\" class\u003d\"btn btn-default btn-xs\" type\u003d\"button\"\u003eRestore\u003c/button\u003e"
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                        \u003cbutton href\u003d\"#\" class\u003d\"btn btn-default btn-xs color-negative\" type\u003d\"button\"\u003eDelete Permanently\u003c/button\u003e"
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                      \u003c/td\u003e"
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                    \u003c/tr\u003e"
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                  \u003c/table\u003e"
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003c/div\u003e"
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "dalessr"
        },
        "content": "              \u003c/div\u003e"
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "dalessr"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "dalessr"
        },
        "content": "          \u003cp\u003e"
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            After deleting the course, all the information relevant to the course (e.g. instructors, sessions, students) will also be permanently deleted."
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "dalessr"
        },
        "content": "          \u003c/p\u003e"
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    \u003cdiv class\u003d\"panel panel-default\" id\u003d\"course-all-action\"\u003e"
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003cdiv class\u003d\"panel-heading cursor-pointer\" data-toggle\u003d\"collapse\" data-target\u003d\"#course-all-action-body\"\u003e"
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        \u003ch3 class\u003d\"panel-title\"\u003eHow do I restore/delete all courses from Recycle Bin?\u003c/h3\u003e"
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003cdiv id\u003d\"course-all-action-body\" class\u003d\"panel-collapse collapse\"\u003e"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        \u003cdiv class\u003d\"panel-body\"\u003e"
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "dalessr"
        },
        "content": "          \u003cp\u003e"
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            First \u003ca class\u003d\"collapse-link\" data-target\u003d\"#course-view-deleted-body\" href\u003d\"#course-view-deleted\"\u003eview the course\u003c/a\u003e and check for courses in Recycle Bin.\u003cbr\u003e"
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            To restore all courses, click on the \u003ca class\u003d\"btn btn-default btn-xs\" data-toggle\u003d\"tooltip\" data-placement\u003d\"top\"\u003e\u003cspan class\u003d\"glyphicon glyphicon-ok\"\u003e\u003c/span\u003e\u003cstrong\u003e Restore All\u003c/strong\u003e\u003c/a\u003e button in \u003cb\u003eDeleted courses\u003c/b\u003e heading;"
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            to delete all courses, click on the \u003ca class\u003d\"btn btn-default btn-xs color-negative\" data-toggle\u003d\"tooltip\" data-placement\u003d\"top\"\u003e\u003cspan class\u003d\"glyphicon glyphicon-remove\"\u003e\u003c/span\u003e\u003cstrong\u003e Delete All\u003c/strong\u003e\u003c/a\u003e button in \u003cb\u003eDeleted courses\u003c/b\u003e heading."
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "dalessr"
        },
        "content": "          \u003c/p\u003e"
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "dalessr"
        },
        "content": "          \u003cdiv class\u003d\"bs-example\"\u003e"
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            \u003ch2 class\u003d\"text-muted\"\u003e"
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "dalessr"
        },
        "content": "              \u003cspan class\u003d\"glyphicon glyphicon-trash\"\u003e\u003c/span\u003e Deleted courses"
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            \u003c/h2\u003e"
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            \u003cdiv class\u003d\"panel\"\u003e"
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "dalessr"
        },
        "content": "              \u003cdiv class\u003d\"panel-heading fill-default\"\u003e"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003cdiv class\u003d\"pull-right margin-left-7px\"\u003e"
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                  \u003cspan class\u003d\"glyphicon glyphicon-chevron-down\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003c/div\u003e"
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003ca class\u003d\"btn btn-default btn-xs pull-right pull-down margin-left-7px color-negative\""
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                   data-toggle\u003d\"tooltip\""
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                   data-placement\u003d\"top\"\u003e"
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                  \u003cspan class\u003d\"glyphicon glyphicon-remove\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                  \u003cstrong\u003eDelete All\u003c/strong\u003e"
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003c/a\u003e"
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003ca class\u003d\"btn btn-default btn-xs pull-right pull-down\""
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                   data-toggle\u003d\"tooltip\""
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                   data-placement\u003d\"top\"\u003e"
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                  \u003cspan class\u003d\"glyphicon glyphicon-ok\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                  \u003cstrong\u003eRestore All\u003c/strong\u003e"
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003c/a\u003e"
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003cstrong\u003e"
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                  Recycle Bin"
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003c/strong\u003e"
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "dalessr"
        },
        "content": "              \u003c/div\u003e"
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "dalessr"
        },
        "content": "              \u003cdiv class\u003d\"panel-collapse\"\u003e"
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003cdiv class\u003d\"panel-body padding-0\"\u003e"
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                \u003c/div\u003e"
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "dalessr"
        },
        "content": "              \u003c/div\u003e"
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "dalessr"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "dalessr"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "dalessr"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "dalessr"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cp align\u003d\"right\"\u003e"
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ca href\u003d\"#Top\"\u003eBack to Top\u003c/a\u003e"
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/p\u003e"
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"separate-content-holder\"\u003e"
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003chr\u003e"
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "dalessr": 304,
      "-": 815
    }
  },
  {
    "path": "src/test/java/teammates/test/cases/action/InstructorCourseDeleteActionTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.test.cases.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.CourseAttributes;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.CoursesLogic;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.driver.AssertHelper;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.controller.InstructorCourseDeleteAction;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.controller.RedirectResult;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * SUT: {@link InstructorCourseDeleteAction}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class InstructorCourseDeleteActionTest extends BaseActionTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getActionUri() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        return Const.ActionURIs.INSTRUCTOR_COURSE_DELETE;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testExecuteAndPostProcess() throws Exception {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor1OfCourse1 \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        String instructorId \u003d instructor1OfCourse1.googleId;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        gaeSimulation.loginAsInstructor(instructorId);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Not enough parameters\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyAssumptionFailure();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Typical case, 2 courses, redirect to homepage\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        CoursesLogic.inst().createCourseAndInstructor(instructorId, \"icdct.tpa.id1\", \"New course\", \"UTC\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, instructor1OfCourse1.courseId,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.NEXT_URL, Const.ActionURIs.INSTRUCTOR_HOME_PAGE"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(CoursesLogic.inst().isCoursePresent(\"icdct.tpa.id1\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorCourseDeleteAction deleteAction \u003d getAction(submissionParams);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        RedirectResult redirectResult \u003d getRedirectResult(deleteAction);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                getPageResultDestination(Const.ActionURIs.INSTRUCTOR_HOME_PAGE, false, \"idOfInstructor1OfCourse1\"),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                redirectResult.getDestinationWithParams());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(redirectResult.isError);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        assertEquals(\"The course idOfTypicalCourse1 has been deleted. You can restore it from the \u0027Courses\u0027 tab.\","
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                redirectResult.getStatusMessage());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCourseAttributes\u003e courseList \u003d CoursesLogic.inst().getCoursesForInstructor(instructorId);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, courseList.size());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"icdct.tpa.id1\", courseList.get(0).getId());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedLogMessage \u003d \"TEAMMATESLOG|||instructorCourseDelete|||instructorCourseDelete|||true|||\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                                    + \"Instructor|||Instructor 1 of Course 1|||idOfInstructor1OfCourse1|||\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                                    + \"instr1@course1.tmt|||Course moved to recycle bin: idOfTypicalCourse1|||\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                                    + \"/page/instructorCourseDelete\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertLogMessageEquals(expectedLogMessage, deleteAction.getLogMessage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Masquerade mode, delete last course, redirect to Courses page\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        String adminUserId \u003d \"admin.user\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        gaeSimulation.loginAsAdmin(adminUserId);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, \"icdct.tpa.id1\","
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.NEXT_URL, Const.ActionURIs.INSTRUCTOR_COURSES_PAGE"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        deleteAction \u003d getAction(addUserIdToParams(instructorId, submissionParams));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        redirectResult \u003d getRedirectResult(deleteAction);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(getPageResultDestination(Const.ActionURIs.INSTRUCTOR_COURSES_PAGE, false, \"idOfInstructor1OfCourse1\"),"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                     redirectResult.getDestinationWithParams());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(redirectResult.isError);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        assertEquals(\"The course icdct.tpa.id1 has been deleted. You can restore it from the deleted courses table below.\","
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                redirectResult.getStatusMessage());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        courseList \u003d CoursesLogic.inst().getCoursesForInstructor(instructorId);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, courseList.size());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedLogMessage \u003d \"TEAMMATESLOG|||instructorCourseDelete|||instructorCourseDelete|||true|||Instructor(M)|||\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                             + \"Instructor 1 of Course 1|||idOfInstructor1OfCourse1|||instr1@course1.tmt|||\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                             + \"Course moved to recycle bin: icdct.tpa.id1|||/page/instructorCourseDelete\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertLogMessageEqualsInMasqueradeMode(expectedLogMessage, deleteAction.getLogMessage(), adminUserId);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Masquerade mode, delete last course, no next URL, redirect to Courses page\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        CoursesLogic.inst().createCourseAndInstructor(instructorId, \"icdct.tpa.id2\", \"New course\", \"UTC\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, \"icdct.tpa.id2\","
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        deleteAction \u003d getAction(addUserIdToParams(instructorId, submissionParams));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        redirectResult \u003d getRedirectResult(deleteAction);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(getPageResultDestination(Const.ActionURIs.INSTRUCTOR_COURSES_PAGE, false, \"idOfInstructor1OfCourse1\"),"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                     redirectResult.getDestinationWithParams());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(redirectResult.isError);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        assertEquals(\"The course icdct.tpa.id2 has been deleted. You can restore it from the deleted courses table below.\","
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                redirectResult.getStatusMessage());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        courseList \u003d CoursesLogic.inst().getCoursesForInstructor(instructorId);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, courseList.size());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedLogMessage \u003d \"TEAMMATESLOG|||instructorCourseDelete|||instructorCourseDelete|||true|||Instructor(M)|||\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                             + \"Instructor 1 of Course 1|||idOfInstructor1OfCourse1|||instr1@course1.tmt|||\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                             + \"Course moved to recycle bin: icdct.tpa.id2|||/page/instructorCourseDelete\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertLogMessageEqualsInMasqueradeMode(expectedLogMessage, deleteAction.getLogMessage(), adminUserId);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    protected InstructorCourseDeleteAction getAction(String... params) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        return (InstructorCourseDeleteAction) gaeSimulation.getActionObject(getActionUri(), params);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void testAccessControl() throws Exception {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        CoursesLogic.inst().createCourseAndInstructor("
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                typicalBundle.instructors.get(\"instructor1OfCourse1\").googleId,"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                \"icdat.owncourse\", \"New course\", \"UTC\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, \"icdat.owncourse\""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        /*  Test access for users"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "         *  This should be separated from testing for admin as we need to recreate the course after being removed"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyUnaccessibleWithoutLogin(submissionParams);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyUnaccessibleForUnregisteredUsers(submissionParams);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyUnaccessibleForStudents(submissionParams);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyUnaccessibleForInstructorsOfOtherCourses(submissionParams);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyUnaccessibleWithoutModifyCoursePrivilege(submissionParams);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyAccessibleForInstructorsOfTheSameCourse(submissionParams);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        CoursesLogic.inst().deleteCourseCascade(\"icdat.owncourse\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Test access for admin in masquerade mode */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        CoursesLogic.inst().createCourseAndInstructor("
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                typicalBundle.instructors.get(\"instructor1OfCourse1\").googleId,"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "                \"icdat.owncourse\", \"New course\", \"UTC\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyAccessibleForAdminToMasqueradeAsInstructor(submissionParams);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalessr": 11,
      "-": 138
    }
  },
  {
    "path": "src/test/java/teammates/test/cases/browsertests/AdminHomePageUiTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.test.cases.browsertests;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.BeforeClass;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityDoesNotExistException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.InvalidParametersException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.AppUrl;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Config;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.FieldValidator;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.driver.BackDoor;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.driver.Priority;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.driver.TestProperties;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.pageobjects.AdminHomePage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.pageobjects.AppPage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.pageobjects.FeedbackSubmitPage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.pageobjects.InstructorCourseDetailsPage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.pageobjects.InstructorCourseEditPage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.pageobjects.InstructorCourseEnrollPage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.pageobjects.InstructorCourseJoinConfirmationPage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.pageobjects.InstructorCoursesPage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.pageobjects.InstructorFeedbackResultsPage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.pageobjects.InstructorHomePage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.pageobjects.StudentCourseDetailsPage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.pageobjects.StudentFeedbackResultsPage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.pageobjects.StudentHomePage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.pageobjects.StudentProfilePage;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": " * SUT: {@link Const.ActionURIs#ADMIN_HOME_PAGE}."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "@Priority(6)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "public class AdminHomePageUiTest extends BaseUiTestCase {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    private AdminHomePage homePage;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    private InstructorCoursesPage coursesPage;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void prepareTestData() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        // no test data used in this test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    @BeforeClass"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public void classSetup() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        browser.driver.manage().deleteAllCookies();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testAll() throws InvalidParametersException, EntityDoesNotExistException, Exception {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        testContent();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        //no links to check"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        testCreateInstructorAction();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testContent() throws Exception {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"content: typical page\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        AppUrl homeUrl \u003d createUrl(Const.ActionURIs.ADMIN_HOME_PAGE).withUserId(TestProperties.TEST_ADMIN_ACCOUNT);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage \u003d loginAdminToPage(homeUrl, AdminHomePage.class);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.verifyHtml(\"/adminHomePage.html\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testCreateInstructorAction() throws Exception {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor \u003d new InstructorAttributes();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        instructor.name \u003d \"AHPUiT Instrúctör WithPlusInEmail\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        instructor.email \u003d \"AHPUiT+++_.instr1!@gmail.tmt\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        String institute \u003d \"TEAMMATES Test Institute 1\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        String demoCourseId \u003d \"AHPUiT____.instr1_.gma-demo\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        String instructorDetails \u003d instructor.name + \" | \" + instructor.email + \"\\n\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                                 + instructor.name + \" | \" + instructor.email + \" | \" + institute;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"action fail \u0026 success: add multiple instructors\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        BackDoor.deleteAccount(TestProperties.TEST_INSTRUCTOR_ACCOUNT);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        BackDoor.deleteCourse(demoCourseId);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        BackDoor.deleteInstructor(demoCourseId, instructor.email);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.createInstructorByInstructorDetailsSingleLineForm(instructorDetails);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructorInBackend \u003d getInstructorWithRetry(demoCourseId, instructor.email);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"Instructor Details must have 3 columns\", homePage.getMessageFromResultTable(1));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"Instructor AHPUiT Instrúctör WithPlusInEmail has been successfully created \" + Const.JOIN_LINK,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                homePage.getMessageFromResultTable(2));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        String encryptedKey \u003d getKeyForInstructorWithRetry(demoCourseId, instructor.email);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedjoinUrl \u003d Config.getAppUrl(Const.ActionURIs.INSTRUCTOR_COURSE_JOIN)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                                                        .withRegistrationKey(encryptedKey)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                                                        .withInstructorInstitution(institute)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                                                        .toAbsoluteString();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedJoinLinkUrlFileName \u003d new URL(expectedjoinUrl).getFile();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        String actualJoinLink \u003d homePage.getJoinLink(homePage.getMessageFromResultTable(2));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        String actualJoinLinkUrlFileName \u003d new URL(actualJoinLink).getFile();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedJoinLinkUrlFileName, actualJoinLinkUrlFileName);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(instructor.getName(), instructorInBackend.getName());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(instructor.getEmail(), instructorInBackend.getEmail());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clearInstructorDetailsSingleLineForm();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"action success: displayed instructor details are properly HTML-encoded\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes dangerousInstructor \u003d new InstructorAttributes();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        dangerousInstructor.name \u003d \"Malicious \u003cscript\u003ealert(\u0027dangerous\u0027);\u003c/script\u003eInstrúctör\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        dangerousInstructor.email \u003d \"malicious.instr1\u003c\u003e!@gmail.tmt\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        String dangerousInstitute \u003d \"TEAMMATES Malicious Institute \u003c!@!@!\u003e\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        String dangerousDemoCourseId \u003d \"malicious.instr1___.gma-demo\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        BackDoor.deleteAccount(TestProperties.TEST_INSTRUCTOR_ACCOUNT);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        BackDoor.deleteCourse(dangerousDemoCourseId);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        BackDoor.deleteInstructor(dangerousDemoCourseId, dangerousInstructor.email);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.createInstructor(dangerousInstructor, dangerousInstitute);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(dangerousInstructor.name, homePage.getNameFromResultTable(1));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(dangerousInstructor.email, homePage.getEmailFromResultTable(1));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(dangerousInstitute, homePage.getInstitutionFromResultTable(1));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"action success : create instructor account and the account is created successfully \""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                 + \"after user\u0027s verification\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        BackDoor.deleteAccount(TestProperties.TEST_INSTRUCTOR_ACCOUNT);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        BackDoor.deleteCourse(demoCourseId);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        BackDoor.deleteInstructor(demoCourseId, instructor.email);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.createInstructor(instructor, institute);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"Instructor AHPUiT Instrúctör WithPlusInEmail has been successfully created \" + Const.JOIN_LINK,"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "                homePage.getMessageFromResultTable(1));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        encryptedKey \u003d getKeyForInstructorWithRetry(demoCourseId, instructor.email);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedjoinUrl \u003d Config.getAppUrl(Const.ActionURIs.INSTRUCTOR_COURSE_JOIN)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "                                                        .withRegistrationKey(encryptedKey)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "                                                        .withInstructorInstitution(institute)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "                                                        .toAbsoluteString();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedJoinLinkUrlFileName \u003d new URL(expectedjoinUrl).getFile();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        actualJoinLink \u003d homePage.getJoinLink(homePage.getMessageFromResultTable(1));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        actualJoinLinkUrlFileName \u003d new URL(actualJoinLink).getFile();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedJoinLinkUrlFileName, actualJoinLinkUrlFileName);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.logout();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        //verify the instructor and the demo course have been created"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(getCourseWithRetry(demoCourseId));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(getInstructorWithRetry(demoCourseId, instructor.email));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        //get the joinURL which sent to the requester\u0027s email"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        String regkey \u003d getKeyForInstructorWithRetry(demoCourseId, instructor.email);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        String joinLink \u003d createUrl(Const.ActionURIs.INSTRUCTOR_COURSE_JOIN)"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "                                        .withRegistrationKey(regkey)"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "                                        .withInstructorInstitution(institute)"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "                                        .toAbsoluteString();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        //simulate the user\u0027s verification here because it is added by admin"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        browser.driver.get(joinLink);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorCourseJoinConfirmationPage confirmationPage \u003d"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "                AppPage.createCorrectLoginPageType(browser)"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "                       .loginAsJoiningInstructor(TestProperties.TEST_INSTRUCTOR_ACCOUNT,"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 TestProperties.TEST_INSTRUCTOR_PASSWORD);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        confirmationPage.clickCancelButton();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        browser.driver.get(joinLink);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        confirmationPage \u003d AppPage.createCorrectLoginPageType(browser)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "                           .loginAsJoiningInstructor(TestProperties.TEST_INSTRUCTOR_ACCOUNT,"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "                                                     TestProperties.TEST_INSTRUCTOR_PASSWORD);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        confirmationPage.clickConfirmButtonWithRetry();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        //check a account has been created for the requester successfully"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(getAccountWithRetry(TestProperties.TEST_INSTRUCTOR_ACCOUNT));"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        //verify sample course is accessible for newly joined instructor as an instructor"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"new instructor can see sample course in homepage\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorHomePage instructorHomePage \u003d AppPage.getNewPageInstance(browser, InstructorHomePage.class);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorHomePage.verifyHtmlMainContent(\"/newlyJoinedInstructorHomePage.html\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"new instructor can access sample course details page\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorCourseEnrollPage enrollPage \u003d instructorHomePage.clickCourseEnrollLink(demoCourseId);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorHomePage \u003d enrollPage.goToPreviousPage(InstructorHomePage.class);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorCourseDetailsPage detailsPage \u003d instructorHomePage.clickCourseViewLink(demoCourseId);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        detailsPage.verifyHtmlMainContent(\"/newlyJoinedInstructorCourseDetailsPage.html\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"new instructor can access sample course edit page\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorHomePage \u003d detailsPage.goToPreviousPage(InstructorHomePage.class);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorCourseEditPage editPage \u003d instructorHomePage.clickCourseEditLink(demoCourseId);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        editPage.verifyHtmlMainContent(\"/newlyJoinedInstructorCourseEditPage.html\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"new instructor can view feedback sessions of sample course\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        AppUrl url \u003d createUrl(Const.ActionURIs.INSTRUCTOR_COURSES_PAGE)"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "                .withUserId(TestProperties.TEST_INSTRUCTOR_ACCOUNT);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage \u003d AppPage.getNewPageInstance(browser, url, InstructorCoursesPage.class);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.waitForAjaxLoadCoursesSuccess();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCanViewSessionResults(demoCourseId, \"First team feedback session\","
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/newlyJoinedInstructorFirstFeedbackSessionResultsPage.html\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCanViewSessionResults(demoCourseId, \"Second team feedback session\","
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/newlyJoinedInstructorSecondFeedbackSessionResultsPage.html\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCanViewSessionResults(demoCourseId, \"Session with different question types\","
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/newlyJoinedInstructorThirdFeedbackSessionResultsPage.html\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"action failure : trying to create instructor with an invalid email\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        AppUrl homeUrl \u003d createUrl(Const.ActionURIs.ADMIN_HOME_PAGE);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage \u003d loginAdminToPage(homeUrl, AdminHomePage.class);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        instructor.email \u003d \"AHPUiT.email.tmt\";"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.createInstructor(instructor, institute);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(getPopulatedErrorMessage("
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "                         FieldValidator.EMAIL_ERROR_MESSAGE, instructor.email,"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "                         FieldValidator.EMAIL_FIELD_NAME, FieldValidator.REASON_INCORRECT_FORMAT,"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "                         FieldValidator.EMAIL_MAX_LENGTH),"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "                     homePage.getMessageFromResultTable(1));"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"action success: course is accessible for newly joined instructor as student\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        //in staging server, the student account uses the hardcoded email above, so this can only be test on dev server"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!TestProperties.isDevServer()) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "            BackDoor.deleteCourse(demoCourseId);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "            BackDoor.deleteAccount(TestProperties.TEST_INSTRUCTOR_ACCOUNT);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "            BackDoor.deleteInstructor(demoCourseId, instructor.email);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "        //verify sample course is accessible for newly joined instructor as an student"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentHomePage studentHomePage \u003d"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "                getHomePage().clickStudentLogin().loginAsStudent(TestProperties.TEST_INSTRUCTOR_ACCOUNT,"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                 TestProperties.TEST_INSTRUCTOR_PASSWORD);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "        studentHomePage.verifyContains(demoCourseId);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        studentHomePage.clickViewTeam();"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentCourseDetailsPage courseDetailsPage \u003d AppPage.getNewPageInstance(browser, StudentCourseDetailsPage.class);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "        courseDetailsPage.verifyHtmlMainContent(\"/newlyJoinedInstructorStudentCourseDetailsPage.html\");"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        studentHomePage \u003d courseDetailsPage.goToPreviousPage(StudentHomePage.class);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        studentHomePage.clickViewFeedbackButton(\"First team feedback session\");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentFeedbackResultsPage sfrp \u003d AppPage.getNewPageInstance(browser, StudentFeedbackResultsPage.class);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        sfrp.verifyHtmlMainContent(\"/newlyJoinedInstructorStudentFeedbackResultsPage.html\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        studentHomePage \u003d sfrp.goToPreviousPage(StudentHomePage.class);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "        studentHomePage.clickEditFeedbackButton(\"First team feedback session\");"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSubmitPage fsp \u003d AppPage.getNewPageInstance(browser, FeedbackSubmitPage.class);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "        fsp.verifyHtmlMainContent(\"/newlyJoinedInstructorStudentFeedbackSubmissionEdit.html\");"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "        studentHomePage \u003d fsp.loadStudentHomeTab();"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentProfilePage spp \u003d studentHomePage.loadProfileTab();"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "        spp.verifyContains(\"Student Profile\");"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        spp.verifyContains(\"AHPUiT Instrúctör WithPlusInEmail\");"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "        studentHomePage.logout();"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "        //login in as instructor again to test sample course deletion"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorHomePage \u003d"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "                getHomePage().clickInstructorLogin().loginAsInstructor(TestProperties.TEST_INSTRUCTOR_ACCOUNT,"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                       TestProperties.TEST_INSTRUCTOR_PASSWORD);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorHomePage.clickAndConfirm(instructorHomePage.getDeleteCourseLink(demoCourseId));"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(instructorHomePage.getTextsForAllStatusMessagesToUser()"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                .contains(\"The course \" + demoCourseId + \" has been deleted. You can restore it from the \u0027Courses\u0027 tab.\"));"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorHomePage.logout();"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "        BackDoor.deleteAccount(TestProperties.TEST_INSTRUCTOR_ACCOUNT);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "        BackDoor.deleteCourse(demoCourseId);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "        BackDoor.deleteInstructor(demoCourseId, instructor.email);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "        BackDoor.deleteAccount(TestProperties.TEST_INSTRUCTOR_ACCOUNT);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "        BackDoor.deleteCourse(dangerousDemoCourseId);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        BackDoor.deleteInstructor(dangerousDemoCourseId, dangerousInstructor.email);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "    private void verifyCanViewSessionResults("
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "            String courseId, String sessionName, String pathToExpectedHtml) throws Exception {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorHomePage instructorHomePage \u003d coursesPage.loadInstructorHomeTab();"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorFeedbackResultsPage resultsPage \u003d"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorHomePage.clickFeedbackSessionViewResultsLink(courseId, sessionName);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "        resultsPage.expandPanels();"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "        resultsPage.verifyHtmlMainContent(pathToExpectedHtml);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalessr": 1,
      "-": 290
    }
  },
  {
    "path": "src/test/java/teammates/test/cases/browsertests/InstructorCourseEditPageUiTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.test.cases.browsertests;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.openqa.selenium.By;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.InstructorPrivileges;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.AppUrl;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.FieldValidator;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.driver.BackDoor;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.driver.StringHelperExtension;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.pageobjects.AppPage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.pageobjects.InstructorCourseDetailsPage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.pageobjects.InstructorCourseEditPage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.pageobjects.InstructorCoursesPage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " * SUT: {@link Const.ActionURIs#INSTRUCTOR_COURSE_EDIT_PAGE}."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "public class InstructorCourseEditPageUiTest extends BaseUiTestCase {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private InstructorCourseEditPage courseEditPage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private String instructorId;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private String courseId;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private String newInstructorName;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private String newInstructorEmail;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void prepareTestData() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        testData \u003d loadDataBundle(\"/InstructorCourseEditPageUiTest.json\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        removeAndRestoreDataBundle(testData);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorId \u003d testData.instructors.get(\"InsCrsEdit.test\").googleId;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        courseId \u003d testData.courses.get(\"InsCrsEdit.CS2104\").getId();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        newInstructorName \u003d \"Teammates Instructor\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        newInstructorEmail \u003d \"InsCrsEdit.instructor@gmail.tmt\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public void allTests() throws Exception {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        testContent();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        testEditInstructorLink();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        testCancelEditInstructorLink();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        testNewInstructorLink();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        testInputValidation();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        testInviteInstructorAction();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        testCancelAddInstructor();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        testAddInstructorAction();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        testEditInstructorAction();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        testCancelEditInstructorAction();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        testDeleteInstructorAction();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        testUnregisteredInstructorEmailNotEditable();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        testEditCourseAction();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        testDeleteCourseAction();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        testSanitization();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testContent() throws Exception {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"page load: Helper privileges (custom)\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorId \u003d testData.instructors.get(\"InsCrsEdit.Helper\").googleId;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage \u003d getCourseEditPage();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        // This is the full HTML verification for Instructor Course Edit Page, the rest can all be verifyMainHtml"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.verifyHtml(\"/instructorCourseEditHelper.html\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"page load: Co-owner privileges\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorId \u003d testData.instructors.get(\"InsCrsEdit.test\").googleId;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage \u003d getCourseEditPage();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.verifyHtmlMainContent(\"/instructorCourseEditCoowner.html\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"page load: Manager privileges\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorId \u003d testData.instructors.get(\"InsCrsEdit.manager\").googleId;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage \u003d getCourseEditPage();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.verifyHtmlMainContent(\"/instructorCourseEditManager.html\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"page load: Observer privileges\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorId \u003d testData.instructors.get(\"InsCrsEdit.observer\").googleId;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage \u003d getCourseEditPage();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.verifyHtmlMainContent(\"/instructorCourseEditObserver.html\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"page load: Tutor privileges\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorId \u003d testData.instructors.get(\"InsCrsEdit.tutor\").googleId;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage \u003d getCourseEditPage();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.verifyHtmlMainContent(\"/instructorCourseEditTutor.html\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"go back to co-owner privileges\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorId \u003d testData.instructors.get(\"InsCrsEdit.test\").googleId;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage \u003d getCourseEditPage();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testEditInstructorLink() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"edit instructor link\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickEditInstructorLink(1);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isInstructorEditable(1));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testCancelEditInstructorLink() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"cancel edit instructor link\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickCancelEditInstructorLink(1);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.verifyInstructorEditFormDisabled(1);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testNewInstructorLink() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"add new instructor link\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.clickShowNewInstructorFormButton());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.clickOnNewInstructorAccessLevelViewDetails(\"Co-owner\"));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.clickOnNewInstructorAccessLevelViewDetails(\"Manager\"));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.clickOnNewInstructorAccessLevelViewDetails(\"Observer\"));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.clickOnNewInstructorAccessLevelViewDetails(\"Tutor\"));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testInputValidation() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Checking max-length enforcement by the text boxes\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        String maxLengthInstructorName \u003d StringHelperExtension.generateStringOfLength(FieldValidator.PERSON_NAME_MAX_LENGTH);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        String longInstructorName \u003d StringHelperExtension.generateStringOfLength(FieldValidator.PERSON_NAME_MAX_LENGTH + 1);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickEditInstructorLink(1);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickShowNewInstructorFormButton();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        // Add instructor"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(maxLengthInstructorName, courseEditPage.fillNewInstructorName(maxLengthInstructorName));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(longInstructorName.substring(0, FieldValidator.PERSON_NAME_MAX_LENGTH),"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "                     courseEditPage.fillNewInstructorName(longInstructorName));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        // Edit instructor"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(maxLengthInstructorName, courseEditPage.editInstructorName(1, maxLengthInstructorName));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(longInstructorName.substring(0, FieldValidator.PERSON_NAME_MAX_LENGTH),"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "                     courseEditPage.editInstructorName(1, longInstructorName));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        String maxLengthEmail \u003d StringHelperExtension.generateStringOfLength(FieldValidator.EMAIL_MAX_LENGTH);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        String longEmail \u003d StringHelperExtension.generateStringOfLength(FieldValidator.EMAIL_MAX_LENGTH + 1);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        // Add instructor"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(maxLengthEmail, courseEditPage.fillNewInstructorEmail(maxLengthEmail));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(longEmail.substring(0, FieldValidator.EMAIL_MAX_LENGTH),"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                     courseEditPage.fillNewInstructorEmail(longEmail));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        // Edit instructor"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(maxLengthEmail, courseEditPage.editInstructorEmail(1, maxLengthEmail));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(longEmail.substring(0, FieldValidator.EMAIL_MAX_LENGTH),"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "                     courseEditPage.editInstructorEmail(1, longEmail));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testInviteInstructorAction() {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"success: invite an uregistered instructor\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        int unregisteredInstructorIndex \u003d 4;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickInviteInstructorLink(unregisteredInstructorIndex);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.waitForTextsForAllStatusMessagesToUserEquals("
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.StatusMessages.COURSE_REMINDER_SENT_TO + \"InsCrsEdit.newInstr@gmail.tmt\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testCancelAddInstructor() {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Click cancel button upon new form created\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickShowNewInstructorFormButton();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.verifyAddInstructorFormDisplayed());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickCancelAddInstructorLink();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.verifyAddInstructorFormDisplayed());"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Click cancel button after filling all fields of the form\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        int newInstructorIndex \u003d 8;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickShowNewInstructorFormButton();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.verifyAddInstructorFormDisplayed());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.fillNewInstructorName(newInstructorName);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.fillNewInstructorEmail(newInstructorEmail);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.fillNewInstructorDisplayName(\"Test Display\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.selectRoleForNewInstructor(newInstructorIndex, \"Observer\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickCancelAddInstructorLink();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.verifyAddInstructorFormDisplayed());"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Confirm form is reset to default values\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickShowNewInstructorFormButton();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.verifyAddInstructorFormDisplayed());"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"\", courseEditPage.getNewInstructorName());"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"\", courseEditPage.getNewInstructorEmail());"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.verifyAddInstructorFormDefaultValues(newInstructorIndex));"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickCancelAddInstructorLink();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.verifyAddInstructorFormDisplayed());"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testAddInstructorAction() throws Exception {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"success: add an instructor with privileges\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickShowNewInstructorFormButton();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.fillNewInstructorName(newInstructorName);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.fillNewInstructorEmail(newInstructorEmail);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        int newInstructorIndex \u003d 8;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.selectRoleForInstructor(newInstructorIndex, \"Custom\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickCourseLevelPrivilegesLink("
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "                newInstructorIndex, InstructorCourseEditPage.COURSE_MODIFY_COURSE);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickCourseLevelPrivilegesLink("
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "                newInstructorIndex, InstructorCourseEditPage.COURSE_MODIFY_STUDENTS);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickAddSectionLevelPrivilegesLink(newInstructorIndex);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSectionSelectionCheckBox(newInstructorIndex, 0, 1);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSectionLevelPrivilegeLink("
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "                newInstructorIndex, 0, InstructorCourseEditPage.SECTION_VIEW_STUDENTS);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSectionLevelPrivilegeLink("
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "                newInstructorIndex, 0, InstructorCourseEditPage.SECTION_VIEW_RESPONSES_IN_SESSION);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickAddInstructorButton();"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.waitForTextsForAllStatusMessagesToUserEquals("
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "                String.format(Const.StatusMessages.COURSE_INSTRUCTOR_ADDED,"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "                        \"Teammates Instructor\", \"InsCrsEdit.instructor@gmail.tmt\"));"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        AppUrl courseDetailsLink \u003d createUrl(Const.ActionURIs.INSTRUCTOR_COURSE_DETAILS_PAGE)"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "                                    .withCourseId(courseId)"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "                                    .withUserId(testData.instructors.get(\"InsCrsEdit.test\").googleId);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorCourseDetailsPage courseDetailsPage \u003d AppPage.getNewPageInstance(browser,"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                courseDetailsLink, InstructorCourseDetailsPage.class);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        courseDetailsPage.verifyHtmlPart(By.id(\"instructors\"), \"/instructorCourseDetailsAddInstructor.html\");"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage \u003d getCourseEditPage();"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickEditInstructorLink(3);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.verifyHtmlMainContent(\"/instructorCourseEditAddInstructor.html\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"failure: add an existing instructor\");"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.addNewInstructor(\"Teammates Instructor\", \"InsCrsEdit.instructor@gmail.tmt\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.waitForTextsForAllStatusMessagesToUserEquals(Const.StatusMessages.COURSE_INSTRUCTOR_EXISTS);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"failure: add an instructor with an invalid parameter\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        String invalidEmail \u003d \"InsCrsEdit.email.tmt\";"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.addNewInstructor(\"Teammates Instructor\", invalidEmail);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.waitForTextsForAllStatusMessagesToUserEquals("
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "                new FieldValidator().getInvalidityInfoForEmail(invalidEmail));"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "        String invalidName \u003d \"\";"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.addNewInstructor(invalidName, \"teammates@email.tmt\");"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.waitForTextsForAllStatusMessagesToUserEquals("
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "                new FieldValidator().getInvalidityInfoForPersonName(invalidName));"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testEditInstructorAction() throws Exception {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"failure: ajax error on clicking edit button\");"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "        int editInstructorIndex \u003d 1;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.changeCourseIdInForm(editInstructorIndex, \"InvalidCourse\");"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickEditInstructorLinkUnsuccessfully(editInstructorIndex);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.waitForAjaxLoaderGifToDisappear();"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.getEditInstructorLink(editInstructorIndex).getText().contains(\"Edit failed.\"));"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.reloadPage();"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"success: edit instructor, make hidden and verify changes\");"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.editInstructor(editInstructorIndex, \"New name\", \"new_email@email.tmt\", false, \"\","
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_COOWNER);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.waitForTextsForAllStatusMessagesToUserEquals("
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "                String.format(Const.StatusMessages.COURSE_INSTRUCTOR_EDITED, \"New name\"));"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.verifyInstructorDetails(editInstructorIndex, \"New name\", \"new_email@email.tmt\","
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "                false, \"\", Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_COOWNER);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"success: unhide instructor and verify changes\");"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.editInstructor(editInstructorIndex, \"New name\", \"new_email@email.tmt\", true, \"New display name\","
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "                                      Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_COOWNER);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.waitForTextsForAllStatusMessagesToUserEquals("
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "                String.format(Const.StatusMessages.COURSE_INSTRUCTOR_EDITED, \"New name\"));"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.verifyInstructorDetails(editInstructorIndex, \"New name\", \"new_email@email.tmt\","
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "                true, \"New display name\", Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_COOWNER);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"success: edit yet-to-join instructor, make hidden and verify changes\");"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "        editInstructorIndex \u003d 3;"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.editInstructor(editInstructorIndex, \"New name\", \"InsCrsEdit.instructor@gmail.tmt\", false, \"\","
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_COOWNER);"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.waitForTextsForAllStatusMessagesToUserEquals("
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "                String.format(Const.StatusMessages.COURSE_INSTRUCTOR_EDITED, \"New name\"));"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isInstructorListSortedByName());"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"success: unhide yet-to-join instructor and verify changes\");"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.editInstructor(editInstructorIndex, \"New name\", \"InsCrsEdit.instructor@gmail.tmt\", true,"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "                \"New display name\", Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_COOWNER);"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.waitForTextsForAllStatusMessagesToUserEquals("
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "                String.format(Const.StatusMessages.COURSE_INSTRUCTOR_EDITED, \"New name\"));"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"success: edit an instructor (InsCrsEdit.coord)--viewing instructor permission details\");"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "        editInstructorIndex \u003d 1;"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickEditInstructorLink(editInstructorIndex);"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isInstructorEditable(editInstructorIndex));"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"view details: manager\");"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickViewDetailsLinkForInstructor("
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "                editInstructorIndex, InstructorCourseEditPage.INSTRUCTOR_TYPE_MANAGER);"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isPrivilegeCheckboxInModalChecked(Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_COURSE));"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isPrivilegeCheckboxInModalChecked("
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_INSTRUCTOR));"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isPrivilegeCheckboxInModalChecked(Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_SESSION));"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isPrivilegeCheckboxInModalChecked(Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_STUDENT));"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isPrivilegeCheckboxInModalChecked("
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_VIEW_STUDENT_IN_SECTIONS));"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isPrivilegeCheckboxInModalChecked("
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_SUBMIT_SESSION_IN_SECTIONS));"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isPrivilegeCheckboxInModalChecked("
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_VIEW_SESSION_IN_SECTIONS));"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isPrivilegeCheckboxInModalChecked("
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_SESSION_COMMENT_IN_SECTIONS));"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.closeModal();"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"view details: observer\");"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickViewDetailsLinkForInstructor("
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "                editInstructorIndex, InstructorCourseEditPage.INSTRUCTOR_TYPE_OBSERVER);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isPrivilegeCheckboxInModalChecked(Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_COURSE));"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isPrivilegeCheckboxInModalChecked("
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_INSTRUCTOR));"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isPrivilegeCheckboxInModalChecked("
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_SESSION));"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isPrivilegeCheckboxInModalChecked("
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_STUDENT));"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isPrivilegeCheckboxInModalChecked("
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_VIEW_STUDENT_IN_SECTIONS));"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isPrivilegeCheckboxInModalChecked("
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_SUBMIT_SESSION_IN_SECTIONS));"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isPrivilegeCheckboxInModalChecked("
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_VIEW_SESSION_IN_SECTIONS));"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isPrivilegeCheckboxInModalChecked("
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_SESSION_COMMENT_IN_SECTIONS));"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.closeModal();"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"view details: tutor\");"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickViewDetailsLinkForInstructor("
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "                editInstructorIndex, InstructorCourseEditPage.INSTRUCTOR_TYPE_TUTOR);"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isPrivilegeCheckboxInModalChecked(Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_COURSE));"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isPrivilegeCheckboxInModalChecked("
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_INSTRUCTOR));"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isPrivilegeCheckboxInModalChecked("
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_SESSION));"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isPrivilegeCheckboxInModalChecked("
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_STUDENT));"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isPrivilegeCheckboxInModalChecked("
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_VIEW_STUDENT_IN_SECTIONS));"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isPrivilegeCheckboxInModalChecked("
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_SUBMIT_SESSION_IN_SECTIONS));"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isPrivilegeCheckboxInModalChecked("
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_VIEW_SESSION_IN_SECTIONS));"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isPrivilegeCheckboxInModalChecked("
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_SESSION_COMMENT_IN_SECTIONS));"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.closeModal();"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"view details: co-owner\");"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickViewDetailsLinkForInstructor("
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "                editInstructorIndex, InstructorCourseEditPage.INSTRUCTOR_TYPE_COOWNER);"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.verifyHtmlMainContent(\"/instructorCourseEditEditInstructorPrivilegesModal.html\");"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.closeModal();"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"verify that custom has no privileges by default\");"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "        int customInstrNum \u003d 5;"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickEditInstructorLink(customInstrNum);"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(customInstrNum,"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "                \"canmodifycourse\"));"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(customInstrNum,"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "                \"canmodifyinstructor\"));"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(customInstrNum,"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "                \"canmodifysession\"));"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(customInstrNum,"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "                \"canmodifystudent\"));"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(customInstrNum,"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "                \"canviewstudentinsection\"));"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(customInstrNum,"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "                \"cansubmitsessioninsection\"));"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(customInstrNum,"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "                \"canviewsessioninsection\"));"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(customInstrNum,"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "                \"canmodifysessioncommentinsection\"));"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSaveInstructorButton(customInstrNum);"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"success: edit an instructor with privileges\");"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickEditInstructorLink(editInstructorIndex);"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.getDisplayedToStudentCheckBox(editInstructorIndex).isSelected());"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "        // not displayed to students"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickDisplayedToStudentCheckBox(editInstructorIndex);"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "        // select the role as Custom for instr1"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.selectRoleForInstructor(editInstructorIndex, \"Custom\");"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "        // deselect some privileges from Co-owner default values"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickCourseLevelPrivilegesLink("
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "                editInstructorIndex, InstructorCourseEditPage.COURSE_MODIFY_COURSE);"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickCourseLevelPrivilegesLink("
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "                editInstructorIndex, InstructorCourseEditPage.COURSE_MODIFY_INSTRUCTORS);"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickAddSectionLevelPrivilegesLink(editInstructorIndex);"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSectionSelectionCheckBox(editInstructorIndex, 0, 0);"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSectionSelectionCheckBox(editInstructorIndex, 0, 1);"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSectionLevelPrivilegeLink("
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "                editInstructorIndex, 0, InstructorCourseEditPage.SECTION_VIEW_STUDENTS);"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSectionLevelPrivilegeLink("
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "                editInstructorIndex, 0, InstructorCourseEditPage.SECTION_VIEW_RESPONSES_IN_SESSION);"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSessionLevelInSectionLevel(editInstructorIndex, 0);"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickAddSectionLevelPrivilegesLink(editInstructorIndex);"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSectionSelectionCheckBox(editInstructorIndex, 1, 1);"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickAddSectionLevelPrivilegesLink(editInstructorIndex);"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSectionSelectionCheckBox(editInstructorIndex, 2, 1);"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSectionSelectionCheckBox(editInstructorIndex, 2, 2);"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSectionLevelPrivilegeLink("
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "                editInstructorIndex, 2, InstructorCourseEditPage.SECTION_MODIFY_RESPONSES_IN_SESSION);"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "        // after 3 sections added, no more things to add"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.getAddSectionLevelPrivilegesLink(editInstructorIndex).isDisplayed());"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.verifyHtmlMainContent(\"/instructorCourseEditEditInstructorPrivilegesBeforeSubmit.html\");"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSaveInstructorButton(editInstructorIndex);"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.verifyHtmlMainContent(\"/instructorCourseEditEditInstructorPrivilegesSuccessful.html\");"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickEditInstructorLink(editInstructorIndex);"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isInstructorEditable(editInstructorIndex));"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.verifyHtmlMainContent("
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "                            \"/instructorCourseEditEditInstructorPrivilegesSuccessfulAndCheckEditAgain.html\");"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSaveInstructorButton(editInstructorIndex);"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"failure: edit failed due to invalid parameters\");"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "        String invalidEmail \u003d \"InsCrsEdit.email.tmt\";"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.editInstructor(editInstructorIndex, \"New name\", invalidEmail, true, \"New display name\","
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "                                      Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_COOWNER);"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.waitForTextsForAllStatusMessagesToUserEquals("
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "                new FieldValidator().getInvalidityInfoForEmail(invalidEmail));"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "        String invalidName \u003d \"\";"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.editInstructor(editInstructorIndex, invalidName, \"teammates@email.tmt\", true, \"New display name\","
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "                                      Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_COOWNER);"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.waitForTextsForAllStatusMessagesToUserEquals("
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "                new FieldValidator().getInvalidityInfoForPersonName(invalidName));"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"success: test Custom radio button getting other privileges\u0027 default values when selected\");"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "        editInstructorIndex \u003d 2;"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickEditInstructorLink(editInstructorIndex);"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"tutor-\u003ecustom\");"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.selectRoleForInstructor(editInstructorIndex, \"Tutor\");"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSaveInstructorButton(editInstructorIndex);"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickEditInstructorLink(editInstructorIndex);"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.selectRoleForInstructor(editInstructorIndex, \"Custom\");"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(editInstructorIndex,"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_COURSE));"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(editInstructorIndex,"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_INSTRUCTOR));"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(editInstructorIndex,"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_SESSION));"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(editInstructorIndex,"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_STUDENT));"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(editInstructorIndex,"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_VIEW_STUDENT_IN_SECTIONS));"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(editInstructorIndex,"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_SUBMIT_SESSION_IN_SECTIONS));"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(editInstructorIndex,"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_VIEW_SESSION_IN_SECTIONS));"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(editInstructorIndex,"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_SESSION_COMMENT_IN_SECTIONS));"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"observer-\u003ecustom\");"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.selectRoleForInstructor(editInstructorIndex, \"Observer\");"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSaveInstructorButton(editInstructorIndex);"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickEditInstructorLink(editInstructorIndex);"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.selectRoleForInstructor(editInstructorIndex, \"Custom\");"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(editInstructorIndex,"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_COURSE));"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(editInstructorIndex,"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_INSTRUCTOR));"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(editInstructorIndex,"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_SESSION));"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(editInstructorIndex,"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_STUDENT));"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(editInstructorIndex,"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_VIEW_STUDENT_IN_SECTIONS));"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(editInstructorIndex,"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_SUBMIT_SESSION_IN_SECTIONS));"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(editInstructorIndex,"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_VIEW_SESSION_IN_SECTIONS));"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(editInstructorIndex,"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_SESSION_COMMENT_IN_SECTIONS));"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"manager-\u003ecustom\");"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.selectRoleForInstructor(editInstructorIndex, \"Manager\");"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSaveInstructorButton(editInstructorIndex);"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickEditInstructorLink(editInstructorIndex);"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.selectRoleForInstructor(editInstructorIndex, \"Custom\");"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(editInstructorIndex,"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_COURSE));"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(editInstructorIndex,"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_INSTRUCTOR));"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(editInstructorIndex,"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_SESSION));"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(editInstructorIndex,"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_STUDENT));"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(editInstructorIndex,"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_VIEW_STUDENT_IN_SECTIONS));"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(editInstructorIndex,"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_SUBMIT_SESSION_IN_SECTIONS));"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(editInstructorIndex,"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_VIEW_SESSION_IN_SECTIONS));"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(editInstructorIndex,"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_SESSION_COMMENT_IN_SECTIONS));"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"co-owner-\u003ecustom\");"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.selectRoleForInstructor(editInstructorIndex, \"Co-owner\");"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSaveInstructorButton(editInstructorIndex);"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickEditInstructorLink(editInstructorIndex);"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.selectRoleForInstructor(editInstructorIndex, \"Custom\");"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(editInstructorIndex,"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_COURSE));"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(editInstructorIndex,"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_INSTRUCTOR));"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(editInstructorIndex,"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_SESSION));"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(editInstructorIndex,"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_STUDENT));"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(editInstructorIndex,"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_VIEW_STUDENT_IN_SECTIONS));"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(editInstructorIndex,"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_SUBMIT_SESSION_IN_SECTIONS));"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(editInstructorIndex,"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_VIEW_SESSION_IN_SECTIONS));"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked(editInstructorIndex,"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_SESSION_COMMENT_IN_SECTIONS));"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"verify that session level checkboxes are accessible\");"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "        int sectionToCheck \u003d 0;"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickAddSectionLevelPrivilegesLink(editInstructorIndex);"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSessionLevelInSectionLevel(editInstructorIndex, sectionToCheck);"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isTuneSessionPermissionsDivVisible(editInstructorIndex, sectionToCheck));"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"verify checkbox toggling to false\");"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "        int sessionToCheck \u003d 0;"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "        // course level"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickCourseLevelPrivilegesLink("
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "                editInstructorIndex, InstructorCourseEditPage.COURSE_VIEW_STUDENTS);"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked("
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "                editInstructorIndex, Const.ParamsNames.INSTRUCTOR_PERMISSION_VIEW_STUDENT_IN_SECTIONS));"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickCourseLevelPrivilegesLink("
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "                editInstructorIndex, InstructorCourseEditPage.COURSE_VIEW_RESPONSES_IN_SESSION);"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked("
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "                editInstructorIndex, Const.ParamsNames.INSTRUCTOR_PERMISSION_VIEW_SESSION_IN_SECTIONS));"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked("
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "                editInstructorIndex, Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_SESSION_COMMENT_IN_SECTIONS));"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "        // section level"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSectionLevelPrivilegeLink("
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "                editInstructorIndex, sectionToCheck, InstructorCourseEditPage.SECTION_VIEW_STUDENTS);"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isSectionLevelPrivilegeLinkClicked("
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "                editInstructorIndex, sectionToCheck, InstructorCourseEditPage.SECTION_VIEW_STUDENTS));"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSectionLevelPrivilegeLink(editInstructorIndex,"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "                sectionToCheck, InstructorCourseEditPage.SECTION_VIEW_RESPONSES_IN_SESSION);"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isSectionLevelPrivilegeLinkClicked(editInstructorIndex,"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "                sectionToCheck, InstructorCourseEditPage.SECTION_VIEW_RESPONSES_IN_SESSION));"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isSectionLevelPrivilegeLinkClicked(editInstructorIndex,"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "                sectionToCheck, InstructorCourseEditPage.SECTION_MODIFY_RESPONSES_IN_SESSION));"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "        // session level"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSessionLevelPrivilegeLink(editInstructorIndex,"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "                sectionToCheck, sessionToCheck, InstructorCourseEditPage.SESSION_VIEW_RESPONSES);"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isSessionLevelPrivilegeLinkClicked(editInstructorIndex,"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "                sectionToCheck, sessionToCheck, InstructorCourseEditPage.SESSION_VIEW_RESPONSES));"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isSessionLevelPrivilegeLinkClicked(editInstructorIndex,"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "                sectionToCheck, sessionToCheck, InstructorCourseEditPage.SESSION_MODIFY_RESPONSES));"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"verify checkbox toggling to true\");"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "        // course level"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickCourseLevelPrivilegesLink("
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "                editInstructorIndex, InstructorCourseEditPage.COURSE_MODIFY_RESPONSES_IN_SESSION);"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked("
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "                editInstructorIndex, Const.ParamsNames.INSTRUCTOR_PERMISSION_VIEW_SESSION_IN_SECTIONS));"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isPrivilegeCheckboxInPermissionDivChecked("
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "                editInstructorIndex, Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_SESSION_COMMENT_IN_SECTIONS));"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "        // section level"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSectionLevelPrivilegeLink(editInstructorIndex,"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "                sectionToCheck, InstructorCourseEditPage.SECTION_MODIFY_RESPONSES_IN_SESSION);"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isSectionLevelPrivilegeLinkClicked(editInstructorIndex,"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "                sectionToCheck, InstructorCourseEditPage.SECTION_VIEW_RESPONSES_IN_SESSION));"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isSectionLevelPrivilegeLinkClicked(editInstructorIndex,"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "                sectionToCheck, InstructorCourseEditPage.SECTION_MODIFY_RESPONSES_IN_SESSION));"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "        // session level"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSessionLevelPrivilegeLink(editInstructorIndex,"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "                sectionToCheck, sessionToCheck, InstructorCourseEditPage.SESSION_MODIFY_RESPONSES);"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isSessionLevelPrivilegeLinkClicked(editInstructorIndex,"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "                sectionToCheck, sessionToCheck, InstructorCourseEditPage.SESSION_VIEW_RESPONSES));"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isSessionLevelPrivilegeLinkClicked(editInstructorIndex,"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "                sectionToCheck, sessionToCheck, InstructorCourseEditPage.SESSION_MODIFY_RESPONSES));"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.selectRoleForInstructor(editInstructorIndex, \"Co-owner\");"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testCancelEditInstructorAction() throws Exception {"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"success: cancel editing an instructor role from Co-owner to Manager\");"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "        int editInstructorIndex \u003d 7;"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickEditInstructorLink(editInstructorIndex);"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.selectRoleForInstructor(editInstructorIndex, \"Manager\");"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickCancelEditInstructorLink(editInstructorIndex);"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isRoleSelectedForInstructor(editInstructorIndex, \"Manager\"));"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isRoleSelectedForInstructor(editInstructorIndex, \"Co-owner\"));"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"success: cancel editing an instructor role from Co-owner to Custom\");"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickEditInstructorLink(editInstructorIndex);"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.selectRoleForInstructor(editInstructorIndex, \"Custom\");"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickCourseLevelPrivilegesLink("
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "                editInstructorIndex, InstructorCourseEditPage.COURSE_MODIFY_INSTRUCTORS);"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickAddSectionLevelPrivilegesLink(editInstructorIndex);"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSectionSelectionCheckBox(editInstructorIndex, 0, 0);"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSectionLevelPrivilegeLink("
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": "                editInstructorIndex, 0, InstructorCourseEditPage.SECTION_VIEW_STUDENTS);"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSessionLevelInSectionLevel(editInstructorIndex, 0);"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickAddSectionLevelPrivilegesLink(editInstructorIndex);"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSectionSelectionCheckBox(editInstructorIndex, 1, 1);"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSectionLevelPrivilegeLink("
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "                editInstructorIndex, 1, InstructorCourseEditPage.SECTION_VIEW_STUDENTS);"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickAddSectionLevelPrivilegesLink(editInstructorIndex);"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSectionSelectionCheckBox(editInstructorIndex, 2, 2);"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSectionLevelPrivilegeLink("
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "                editInstructorIndex, 2, InstructorCourseEditPage.SECTION_VIEW_STUDENTS);"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickCancelEditInstructorLink(editInstructorIndex);"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.verifyHtmlPart(By.id(\"formEditInstructor\" + editInstructorIndex),"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "                                      \"/instructorCourseEditCancelEditCoownerForm.html\");"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickEditInstructorLink(editInstructorIndex);"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isTunePermissionsDivVisible(editInstructorIndex));"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"success: cancel editing an instructor role from Custom to Co-owner\");"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": "        editInstructorIndex \u003d 1;"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickEditInstructorLink(editInstructorIndex);"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.selectRoleForInstructor(editInstructorIndex, \"Co-owner\");"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickCancelEditInstructorLink(editInstructorIndex);"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.verifyHtmlPart(By.id(\"formEditInstructor\" + editInstructorIndex),"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "                                      \"/instructorCourseEditCancelEditCustomInstructorForm.html\");"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"success: cancel editing a Custom instructor\u0027s permissions\");"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickEditInstructorLink(editInstructorIndex);"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickCourseLevelPrivilegesLink("
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "                editInstructorIndex, InstructorCourseEditPage.COURSE_MODIFY_INSTRUCTORS);"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSectionSelectionCheckBox(editInstructorIndex, 0, 0);"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSectionLevelPrivilegeLink("
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "                editInstructorIndex, 0, InstructorCourseEditPage.SECTION_VIEW_STUDENTS);"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSectionSelectionCheckBox(editInstructorIndex, 1, 1);"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSectionLevelPrivilegeLink("
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": "                editInstructorIndex, 1, InstructorCourseEditPage.SECTION_VIEW_STUDENTS);"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickHideSectionLevelPrivileges(editInstructorIndex, 2);"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickCancelEditInstructorLink(editInstructorIndex);"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.verifyHtmlPart(By.id(\"formEditInstructor\" + editInstructorIndex),"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": "                                      \"/instructorCourseEditCancelEditCustomInstructorPermissionsForm.html\");"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickEditInstructorLink(editInstructorIndex);"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isTunePermissionsDivVisible(editInstructorIndex));"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testDeleteInstructorAction() {"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"delete instructor then cancel\");"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickDeleteInstructorLinkAndCancel(1);"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(BackDoor.getInstructorByGoogleId(instructorId, courseId));"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"delete instructor successfully\");"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickDeleteInstructorLinkAndConfirm(1);"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMsg \u003d \"The instructor has been deleted from the course.\";"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.waitForTextsForAllStatusMessagesToUserEquals(expectedMsg);"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"delete all other instructors\");"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickDeleteInstructorLinkAndConfirm(1);"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickDeleteInstructorLinkAndConfirm(1);"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickDeleteInstructorLinkAndConfirm(1);"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickDeleteInstructorLinkAndConfirm(1);"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickDeleteInstructorLinkAndConfirm(1);"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickDeleteInstructorLinkAndConfirm(2);"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"test the only registered instructor with the privilege to modify instructors cannot be deleted\");"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": "        // Create an registered instructor with all privileges except modifying instructors"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorPrivileges privilege \u003d"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": "                new InstructorPrivileges(Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_COOWNER);"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": "        privilege.updatePrivilege(Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_INSTRUCTOR, false);"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor \u003d InstructorAttributes"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": "                .builder(\"InsCrsEdit.reg\", courseId, \"Teammates Reg\", \"InsCrsEdit.reg@gmail.tmt\")"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": "                .withDisplayedName(\"Teammates Reg\")"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": "                .withRole(Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_CUSTOM)"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": "                .withPrivileges(privilege)"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": "        BackDoor.createInstructor(instructor);"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": "        // Create an unregistered instructor with co-owner privilege"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.addNewInstructor(\"Unreg Instructor\", \"InstructorCourseEditEmail@gmail.tmt\");"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": "        // Delete own instructor role"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickDeleteInstructorLinkAndConfirm(2);"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.waitForTextsForAllStatusMessagesToUserEquals("
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.StatusMessages.COURSE_INSTRUCTOR_DELETE_NOT_ALLOWED);"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": "        // Delete other instructors"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickDeleteInstructorLinkAndConfirm(3);"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.waitForTextsForAllStatusMessagesToUserEquals(Const.StatusMessages.COURSE_INSTRUCTOR_DELETED);"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickDeleteInstructorLinkAndConfirm(1);"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.waitForTextsForAllStatusMessagesToUserEquals(Const.StatusMessages.COURSE_INSTRUCTOR_DELETED);"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"delete own instructor role and redirect to courses page\");"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": "        // Create another registered instructor with co-owner privilege"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "-"
        },
        "content": "        BackDoor.createInstructor(testData.instructors.get(\"InsCrsEdit.coord\"));"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage \u003d getCourseEditPage();"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": "        // Delete own instructor role"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickDeleteInstructorLinkAndConfirm(2);"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorCoursesPage coursesPage \u003d courseEditPage.changePageType(InstructorCoursesPage.class);"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.waitForAjaxLoadCoursesSuccess();"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.waitForTextsForAllStatusMessagesToUserEquals("
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.StatusMessages.COURSE_INSTRUCTOR_DELETED, Const.StatusMessages.COURSE_EMPTY);"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "-"
        },
        "content": "        // Restore own instructor role to ensure remaining test cases work properly"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "-"
        },
        "content": "        BackDoor.createInstructor(testData.instructors.get(\"InsCrsEdit.test\"));"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "-"
        },
        "content": "     * Tests the UI of edit course."
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testEditCourseAction() throws Exception {"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage \u003d getCourseEditPage();"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"edit course valid name\");"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isCourseEditFormEnabled());"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickEditCourseLink();"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isCourseEditFormEnabled());"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSaveCourseButton();"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.changePageType(InstructorCourseEditPage.class);"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.waitForTextsForAllStatusMessagesToUserEquals(Const.StatusMessages.COURSE_EDITED);"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"edit course invalid name\");"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.isCourseEditFormEnabled());"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickEditCourseLink();"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isCourseEditFormEnabled());"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.editCourseName(\"\");"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickSaveCourseButton();"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.changePageType(InstructorCourseEditPage.class);"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.waitForTextsForAllStatusMessagesToUserEquals("
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": "                getPopulatedEmptyStringErrorMessage("
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": "                                     FieldValidator.SIZE_CAPPED_NON_EMPTY_STRING_ERROR_MESSAGE_EMPTY_STRING,"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": "                                     FieldValidator.COURSE_NAME_FIELD_NAME, FieldValidator.COURSE_NAME_MAX_LENGTH));"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testDeleteCourseAction() {"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "-"
        },
        "content": "        // TODO: use navigateTo instead"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage \u003d getCourseEditPage();"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        ______TS(\"delete course\");"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        InstructorCoursesPage coursePage \u003d courseEditPage.clickDeleteCourseLink();"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(BackDoor.getCourse(courseId));"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(coursePage.getTextsForAllStatusMessagesToUser()"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                .contains(String.format(Const.StatusMessages.COURSE_MOVED_TO_RECYCLE_BIN, courseId)));"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testUnregisteredInstructorEmailNotEditable() {"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage \u003d getCourseEditPage();"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"make a new unregistered instructor and test that its email can\u0027t be edited\");"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.addNewInstructor(\"Unreg Instructor\", \"InstructorCourseEditEmail@gmail.tmt\");"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": "        int unregInstrNum \u003d 3;"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"Unreg Instructor\", courseEditPage.getNameField(unregInstrNum).getAttribute(\"value\"));"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(courseEditPage.getNameField(unregInstrNum).isEnabled());"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.clickEditInstructorLink(unregInstrNum);"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.isInstructorEditable(unregInstrNum));"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"true\", courseEditPage.getEmailField(unregInstrNum).getAttribute(\"readonly\"));"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(courseEditPage.getNameField(unregInstrNum).isEnabled());"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testSanitization() throws IOException {"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"page load: data requires sanitization\");"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorId \u003d testData.instructors.get(\"InsCrsEdit.instructor1OfTestingSanitizationCourse\").googleId;"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": "        courseId \u003d testData.courses.get(\"InsCrsEdit.testingSanitizationCourse\").getId();"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage \u003d getCourseEditPage();"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": "        courseEditPage.verifyHtmlMainContent(\"/instructorCourseEditTestingSanitization.html\");"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": "    private InstructorCourseEditPage getCourseEditPage() {"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": "        AppUrl courseEditPageLink \u003d createUrl(Const.ActionURIs.INSTRUCTOR_COURSE_EDIT_PAGE)"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": "                                    .withUserId(instructorId)"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "-"
        },
        "content": "                                    .withCourseId(courseId);"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": "        return loginAdminToPage(courseEditPageLink, InstructorCourseEditPage.class);"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalessr": 3,
      "-": 842
    }
  },
  {
    "path": "src/test/java/teammates/test/cases/browsertests/InstructorCoursesPageUiTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.test.cases.browsertests;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.BeforeClass;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.CourseAttributes;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.AppUrl;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.FieldValidator;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.driver.BackDoor;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.driver.StringHelperExtension;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.pageobjects.InstructorCourseDetailsPage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.pageobjects.InstructorCourseEditPage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.pageobjects.InstructorCourseEnrollPage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.pageobjects.InstructorCoursesPage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " * SUT: {@link Const.ActionURIs#INSTRUCTOR_COURSES_PAGE}."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "public class InstructorCoursesPageUiTest extends BaseUiTestCase {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    /* Comments given as \u0027Explanation:\u0027 are extra comments added to train"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * developers. They are not meant to be repeated when you write similar"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * classes."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * This class is used for training developers. Hence, the high percentage"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * of explanatory comments, which is contrary to our usual policy of"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u0027minimal comments\u0027."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    /* Explanation: This is made a global variable for convenience"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * (i.e. no need to declare it multiple times in multiple methods) */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    private InstructorCoursesPage coursesPage;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    private String instructorId;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    private CourseAttributes validCourse \u003d"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            CourseAttributes"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                    .builder(\" CCAddUiTest.course1 \", \" Software Engineering $^\u0026*() \", ZoneId.of(\"Asia/Singapore\"))"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                    .build();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void prepareTestData() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Explanation: These two lines persist the test data on the server. */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        testData \u003d loadDataBundle(\"/InstructorCoursesPageUiTest.json\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        removeAndRestoreDataBundle(testData);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Explanation: Ideally, there should not be \u0027state leaks\u0027 between"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "         * tests. i.e. Changes to data done by one test should not affect"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "         * another test. To that end, we should make the dataset in the .json"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "         * file independent from other tests. Our approach is to add a unique"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "         * prefix to identifiers in the json file. e.g., Google IDs, course IDs,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "         * etc. This identifier can be based on the name of the test class."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "         * e.g., \"ICPUiT.inst.withnocourses\" can be a Google ID unique to this"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "         * class."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    @BeforeClass"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    public void classSetup() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "         * Any entity that is created in previous test run must be deleted."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "         * If that previous test run fails, the entity persists and that will"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "         * break tests."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        BackDoor.deleteCourse(validCourse.getId()); // delete if it exists"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    public void allTests() throws Exception {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Explanation: We bunch together everything as one test case instead"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "         * of having multiple test cases. The advantage is that the time for"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "         * the whole test class will be reduced because we minimize repetitive"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "         * per-method setup/tear down. The downside is that it increases the"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "         * time spent on re-running failed tests as the whole class has to be"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "         * re-run. We opt for this approach because we expect tests to pass"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "         * more frequently than to fail."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Explanation: We do \u0027non-invasive\u0027 (i.e., no changes to datastore) tests first */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        // Explanation: Checks the rendering of the page content."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        testContent();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        // Explanation: Checks the ajax request for course stats."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        testCourseStats();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        // Explanation: Checks if links going out of the page are correct"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        testLinks();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        // Explanation: Checks if client-side input validation for fields"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        testInputValidation();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Explanation: We do \u0027invasive\u0027 tests last */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        // Explanation: Checks \u0027actions\u0027 that can be performed using the page."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        testAddAction();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        testSortCourses();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        testDeleteAction();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        testArchiveAction();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Explanation: The above categorization of test cases is useful in"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "         * identifying test cases. However, do not follow it blindly."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "         * Some SUTs might require additional test cases. Examining the"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "         * relevant JSP pages to check if all Java code paths are covered"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "         *  might help you identify further test cases."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testContent() throws Exception {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Explanation: The page rendering is slightly different based on"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "         * whether the table is empty or not. We should test both cases."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "         * In addition, we should test the sorting."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"no courses\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorId \u003d testData.accounts.get(\"instructorWithoutCourses\").googleId;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage \u003d getCoursesPage();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        // This is the full HTML verification for Instructor Courses Page, the rest can all be verifyMainHtml"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.verifyHtml(\"/instructorCoursesNoCourse.html\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"multiple course\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorId \u003d testData.accounts.get(\"instructorWithCourses\").googleId;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage \u003d getCoursesPage();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        // for course CS1101, current instructor cannot modify course or modify students"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.verifyHtmlMainContent(\"/instructorCoursesMultipleCourses.html\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Failure Case: Ajax error\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage \u003d getCoursesPage();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.changeUserIdInAjaxLoadCoursesForm(\"invalidUserId\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.triggerAjaxLoadCourses();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.waitForAjaxLoadCoursesError();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage \u003d getCoursesPage();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testCourseStats() throws Exception {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Course Stats\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage \u003d getCoursesPage();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.triggerAjaxLoadCourseStats(1);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.verifyHtmlMainContent(\"/instructorCoursesStatsAjaxSuccessful.html\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Course Stats Failed\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage \u003d getCoursesPage();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.changeHrefInAjaxLoadCourseStatsLink(\"invalidLink\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.triggerAjaxLoadCourseStats(1);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.verifyHtmlMainContent(\"/instructorCoursesStatsAjaxFailure.html\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage \u003d getCoursesPage();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testLinks() {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Explanation: We test each of \u0027view\u0027 links and \u0027enroll\u0027 links."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "         * \u0027Delete\u0027 is not a link, but an action."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseId \u003d testData.courses.get(\"CS2104\").getId();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"view link\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Explanation: When checking links, we check the destination page"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "         * for some keywords rather than do a full content match."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorCourseDetailsPage detailsPage \u003d coursesPage.loadViewLink(courseId)"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "                .verifyIsCorrectPage(courseId);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage \u003d detailsPage.goToPreviousPage(InstructorCoursesPage.class);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"enroll link\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorCourseEnrollPage enrollPage \u003d coursesPage.loadEnrollLink(courseId)"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "                .verifyIsCorrectPage(courseId);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage \u003d enrollPage.goToPreviousPage(InstructorCoursesPage.class);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"edit link\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorCourseEditPage editPage \u003d coursesPage.loadEditLink(courseId)"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "                .verifyIsCorrectPage(courseId);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage \u003d editPage.goToPreviousPage(InstructorCoursesPage.class);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testInputValidation() throws Exception {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Explanation: If the validation is done through one JS function"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "         * (e.g., the entire form is validated in one go), we need to check only"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "         * one invalid case here, provided the form validation function is"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "         * thoroughly unit tested elsewhere {@see instructorCourseJsTest.js}."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "         * If each field is validated as they are keyed in, each field should be"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "         * validated for one invalid case."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"input validation\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        //one invalid case"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.addCourse(\"\", \"\").waitForTextsForAllStatusMessagesToUserEquals("
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "                getPopulatedEmptyStringErrorMessage(FieldValidator.COURSE_ID_ERROR_MESSAGE_EMPTY_STRING,"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "                    FieldValidator.COURSE_ID_FIELD_NAME, FieldValidator.COURSE_ID_MAX_LENGTH) + \"\\n\""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "                + getPopulatedEmptyStringErrorMessage("
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "                      FieldValidator.SIZE_CAPPED_NON_EMPTY_STRING_ERROR_MESSAGE_EMPTY_STRING,"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "                      FieldValidator.COURSE_NAME_FIELD_NAME, FieldValidator.COURSE_NAME_MAX_LENGTH));"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        //Checking max-length enforcement by the text boxes"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        String maxLengthCourseId \u003d StringHelperExtension.generateStringOfLength(FieldValidator.COURSE_ID_MAX_LENGTH);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        String longCourseId \u003d StringHelperExtension.generateStringOfLength(FieldValidator.COURSE_ID_MAX_LENGTH + 1);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(maxLengthCourseId, coursesPage.fillCourseIdTextBox(maxLengthCourseId));"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(longCourseId.substring(0, FieldValidator.COURSE_ID_MAX_LENGTH),"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "                     coursesPage.fillCourseIdTextBox(longCourseId));"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        String maxLengthCourseName \u003d StringHelperExtension.generateStringOfLength(FieldValidator.COURSE_NAME_MAX_LENGTH);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        String longCourseName \u003d StringHelperExtension.generateStringOfLength(FieldValidator.COURSE_NAME_MAX_LENGTH + 1);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(maxLengthCourseName, coursesPage.fillCourseNameTextBox(maxLengthCourseName));"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(longCourseName.substring(0, FieldValidator.COURSE_NAME_MAX_LENGTH),"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "                     coursesPage.fillCourseNameTextBox(longCourseName));"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testAddAction() throws Exception {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Explanation: We test at least one valid case and one invalid case."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "         * If the action involves a confirmation dialog, we should test both"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "         * \u0027confirm\u0027 and \u0027cancel\u0027 cases."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "         *"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorId \u003d testData.accounts.get(\"instructorWithCourses\").googleId;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage \u003d getCoursesPage();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"add action success: add course with leading/trailing space in parameters\");"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.addCourse(validCourse.getId(), validCourse.getName());"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.verifyHtmlMainContent(\"/instructorCoursesAddSuccessful.html\");"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"add action fail: duplicate course ID\");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.addCourse(validCourse.getId(), \"different course name\");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.verifyHtmlMainContent(\"/instructorCoursesAddDupIdFailed.html\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"add action fail: invalid course ID\");"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "        String invalidId \u003d \"Invalid ID\";"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.addCourse(invalidId, \"random course name\");"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.verifyHtmlMainContent(\"/instructorCoursesAddInvalidIdFailed.html\");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"add action fail: missing parameters\");"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "        String validId \u003d \"Valid.ID\";"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "        String missingCourseName \u003d \"\";"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.addCourse(validId, missingCourseName);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.verifyHtmlMainContent(\"/instructorCoursesAddMissingParamsFailed.html\");"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testSortCourses() {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"sorting\");"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "        String patternString \u003d \"Programming Language Concept{*}Programming Methodology{*}Software Engineering $^\u0026*()\";"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.sortByCourseName().verifyTablePattern(1, patternString);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "        patternString \u003d \"Software Engineering $^\u0026*(){*}Programming Methodology{*}Programming Language Concept\";"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.sortByCourseName().verifyTablePattern(1, patternString);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "        patternString \u003d \"CCAddUiTest.course1{*}CCAddUiTest.CS1101{*}CCAddUiTest.CS2104\";"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.sortByCourseId().verifyTablePattern(0, patternString);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        patternString \u003d \"CCAddUiTest.CS2104{*}CCAddUiTest.CS1101{*}CCAddUiTest.course1\";"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.sortByCourseId().verifyTablePattern(0, patternString);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testDeleteAction() throws Exception {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseId \u003d \"CCAddUiTest.course1\";"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        coursesPage.deleteCourse(courseId);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        assertNotNull(BackDoor.getCourse(courseId));"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        coursesPage.verifyHtmlMainContent(\"/instructorCoursesDeleteSuccessful.html\");"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testArchiveAction() throws Exception {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor1CS1101 \u003d testData.instructors.get(\"instructor1CS1101\");"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"archive action success\");"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseId \u003d \"CCAddUiTest.CS1101\";"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructorWithNullArchiveStatus \u003d BackDoor.getInstructorByGoogleId(instructor1CS1101.googleId,"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                                instructor1CS1101.courseId);"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "        //this is a old instructor whose archive status is not set and is by default false"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(instructorWithNullArchiveStatus.isArchived);"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.archiveCourse(courseId);"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.waitForAjaxLoadCoursesSuccess();"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.verifyHtmlMainContent(\"/instructorCoursesArchiveSuccessful.html\");"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorWithNullArchiveStatus \u003d BackDoor.getInstructorByGoogleId(instructor1CS1101.googleId,"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                           instructor1CS1101.courseId);"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "        //after click archive button, new value will be assigned to instructor\u0027s isArchive attribute"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "        //after this, his own archive status for this course will not be affected by other instructors"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "        //of the same course"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(instructorWithNullArchiveStatus.isArchived.booleanValue());"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"archive status of another instructor from same course not affected\");"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "        //this instructor already has his own non-null archive status"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "        //so other instructors\u0027 archiving actions will not affect his own status"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorId \u003d testData.accounts.get(\"OtherInstructorWithoutCourses\").googleId;"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage \u003d getCoursesPage();"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.verifyHtmlMainContent(\"/instructorArchiveStatusNotAffected.html\");"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"unarchive action success\");"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorId \u003d testData.accounts.get(\"instructorWithCourses\").googleId;"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage \u003d getCoursesPage();"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.unarchiveCourse(courseId);"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.waitForAjaxLoadCoursesSuccess();"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.verifyHtmlMainContent(\"/instructorCoursesUnarchiveSuccessful.html\");"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "        // TODO: Handling for the failure of archive and unarchive is still not good"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "        // Need more improvement"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"archive action failed\");"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "        // only possible if someone else delete the course while the user is viewing the page"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "        String anotherCourseId \u003d \"CCAddUiTest.CS2104\";"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "        BackDoor.deleteCourse(anotherCourseId);"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.archiveCourse(anotherCourseId);"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.verifyContains(\"You are not authorized to view this page.\");"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"unarchive action failed\");"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "        // only possible if someone else delete the course while the user is viewing the page"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage \u003d getCoursesPage();"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.archiveCourse(courseId);"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "        BackDoor.deleteCourse(courseId);"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.unarchiveCourse(courseId);"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesPage.verifyContains(\"You are not authorized to view this page.\");"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "    private InstructorCoursesPage getCoursesPage() {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "        AppUrl coursesUrl \u003d createUrl(Const.ActionURIs.INSTRUCTOR_COURSES_PAGE)"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "                .withUserId(instructorId);"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorCoursesPage page \u003d loginAdminToPage(coursesUrl, InstructorCoursesPage.class);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "        page.waitForAjaxLoadCoursesSuccess();"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "        return page;"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalessr": 3,
      "-": 362
    }
  },
  {
    "path": "src/test/java/teammates/test/cases/browsertests/InstructorHomePageUiTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.test.cases.browsertests;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.openqa.selenium.WebElement;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.CourseAttributes;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.AppUrl;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.FieldValidator;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Url;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.driver.BackDoor;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.pageobjects.InstructorCourseDetailsPage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.pageobjects.InstructorCourseEditPage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.pageobjects.InstructorCourseEnrollPage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.pageobjects.InstructorFeedbackSessionsPage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.pageobjects.InstructorHelpPage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.pageobjects.InstructorHomePage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " * SUT: {@link Const.ActionURIs#INSTRUCTOR_HOME_PAGE}."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "public class InstructorHomePageUiTest extends BaseUiTestCase {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private InstructorHomePage homePage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private FeedbackSessionAttributes feedbackSessionAwaiting;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private FeedbackSessionAttributes feedbackSessionOpen;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private FeedbackSessionAttributes feedbackSessionClosed;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private FeedbackSessionAttributes feedbackSessionPublished;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    // TODO: refactor this test. try to use admin login or create instructors and courses not using json"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void prepareTestData() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        removeAndRestoreDataBundle(loadDataBundle(\"/InstructorHomePageUiTest1.json\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        testData \u003d loadDataBundle(\"/InstructorHomePageUiTest2.json\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        removeAndRestoreDataBundle(testData);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionAwaiting \u003d testData.feedbackSessions.get(\"Second Feedback Session\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionOpen \u003d testData.feedbackSessions.get(\"First Feedback Session\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionClosed \u003d testData.feedbackSessions.get(\"Third Feedback Session\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionPublished \u003d testData.feedbackSessions.get(\"Fourth Feedback Session\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        // Remove entities created during test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        BackDoor.deleteCourse(\"newIns.wit-demo\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        BackDoor.deleteInstructor(\"newIns.wit-demo\", \"CHomeUiT.instructor.tmms@gmail.tmt\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public void allTests() throws Exception {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        testPersistenceCheck();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        testLogin();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        testContent();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        testAjaxCourseTableLoad();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        testShowFeedbackStatsLink();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        testHelpLink();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        testCourseLinks();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        testSearchAction();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        testSortAction();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        testDownloadAction();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        testRemindActions();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        testPublishUnpublishResendLinkActions();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        testArchiveCourseAction();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        testCopyToFsAction();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        testDeleteCourseAction();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testAjaxCourseTableLoad() throws Exception {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(\"CHomeUiT.instructor.tmms.unloaded\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.loadInstructorHomeTab();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.verifyHtmlMainContent(\"/instructorHomeHTMLWithUnloadedCourse.html\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsCommonInstructor();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testPersistenceCheck() throws Exception {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"persistence check\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        loginWithPersistenceProblem();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        // This is the full HTML verification for Instructor Home Page, the rest can all be verifyMainHtml"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.verifyHtml(\"/instructorHomeHTMLPersistenceCheck.html\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testLogin() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"login\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsNewInstructor();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(browser.driver.getCurrentUrl().contains(Const.ActionURIs.INSTRUCTOR_HOME_PAGE));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testShowFeedbackStatsLink() throws Exception {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        WebElement viewResponseLink \u003d homePage.getViewResponseLink(\"CHomeUiT.CS2104\", \"Fourth Feedback Session\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        String currentValidUrl \u003d viewResponseLink.getAttribute(\"href\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"test case: fail, fetch response rate of invalid url\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.setViewResponseLinkValue(viewResponseLink, \"/invalid/url\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickViewResponseLink(\"CHomeUiT.CS2104\", \"Fourth Feedback Session\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.verifyHtmlMainContent(\"/instructorHomeHTMLResponseRateFail.html\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"test case: fail to fetch response rate again, check consistency of fail message\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickViewResponseLink(\"CHomeUiT.CS2104\", \"Fourth Feedback Session\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.verifyHtmlMainContent(\"/instructorHomeHTMLResponseRateFail.html\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"test case: pass with valid url after multiple fails\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        viewResponseLink \u003d homePage.getViewResponseLink(\"CHomeUiT.CS2104\", \"Fourth Feedback Session\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.setViewResponseLinkValue(viewResponseLink, currentValidUrl);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickViewResponseLink(\"CHomeUiT.CS2104\", \"Fourth Feedback Session\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.verifyHtmlMainContent(\"/instructorHomeHTMLResponseRatePass.html\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testContent() throws Exception {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"content: no courses\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        //this case is implicitly tested when testing for \u0027delete course\u0027 action and"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        //new instructor without sample course"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        //loginAsInstructor(testData.accounts.get(\"newInstructorWithSampleCourse\").email);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"content: new instructor, with status message HINT_FOR_NEW_INSTRUCTOR\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        //already logged in"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.loadInstructorHomeTab();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.verifyHtmlMainContent(\"/instructorHomeNewInstructorWithoutSampleCourse.html\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseAttributes newCourse \u003d CourseAttributes"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                .builder(\"newIns.wit-demo\", \"Sample Course 101\", ZoneId.of(\"UTC\"))"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        BackDoor.createCourse(newCourse);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        @SuppressWarnings(\"deprecation\")"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instr \u003d InstructorAttributes"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "                .builder(\"CHomeUiT.instructor.tmms.new\", \"newIns.wit-demo\","
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "                        \"Teammates Test New Instructor With Sample\", \"CHomeUiT.instructor.tmms@gmail.tmt\")"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        BackDoor.createInstructor(instr);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.loadInstructorHomeTab();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.verifyHtmlMainContent(\"/instructorHomeNewInstructorWithSampleCourse.html\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"content: multiple courses\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsCommonInstructor();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        // Should not see private session"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.verifyHtmlMainContent(\"/instructorHomeHTMLWithHelperView.html\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        updateInstructorToCoownerPrivileges();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.loadInstructorHomeTab();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.verifyHtmlMainContent(\"/instructorHomeHTML.html\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"content: require sanitization\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(\"CHomeUiT.idOfInstructor1OfTestingSanitizationCourse\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.loadInstructorHomeTab();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.verifyHtmlMainContent(\"/instructorHomeTestingSanitization.html\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    private void updateInstructorToCoownerPrivileges() {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        // update current instructor for CS1101 to have Co-owner privileges"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor \u003d testData.instructors.get(\"CHomeUiT.instr.CS1101\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        BackDoor.deleteInstructor(instructor.courseId, instructor.email);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        instructor.privileges.setDefaultPrivilegesForCoowner();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        BackDoor.createInstructor(instructor);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testHelpLink() {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"link: help page\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorHelpPage helpPage \u003d homePage.loadInstructorHelpTab();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        helpPage.closeCurrentWindowAndSwitchToParentWindow();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testCourseLinks() {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseId \u003d testData.courses.get(\"CHomeUiT.CS1101\").getId();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        String instructorId \u003d testData.accounts.get(\"account\").googleId;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"link: course enroll\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorCourseEnrollPage enrollPage \u003d homePage.clickCourseEnrollLink(courseId);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        enrollPage.verifyContains(\"Enroll Students for CHomeUiT.CS1101\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedEnrollLinkText \u003d createUrl(Const.ActionURIs.INSTRUCTOR_COURSE_ENROLL_PAGE)"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "                                        .withCourseId(courseId)"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "                                        .withUserId(instructorId)"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "                                        .toAbsoluteString();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedEnrollLinkText, browser.driver.getCurrentUrl());"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.goToPreviousPage(InstructorHomePage.class);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"link: course view\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorCourseDetailsPage detailsPage \u003d homePage.clickCourseViewLink(courseId);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        detailsPage.verifyContains(\"Course Details\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedViewLinkText \u003d createUrl(Const.ActionURIs.INSTRUCTOR_COURSE_DETAILS_PAGE)"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "                                        .withCourseId(courseId)"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "                                        .withUserId(instructorId)"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "                                        .toAbsoluteString();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedViewLinkText, browser.driver.getCurrentUrl());"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.goToPreviousPage(InstructorHomePage.class);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"link: course edit\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorCourseEditPage editPage \u003d homePage.clickCourseEditLink(courseId);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        editPage.verifyContains(\"Edit Course Details\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedEditLinkText \u003d createUrl(Const.ActionURIs.INSTRUCTOR_COURSE_EDIT_PAGE)"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "                                        .withCourseId(courseId)"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "                                        .withUserId(instructorId)"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "                                        .toAbsoluteString();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedEditLinkText, browser.driver.getCurrentUrl());"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.goToPreviousPage(InstructorHomePage.class);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"link: course add session\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorFeedbackSessionsPage feedbacksPage \u003d homePage.clickCourseAddEvaluationLink(courseId);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbacksPage.verifyContains(\"Add New Feedback Session\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedAddSessionLinkText \u003d createUrl(Const.ActionURIs.INSTRUCTOR_FEEDBACK_SESSIONS_PAGE)"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "                                        .withUserId(instructorId)"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "                                        .withCourseId(courseId)"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "                                        .toAbsoluteString();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedAddSessionLinkText, browser.driver.getCurrentUrl());"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.goToPreviousPage(InstructorHomePage.class);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testDownloadAction() throws Exception {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "        // Test that download result button exist in homePage"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.verifyDownloadResultButtonExists(feedbackSessionClosed.getCourseId(),"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionClosed.getSessionName());"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Typical case: download report\");"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "        AppUrl reportUrl \u003d createUrl(Const.ActionURIs.INSTRUCTOR_FEEDBACK_RESULTS_DOWNLOAD)"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "                .withUserId(\"CHomeUiT.instructor.tmms\")"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "                .withCourseId(feedbackSessionClosed.getCourseId())"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "                .withSessionName(feedbackSessionClosed.getSessionName());"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.verifyDownloadLink(reportUrl);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Typical case: download report unsuccessfully due to missing parameters\");"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "        reportUrl \u003d createUrl(Const.ActionURIs.INSTRUCTOR_FEEDBACK_RESULTS_DOWNLOAD)"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "                .withUserId(\"CHomeUiT.instructor.tmms\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        browser.driver.get(reportUrl.toAbsoluteString());"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        String afterReportDownloadUrl \u003d browser.driver.getCurrentUrl();"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(reportUrl.toString().equals(afterReportDownloadUrl));"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        // Verify an error page is returned due to missing parameters in URL"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(\"Expected url is Unauthorised page, but is \" + afterReportDownloadUrl,"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "                        afterReportDownloadUrl.contains(Const.ViewURIs.UNAUTHORIZED));"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "        // Redirect to the instructor home page after showing error page"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsCommonInstructor();"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testRemindActions() {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"remind action: AWAITING feedback session\");"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.verifyUnclickable(homePage.getRemindLink(feedbackSessionAwaiting.getCourseId(),"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "                                                          feedbackSessionAwaiting.getFeedbackSessionName()));"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.verifyUnclickable(homePage.getRemindOptionsLink(feedbackSessionAwaiting.getCourseId(),"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                 feedbackSessionAwaiting.getFeedbackSessionName()));"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"remind action: OPEN feedback session - outer button\");"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickAndCancel(homePage.getRemindLink(feedbackSessionOpen.getCourseId(),"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "                                                       feedbackSessionOpen.getFeedbackSessionName()));"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickAndConfirm(homePage.getRemindLink(feedbackSessionOpen.getCourseId(),"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "                                                        feedbackSessionOpen.getFeedbackSessionName()));"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.waitForPageToLoad();"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.waitForTextsForAllStatusMessagesToUserEquals(Const.StatusMessages.FEEDBACK_SESSION_REMINDERSSENT);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"remind action: OPEN feedback session - inner button\");"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickRemindOptionsLink(feedbackSessionOpen.getCourseId(), feedbackSessionOpen.getFeedbackSessionName());"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickAndCancel(homePage.getRemindInnerLink(feedbackSessionOpen.getCourseId(),"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "                                                            feedbackSessionOpen.getFeedbackSessionName()));"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickRemindOptionsLink(feedbackSessionOpen.getCourseId(), feedbackSessionOpen.getFeedbackSessionName());"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickAndConfirm(homePage.getRemindInnerLink(feedbackSessionOpen.getCourseId(),"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "                                                             feedbackSessionOpen.getFeedbackSessionName()));"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.waitForPageToLoad();"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.waitForTextsForAllStatusMessagesToUserEquals(Const.StatusMessages.FEEDBACK_SESSION_REMINDERSSENT);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"remind particular users action: OPEN feedback session\");"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickRemindOptionsLink(feedbackSessionOpen.getCourseId(), feedbackSessionOpen.getFeedbackSessionName());"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickRemindParticularUsersLink(feedbackSessionOpen.getCourseId(),"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "                                                feedbackSessionOpen.getFeedbackSessionName());"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.cancelRemindParticularUsersForm();"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickRemindOptionsLink(feedbackSessionOpen.getCourseId(), feedbackSessionOpen.getFeedbackSessionName());"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickRemindParticularUsersLink(feedbackSessionOpen.getCourseId(),"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "                                                feedbackSessionOpen.getFeedbackSessionName());"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.waitForAjaxLoaderGifToDisappear();"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.submitRemindParticularUsersForm();"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.waitForPageToLoad();"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.waitForTextsForAllStatusMessagesToUserEquals(Const.StatusMessages.FEEDBACK_SESSION_REMINDERSEMPTYRECIPIENT);"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickRemindOptionsLink(feedbackSessionOpen.getCourseId(), feedbackSessionOpen.getFeedbackSessionName());"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickRemindParticularUsersLink(feedbackSessionOpen.getCourseId(),"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "                                                feedbackSessionOpen.getFeedbackSessionName());"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.waitForAjaxLoaderGifToDisappear();"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.fillRemindParticularUsersForm();"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.submitRemindParticularUsersForm();"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.waitForPageToLoad();"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.waitForTextsForAllStatusMessagesToUserEquals(Const.StatusMessages.FEEDBACK_SESSION_REMINDERSSENT);"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"remind action: CLOSED feedback session - inner button\");"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickRemindOptionsLink(feedbackSessionClosed.getCourseId(), feedbackSessionClosed.getFeedbackSessionName());"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickAndCancel(homePage.getRemindInnerLink(feedbackSessionClosed.getCourseId(),"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionOpen.getFeedbackSessionName()));"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickRemindOptionsLink(feedbackSessionClosed.getCourseId(), feedbackSessionClosed.getFeedbackSessionName());"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickAndConfirm(homePage.getRemindInnerLink(feedbackSessionClosed.getCourseId(),"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionClosed.getFeedbackSessionName()));"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.waitForPageToLoad();"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.waitForTextsForAllStatusMessagesToUserEquals(Const.StatusMessages.FEEDBACK_SESSION_REMINDERSSESSIONNOTOPEN);"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"remind particular users action: CLOSED feedback session\");"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickRemindOptionsLink(feedbackSessionClosed.getCourseId(), feedbackSessionClosed.getFeedbackSessionName());"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickRemindParticularUsersLink(feedbackSessionClosed.getCourseId(),"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionClosed.getFeedbackSessionName());"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.cancelRemindParticularUsersForm();"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickRemindOptionsLink(feedbackSessionClosed.getCourseId(), feedbackSessionClosed.getFeedbackSessionName());"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickRemindParticularUsersLink(feedbackSessionClosed.getCourseId(),"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionClosed.getFeedbackSessionName());"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.waitForAjaxLoaderGifToDisappear();"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.submitRemindParticularUsersForm();"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.waitForPageToLoad();"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.waitForTextsForAllStatusMessagesToUserEquals(Const.StatusMessages.FEEDBACK_SESSION_REMINDERSSESSIONNOTOPEN);"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickRemindOptionsLink(feedbackSessionClosed.getCourseId(), feedbackSessionClosed.getFeedbackSessionName());"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickRemindParticularUsersLink(feedbackSessionClosed.getCourseId(),"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionClosed.getFeedbackSessionName());"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.waitForAjaxLoaderGifToDisappear();"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.fillRemindParticularUsersForm();"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.submitRemindParticularUsersForm();"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.waitForPageToLoad();"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.waitForTextsForAllStatusMessagesToUserEquals(Const.StatusMessages.FEEDBACK_SESSION_REMINDERSSESSIONNOTOPEN);"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"remind action: PUBLISHED feedback session\");"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.verifyUnclickable(homePage.getRemindLink(feedbackSessionPublished.getCourseId(),"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "                                                          feedbackSessionPublished.getFeedbackSessionName()));"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.verifyUnclickable(homePage.getRemindOptionsLink(feedbackSessionPublished.getCourseId(),"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                 feedbackSessionPublished.getFeedbackSessionName()));"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testPublishUnpublishResendLinkActions() {"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"publish action: AWAITING feedback session\");"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.verifyUnclickable(homePage.getSessionResultsOptionsCaretElement(feedbackSessionAwaiting.getCourseId(),"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "                                                           feedbackSessionAwaiting.getFeedbackSessionName()));"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"publish action: OPEN feedback session\");"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickAndCancel(homePage.getPublishLink(feedbackSessionOpen.getCourseId(),"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "                                                        feedbackSessionOpen.getFeedbackSessionName()));"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"publish action: CLOSED feedback session\");"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickAndCancel(homePage.getPublishLink(feedbackSessionClosed.getCourseId(),"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "                                                        feedbackSessionClosed.getFeedbackSessionName()));"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"unpublish action: PUBLISHED feedback session\");"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickFeedbackSessionUnpublishLink(feedbackSessionPublished.getCourseId(),"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "                                                   feedbackSessionPublished.getFeedbackSessionName());"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.waitForPageToLoad();"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.waitForTextsForAllStatusMessagesToUserEquals(Const.StatusMessages.FEEDBACK_SESSION_UNPUBLISHED);"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(BackDoor.getFeedbackSession(feedbackSessionPublished.getCourseId(),"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "                                                feedbackSessionPublished.getFeedbackSessionName()).isPublished());"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"publish action: PUBLISHED feedback session\");"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickFeedbackSessionPublishLink(feedbackSessionPublished.getCourseId(),"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 feedbackSessionPublished.getFeedbackSessionName());"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.waitForPageToLoad();"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.waitForTextsForAllStatusMessagesToUserEquals(Const.StatusMessages.FEEDBACK_SESSION_PUBLISHED);"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(BackDoor.getFeedbackSession(feedbackSessionPublished.getCourseId(),"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "                                               feedbackSessionPublished.getFeedbackSessionName()).isPublished());"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"resend link action: PUBLISHED feedback session\");"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "        // Test that the resend published link button exists for this published session"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.verifyResendPublishedEmailButtonExists(feedbackSessionPublished.getCourseId(),"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionPublished.getFeedbackSessionName());"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "        // Test that the resend published link button can be clicked and the form can be cancelled"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickSessionResultsOptionsCaretElement(feedbackSessionPublished.getCourseId(),"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionPublished.getFeedbackSessionName());"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickResendPublishedEmailLink(feedbackSessionPublished.getCourseId(),"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionPublished.getFeedbackSessionName());"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.cancelResendPublishedEmailForm();"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "        // Test the status message when the form is submitted with empty recipient list"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickSessionResultsOptionsCaretElement(feedbackSessionPublished.getCourseId(),"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionPublished.getFeedbackSessionName());"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickResendPublishedEmailLink(feedbackSessionPublished.getCourseId(),"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionPublished.getFeedbackSessionName());"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.waitForAjaxLoaderGifToDisappear();"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.submitResendPublishedEmailForm();"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.waitForPageToLoad();"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.waitForTextsForAllStatusMessagesToUserEquals("
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.StatusMessages.FEEDBACK_SESSION_RESEND_EMAIL_EMPTY_RECIPIENT);"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickSessionResultsOptionsCaretElement(feedbackSessionPublished.getCourseId(),"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionPublished.getFeedbackSessionName());"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickResendPublishedEmailLink(feedbackSessionPublished.getCourseId(),"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionPublished.getFeedbackSessionName());"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.waitForAjaxLoaderGifToDisappear();"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.fillResendPublishedEmailForm();"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.submitResendPublishedEmailForm();"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.waitForPageToLoad();"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.waitForTextsForAllStatusMessagesToUserEquals("
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.StatusMessages.FEEDBACK_SESSION_RESEND_EMAIL_EMPTY_RECIPIENT);"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"resend link action: NOT PUBLISHED feedback session\");"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "        // Test that the resend published link button does not exist for this not published session"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.verifyResendPublishedEmailButtonDoesNotExist(feedbackSessionAwaiting.getCourseId(),"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionAwaiting.getFeedbackSessionName());"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testArchiveCourseAction() throws Exception {"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseIdForCS1101 \u003d testData.courses.get(\"CHomeUiT.CS1101\").getId();"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"archive course action: click and cancel\");"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickArchiveCourseLinkAndCancel(courseIdForCS1101);"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor \u003d BackDoor.getInstructorByGoogleId(\"CHomeUiT.instructor.tmms\", courseIdForCS1101);"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes helper \u003d BackDoor.getInstructorByGoogleId(\"CHomeUiT.instructor.tmms.helper\", courseIdForCS1101);"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "        // Both will be false before it is archived for testing"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(instructor.isArchived);"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(helper.isArchived);"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"archive course action: click and confirm\");"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickArchiveCourseLinkAndConfirm(courseIdForCS1101);"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "        instructor \u003d BackDoor.getInstructorByGoogleId(\"CHomeUiT.instructor.tmms\", courseIdForCS1101);"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "        helper \u003d BackDoor.getInstructorByGoogleId(\"CHomeUiT.instructor.tmms.helper\", courseIdForCS1101);"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(instructor.isArchived);"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(helper.isArchived);"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.verifyHtmlMainContent(\"/instructorHomeCourseArchiveSuccessful.html\");"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"archive action failed\");"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseIdForCS2104 \u003d testData.courses.get(\"CHomeUiT.CS2104\").getId();"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "        //delete the course, then submit archive request to it"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "        BackDoor.deleteCourse(courseIdForCS2104);"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickArchiveCourseLinkAndConfirm(courseIdForCS2104);"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(browser.driver.getCurrentUrl().contains(Url.addParamToUrl(Const.ViewURIs.UNAUTHORIZED,"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.ERROR_FEEDBACK_URL_REQUESTED, Const.ActionURIs.INSTRUCTOR_COURSE_ARCHIVE)));"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "        // recover the deleted course and its related entities"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "        testData \u003d loadDataBundle(\"/InstructorHomePageUiTest2.json\");"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "        removeAndRestoreDataBundle(testData);"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsCommonInstructor();"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickArchiveCourseLinkAndConfirm(courseIdForCS1101);"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.loadInstructorHomeTab();"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testCopyToFsAction() throws Exception {"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "        String feedbackSessionName \u003d \"First Feedback Session\";"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseId \u003d testData.courses.get(\"CHomeUiT.CS2104\").getId();"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Submit empty course list: Home Page\");"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickFsCopyButton(courseId, feedbackSessionName);"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.getFsCopyModal().waitForModalToLoad();"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.getFsCopyModal().clickSubmitButton();"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.getFsCopyModal().waitForFormSubmissionErrorMessagePresence();"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(homePage.getFsCopyModal().isFormSubmissionStatusMessageVisible());"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.getFsCopyModal().verifyStatusMessage(Const.StatusMessages.FEEDBACK_SESSION_COPY_NONESELECTED);"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.getFsCopyModal().clickCloseButton();"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Copying fails due to fs with same name in course selected: Home Page\");"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickFsCopyButton(courseId, feedbackSessionName);"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.getFsCopyModal().waitForModalToLoad();"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.getFsCopyModal().fillFormWithAllCoursesSelected(feedbackSessionName);"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.getFsCopyModal().clickSubmitButton();"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "        String error \u003d String.format(Const.StatusMessages.FEEDBACK_SESSION_COPY_ALREADYEXISTS,"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "                                     feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.getFsCopyModal().waitForFormSubmissionErrorMessagePresence();"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(homePage.getFsCopyModal().isFormSubmissionStatusMessageVisible());"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.getFsCopyModal().verifyStatusMessage(error);"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.getFsCopyModal().clickCloseButton();"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Copying fails due to fs with invalid name: Home Page\");"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickFsCopyButton(courseId, feedbackSessionName);"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.getFsCopyModal().waitForModalToLoad();"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "        String invalidFeedbackSessionName \u003d \"Invalid name | for feedback session\";"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.getFsCopyModal().fillFormWithAllCoursesSelected(invalidFeedbackSessionName);"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.getFsCopyModal().clickSubmitButton();"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.getFsCopyModal().waitForFormSubmissionErrorMessagePresence();"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(homePage.getFsCopyModal().isFormSubmissionStatusMessageVisible());"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.getFsCopyModal().verifyStatusMessage("
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "                getPopulatedErrorMessage("
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "                    FieldValidator.INVALID_NAME_ERROR_MESSAGE, invalidFeedbackSessionName,"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "                    FieldValidator.FEEDBACK_SESSION_NAME_FIELD_NAME,"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "                    FieldValidator.REASON_CONTAINS_INVALID_CHAR));"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.getFsCopyModal().clickCloseButton();"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Successful case: Home Page\");"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickFsCopyButton(courseId, feedbackSessionName);"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.getFsCopyModal().waitForModalToLoad();"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.getFsCopyModal().fillFormWithAllCoursesSelected(\"New name!\");"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.getFsCopyModal().clickSubmitButton();"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.waitForPageToLoad();"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.waitForTextsForAllStatusMessagesToUserEquals(Const.StatusMessages.FEEDBACK_SESSION_COPIED);"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.goToPreviousPage(InstructorHomePage.class);"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Failure case: Ajax error\");"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "        // Change action link so that ajax will fail"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.changeFsCopyButtonActionLink(courseId, feedbackSessionName, \"/page/nonExistentPage?\");"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickFsCopyButton(courseId, feedbackSessionName);"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "        // Wait for modal to appear and show error."
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.getFsCopyModal().waitForModalLoadingError();"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.getFsCopyModal().clickCloseButton();"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testDeleteCourseAction() throws Exception {"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"delete course action\");"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseId \u003d testData.courses.get(\"CHomeUiT.CS2104\").getId();"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickAndCancel(homePage.getDeleteCourseLink(courseId));"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(BackDoor.getCourse(courseId));"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickAndConfirm(homePage.getDeleteCourseLink(courseId));"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        assertNotNull(BackDoor.getCourse(courseId));"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.verifyHtmlMainContent(\"/instructorHomeCourseDeleteSuccessful.html\");"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        BackDoor.deleteCourse(courseId);"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "        //delete the other course as well"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "        courseId \u003d testData.courses.get(\"CHomeUiT.CS1101\").getId();"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "        BackDoor.deleteCourse(courseId);"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.loadInstructorHomeTab();"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.verifyHtmlMainContent(\"/instructorHomeHTMLEmpty.html\");"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testSearchAction() {"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "        // Tested in student list page"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testSortAction() throws Exception {"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"sort courses by id\");"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickSortByIdButton();"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.verifyHtmlMainContent(\"/instructorHomeHTMLSortById.html\");"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"sort courses by name\");"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickSortByNameButton();"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.verifyHtmlMainContent(\"/instructorHomeHTMLSortByName.html\");"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"sort courses by date\");"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.clickSortByDateButton();"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.verifyHtmlMainContent(\"/instructorHomeHTMLSortByDate.html\");"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"sort sessions by session name\");"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.sortTablesByName();"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.verifyHtmlMainContent(\"/instructorHomeHTMLSortSessionsByName.html\");"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"sort sessions by session start date\");"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.sortTablesByStartDate();"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.verifyHtmlMainContent(\"/instructorHomeHTMLSortSessionsByStartDate.html\");"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"sort sessions by session end date\");"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.sortTablesByEndDate();"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage.verifyHtmlMainContent(\"/instructorHomeHTMLSortSessionsByEndDate.html\");"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "    private void loginAsNewInstructor() {"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "        String newInstructor \u003d \"CHomeUiT.instructor.tmms.new\";"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(newInstructor);"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "    private void loginAsCommonInstructor() {"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "        String commonInstructor \u003d \"CHomeUiT.instructor.tmms\";"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(commonInstructor);"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "    private void loginAsInstructor(String googleId) {"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "        AppUrl editUrl \u003d createUrl(Const.ActionURIs.INSTRUCTOR_HOME_PAGE)"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "                    .withUserId(googleId);"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage \u003d loginAdminToPage(editUrl, InstructorHomePage.class);"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "    private void loginWithPersistenceProblem() {"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "        AppUrl homeUrl \u003d ((AppUrl) createUrl(Const.ActionURIs.INSTRUCTOR_HOME_PAGE)"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "                    .withParam(Const.ParamsNames.CHECK_PERSISTENCE_COURSE, \"something\"))"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "                    .withUserId(\"unreg_user\");"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "        homePage \u003d loginAdminToPage(homeUrl, InstructorHomePage.class);"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalessr": 4,
      "-": 616
    }
  },
  {
    "path": "src/test/java/teammates/test/cases/pagedata/InstructorCoursesPageDataTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.test.cases.pagedata;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.DataBundle;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.AccountAttributes;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.CourseAttributes;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.cases.BaseTestCase;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.pagedata.InstructorCoursesPageData;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * SUT: {@link InstructorCoursesPageData}."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public class InstructorCoursesPageDataTest extends BaseTestCase {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private static DataBundle dataBundle \u003d getTypicalDataBundle();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testAll() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"test no course\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        AccountAttributes instructorAccountWithoutCourses \u003d dataBundle.accounts.get(\"instructorWithoutCourses\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorCoursesPageData pageData \u003d"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                new InstructorCoursesPageData(instructorAccountWithoutCourses, dummySessionToken);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCourseAttributes\u003e activeCourses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCourseAttributes\u003e archivedCourses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        List\u003cCourseAttributes\u003e recoveryCourses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, InstructorAttributes\u003e instructorForCourses \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        pageData.init(activeCourses, archivedCourses, recoveryCourses, instructorForCourses);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(pageData.getActiveCourses());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(pageData.getActiveCourses().getRows());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, pageData.getActiveCourses().getRows().size());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(pageData.getArchivedCourses());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(pageData.getArchivedCourses().getRows());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, pageData.getArchivedCourses().getRows().size());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"\", pageData.getCourseIdToShow());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"\", pageData.getCourseNameToShow());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"test 1 active course\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        AccountAttributes instructorAccountWithOneActiveCourse \u003d dataBundle.accounts.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        pageData \u003d new InstructorCoursesPageData(instructorAccountWithOneActiveCourse, dummySessionToken);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        activeCourses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        activeCourses.add(dataBundle.courses.get(\"typicalCourse1\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        archivedCourses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorForCourses \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorForCourses.put(\"idOfTypicalCourse1\", dataBundle.instructors.get(\"instructor1OfCourse1\"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        pageData.init(activeCourses, archivedCourses, recoveryCourses, instructorForCourses);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(pageData.getActiveCourses());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(pageData.getActiveCourses().getRows());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, pageData.getActiveCourses().getRows().size());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(pageData.getArchivedCourses());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(pageData.getArchivedCourses().getRows());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, pageData.getArchivedCourses().getRows().size());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"\", pageData.getCourseIdToShow());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"\", pageData.getCourseNameToShow());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"test 2 active courses\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        AccountAttributes instructorAccountWithTwoActiveCourses \u003d dataBundle.accounts.get(\"instructor3\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        pageData \u003d new InstructorCoursesPageData(instructorAccountWithTwoActiveCourses, dummySessionToken);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        activeCourses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        activeCourses.add(dataBundle.courses.get(\"typicalCourse1\"));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        activeCourses.add(dataBundle.courses.get(\"typicalCourse2\"));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        archivedCourses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorForCourses \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorForCourses.put(\"idOfTypicalCourse1\", dataBundle.instructors.get(\"instructor3OfCourse1\"));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorForCourses.put(\"idOfTypicalCourse2\", dataBundle.instructors.get(\"instructor3OfCourse2\"));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        pageData.init(activeCourses, archivedCourses, recoveryCourses, instructorForCourses, \"Id to show\", \"Name to show\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(pageData.getActiveCourses());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(pageData.getActiveCourses().getRows());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(2, pageData.getActiveCourses().getRows().size());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(pageData.getArchivedCourses());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(pageData.getArchivedCourses().getRows());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, pageData.getArchivedCourses().getRows().size());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"Id to show\", pageData.getCourseIdToShow());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"Name to show\", pageData.getCourseNameToShow());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"test 1 archived course\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        AccountAttributes instructorAccountWithOneArchivedCourse \u003d dataBundle.accounts.get(\"instructorOfArchivedCourse\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        pageData \u003d new InstructorCoursesPageData(instructorAccountWithOneArchivedCourse, dummySessionToken);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        activeCourses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        archivedCourses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        archivedCourses.add(dataBundle.courses.get(\"archivedCourse\"));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorForCourses \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorForCourses.put(\"idOfArchivedCourse\", dataBundle.instructors.get(\"instructorOfArchivedCourse\"));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        pageData.init(activeCourses, archivedCourses, recoveryCourses, instructorForCourses);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(pageData.getActiveCourses());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(pageData.getActiveCourses().getRows());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, pageData.getActiveCourses().getRows().size());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(pageData.getArchivedCourses());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(pageData.getArchivedCourses().getRows());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, pageData.getArchivedCourses().getRows().size());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"\", pageData.getCourseIdToShow());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"\", pageData.getCourseNameToShow());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalessr": 5,
      "-": 112
    }
  },
  {
    "path": "src/test/java/teammates/test/cases/pagedata/StudentFeedbackResultsPageDataTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.test.cases.pagedata;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.LinkedHashMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.BeforeClass;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.DataBundle;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.AccountAttributes;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentAttributes;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityDoesNotExistException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.StringHelper;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.api.Logic;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.cases.BaseComponentTestCase;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.pagedata.StudentFeedbackResultsPageData;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.template.StudentFeedbackResultsQuestionWithResponses;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " * SUT: {@link StudentFeedbackResultsPageData}."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "public class StudentFeedbackResultsPageDataTest extends BaseComponentTestCase {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private static DataBundle dataBundle \u003d getTypicalDataBundle();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    @BeforeClass"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public void classSetup() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        removeAndRestoreTypicalDataBundle();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testAll() throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"typical success case\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        AccountAttributes account \u003d dataBundle.accounts.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student \u003d dataBundle.students.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(student);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        String dummyKey \u003d \"key123\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        student.key \u003d dummyKey;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        Logic logic \u003d new Logic();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentFeedbackResultsPageData pageData \u003d new StudentFeedbackResultsPageData(account, student, dummySessionToken);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cFeedbackQuestionAttributes, List\u003cFeedbackResponseAttributes\u003e\u003e questionsWithResponses \u003d new LinkedHashMap\u003c\u003e();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackQuestionAttributes question1 \u003d dataBundle.feedbackQuestions.get(\"qn1InSession1InCourse1\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(question1);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackQuestionAttributes question2 \u003d dataBundle.feedbackQuestions.get(\"qn2InSession1InCourse1\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(question2);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responsesForQ1 \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responsesForQ2 \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Question 1 with responses */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        responsesForQ1.add(dataBundle.feedbackResponses.get(\"response1ForQ1S1C1\"));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        questionsWithResponses.put(question1, responsesForQ1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Question 2 with responses */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        responsesForQ2.add(dataBundle.feedbackResponses.get(\"response1ForQ2S1C1\"));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        responsesForQ2.add(dataBundle.feedbackResponses.get(\"response2ForQ2S1C1\"));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        questionsWithResponses.put(question2, responsesForQ2);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        // need to obtain questionId and responseId as methods in FeedbackSessionResultsBundle require them"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        questionsWithResponses \u003d getActualQuestionsAndResponsesWithId("
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                                        logic, questionsWithResponses);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        pageData.setBundle(logic.getFeedbackSessionResultsForStudent("
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                question1.feedbackSessionName, question1.courseId, student.email));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        pageData.init(questionsWithResponses);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentFeedbackResultsQuestionWithResponses questionBundle1 \u003d"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                pageData.getFeedbackResultsQuestionsWithResponses().get(0);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentFeedbackResultsQuestionWithResponses questionBundle2 \u003d"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                pageData.getFeedbackResultsQuestionsWithResponses().get(1);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(pageData.getFeedbackResultsQuestionsWithResponses());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(2, pageData.getFeedbackResultsQuestionsWithResponses().size());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"You are viewing feedback results as \u003cspan class\u003d\u0027text-danger text-bold text-large\u0027\u003e\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                      + \"student1 In Course1\u003c/td\u003e\u003c/div\u003e\u0027\\\"\u003c/span\u003e. You may submit feedback for sessions that are \""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                      + \"currently open and view results without logging in. \""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                      + \"To access other features you need \u003ca href\u003d\u0027/page/studentCourseJoinAuthentication?\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                      + \"key\u003d\" + StringHelper.encrypt(dummyKey)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                      + \"\u0026studentemail\u003dstudent1InCourse1%40gmail.tmt\u0026courseid\u003didOfTypicalCourse1\u0027 class\u003d\u0027link\u0027\u003e\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                      + \"to login using a Google account\u003c/a\u003e (recommended).\","
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                      pageData.getRegisterMessage());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(questionBundle1.getQuestionDetails());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(questionBundle2.getQuestionDetails());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"1\", questionBundle1.getQuestionDetails().getQuestionIndex());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"2\", questionBundle2.getQuestionDetails().getQuestionIndex());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"\", questionBundle1.getQuestionDetails().getAdditionalInfo());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"\", questionBundle2.getQuestionDetails().getAdditionalInfo());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        ______TS(\"giver \u0026 receiver in self/others response tables\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        // test the existence of both tables for each question bundle"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        assertNotNull(questionBundle1.getSelfResponseTables());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        assertNotNull(questionBundle1.getOthersResponseTables());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        assertNotNull(questionBundle2.getSelfResponseTables());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        assertNotNull(questionBundle2.getOthersResponseTables());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        // test that self response table for question one contains correct names \u0026 responses"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        assertFalse(questionBundle1.getIsSelfResponseTablesEmpty());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        assertTrue(questionBundle1.getSelfResponseTables().get(0).isGiverNameYou());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        assertEquals(\"You\", questionBundle1.getSelfResponseTables().get(0).getRecipientName());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        assertNotNull(questionBundle1.getSelfResponseTables().get(0).getResponses());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        assertEquals(\"You\", questionBundle1.getSelfResponseTables().get(0).getResponses()"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                                        .get(0).getGiverName());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        assertEquals(\"Student 1 self feedback.\", questionBundle1.getSelfResponseTables().get(0).getResponses()"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                                        .get(0).getAnswer());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        // test that others response table for question one does not contain any responses"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        assertEquals(0, questionBundle1.getOthersResponseTables().size());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        // test that self response table for question two contains exactly one response"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        assertFalse(questionBundle2.getIsSelfResponseTablesEmpty());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        assertEquals(1, questionBundle2.getSelfResponseTables().size());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        // test that others response table for question two contains correct names \u0026 responses"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        assertFalse(questionBundle2.getOthersResponseTables().get(0).isGiverNameYou());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        assertEquals(\"You\", questionBundle2.getOthersResponseTables().get(0).getRecipientName());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        assertNotNull(questionBundle2.getOthersResponseTables().get(0).getResponses());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        assertEquals(\"student2 In Course1\", questionBundle2.getOthersResponseTables().get(0).getResponses()"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "                .get(0).getGiverName());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        assertEquals(\"Response from student 2 to student 1.\", questionBundle2.getOthersResponseTables().get(0)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dalessr"
        },
        "content": "                .getResponses().get(0).getAnswer());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"student in unregistered course\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        student \u003d dataBundle.students.get(\"student1InUnregisteredCourse\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        pageData \u003d new StudentFeedbackResultsPageData(account, student, dummySessionToken);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cFeedbackQuestionAttributes, List\u003cFeedbackResponseAttributes\u003e\u003e questionsWithResponsesUnregistered \u003d"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "                new LinkedHashMap\u003c\u003e();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        pageData.init(questionsWithResponsesUnregistered);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(pageData.getFeedbackResultsQuestionsWithResponses().isEmpty());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"regKeyForStuNotYetJoinCourse\", student.key);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"idOfUnregisteredCourse\", student.course);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"student1InUnregisteredCourse@gmail.tmt\", student.email);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"You are viewing feedback results as \""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "                      + \"\u003cspan class\u003d\u0027text-danger text-bold text-large\u0027\u003estudent1 In \""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "                      + \"unregisteredCourse\u003c/span\u003e. You may submit feedback for sessions that are currently open \""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                      + \"and view results without logging in. To access other features you need \""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "                      + \"\u003ca href\u003d\u0027/page/studentCourseJoinAuthentication?key\u003d\""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "                      + StringHelper.encrypt(\"regKeyForStuNotYetJoinCourse\")"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "                      + \"\u0026studentemail\u003dstudent1InUnregisteredCourse%40gmail.tmt\u0026courseid\u003didOfUnregisteredCourse\u0027 \""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "                      + \"class\u003d\u0027link\u0027\u003eto login using a Google account\u003c/a\u003e (recommended).\","
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "                      pageData.getRegisterMessage());"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    private Map\u003cFeedbackQuestionAttributes, List\u003cFeedbackResponseAttributes\u003e\u003e getActualQuestionsAndResponsesWithId("
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            Logic logic, Map\u003cFeedbackQuestionAttributes, List\u003cFeedbackResponseAttributes\u003e\u003e questionsWithResponses) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cFeedbackQuestionAttributes, List\u003cFeedbackResponseAttributes\u003e\u003e actualQuestionsWithResponses \u003d"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "                new LinkedHashMap\u003c\u003e();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        questionsWithResponses.forEach((dataBundleQuestion, dataBundleResponses) -\u003e {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes actualQuestion \u003d logic.getFeedbackQuestion("
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                    dataBundleQuestion.feedbackSessionName,"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                    dataBundleQuestion.courseId,"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                    dataBundleQuestion.questionNumber);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cFeedbackResponseAttributes\u003e actualResponses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            for (FeedbackResponseAttributes dataBundleResponse : dataBundleResponses) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackResponseAttributes actualResponse \u003d logic.getFeedbackResponse("
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                    actualQuestion.getId(),"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                    dataBundleResponse.giver,"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                    dataBundleResponse.recipient);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "                actualResponses.add(actualResponse);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "            actualQuestionsWithResponses.put(actualQuestion, actualResponses);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        return actualQuestionsWithResponses;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalessr": 27,
      "-": 155
    }
  },
  {
    "path": "src/test/java/teammates/test/pageobjects/InstructorCourseEditPage.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.test.pageobjects;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.testng.AssertJUnit.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.testng.AssertJUnit.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import org.openqa.selenium.By;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import org.openqa.selenium.WebElement;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import org.openqa.selenium.support.FindBy;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class InstructorCourseEditPage extends AppPage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int INSTRUCTOR_TYPE_COOWNER \u003d 0;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int INSTRUCTOR_TYPE_MANAGER \u003d 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int INSTRUCTOR_TYPE_OBSERVER \u003d 2;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int INSTRUCTOR_TYPE_TUTOR \u003d 3;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int INSTRUCTOR_TYPE_CUSTOM \u003d 4;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int COURSE_MODIFY_COURSE \u003d 0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int COURSE_MODIFY_INSTRUCTORS \u003d 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int COURSE_MODIFY_SESSIONS \u003d 2;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int COURSE_MODIFY_STUDENTS \u003d 3;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int COURSE_VIEW_STUDENTS \u003d 4;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int COURSE_GIVE_RESPONSES_IN_SESSION \u003d 5;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int COURSE_VIEW_RESPONSES_IN_SESSION \u003d 6;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int COURSE_MODIFY_RESPONSES_IN_SESSION \u003d 7;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int SECTION_VIEW_STUDENTS \u003d 0;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int SECTION_GIVE_RESPONSES_IN_SESSION \u003d 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int SECTION_VIEW_RESPONSES_IN_SESSION \u003d 2;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int SECTION_MODIFY_RESPONSES_IN_SESSION \u003d 3;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int SESSION_GIVE_RESPONSES \u003d 0;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int SESSION_VIEW_RESPONSES \u003d 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int SESSION_MODIFY_RESPONSES \u003d 2;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @FindBy(id \u003d \"courseid\")"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    private WebElement courseIdTextBox;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    @FindBy(id \u003d \"coursename\")"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    private WebElement courseNameTextBox;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    @FindBy(id \u003d \"btnSaveCourse\")"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    private WebElement saveCourseButton;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    @FindBy(id \u003d \"courseEditLink\")"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    private WebElement editCourseLink;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    @FindBy(id \u003d \"courseDeleteLink\")"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    private WebElement deleteCourseLink;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    @FindBy(id \u003d \"btnShowNewInstructorForm\")"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    private WebElement showNewInstructorFormButton;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    @FindBy(id \u003d \"instructorname\")"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    private WebElement newInstructorNameTextBox;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    @FindBy(id \u003d \"instructoremail\")"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    private WebElement newInstructorEmailTextBox;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    @FindBy(xpath \u003d \"//form[@name\u003d\u0027formAddInstructor\u0027]\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"//input[@name\u003d\u0027instructordisplayname\u0027]\")"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    private WebElement newInstructorDisplayNameTextBox;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    @FindBy(id \u003d \"btnAddInstructor\")"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    private WebElement addInstructorButton;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorCourseEditPage(Browser browser) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        super(browser);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    protected boolean containsExpectedPageContents() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        return getPageSource().contains(\"\u003ch1\u003eEdit Course Details\u003c/h1\u003e\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getCourseId() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        return courseIdTextBox.getAttribute(\"value\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorCourseEditPage verifyIsCorrectPage(String courseId) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(courseId, getCourseId());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addNewInstructor(String name, String email) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        clickShowNewInstructorFormButton();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        fillNewInstructorName(name);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        fillNewInstructorEmail(email);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        click(addInstructorButton);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        waitForPageToLoad();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "     * Clicks edit button, changes and saves instructor details for given instructor index"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "     * Instructor email will not be edited when editing a yet-to-join instructor."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "     * Instructor display name will not be edited if instructor is not displayed to other students."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    public void editInstructor(int instrNum, String name, String email,"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            Boolean isDisplayedToStudents, String displayName, String role) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        clickEditInstructorLink(instrNum);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        editInstructorName(instrNum, name);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        if (getEmailField(instrNum).getAttribute(\"readonly\") \u003d\u003d null) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            editInstructorEmail(instrNum, email);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        editInstructorDisplayedToStudents(instrNum, isDisplayedToStudents);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isDisplayedToStudents) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            editInstructorDisplayName(instrNum, displayName);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        selectRoleForInstructor(instrNum, role);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        saveEditInstructor(instrNum);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        waitForPageToLoad();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    public void clickSaveInstructorButton(int instrNum) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        WebElement button \u003d browser.driver.findElement(By.id(\"btnSaveInstructor\" + instrNum));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        click(button);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        waitForPageToLoad();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    public String editInstructorName(int instrNum, String value) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        WebElement editPanelNameTextBox \u003d getNameField(instrNum);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        fillTextBox(editPanelNameTextBox, value);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        return getTextBoxValue(editPanelNameTextBox);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    public String editInstructorEmail(int instrNum, String value) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        WebElement editPanelEmailTextBox \u003d getEmailField(instrNum);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        fillTextBox(editPanelEmailTextBox, value);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        return getTextBoxValue(editPanelEmailTextBox);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean editInstructorDisplayedToStudents(int instrNum, Boolean isDisplayedToStudents) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        WebElement editPanelDisplayedToStudentsCheckbox \u003d getDisplayedToStudentCheckBox(instrNum);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isDisplayedToStudents) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            markCheckBoxAsChecked(editPanelDisplayedToStudentsCheckbox);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            markCheckBoxAsUnchecked(editPanelDisplayedToStudentsCheckbox);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        return editPanelDisplayedToStudentsCheckbox.isSelected();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    public String editInstructorDisplayName(int instrNum, String value) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        WebElement editPanelDisplayNameTextBox \u003d getDisplayNameField(instrNum);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        fillTextBox(editPanelDisplayNameTextBox, value);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        return getTextBoxValue(editPanelDisplayNameTextBox);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    public String fillNewInstructorName(String value) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        fillTextBox(newInstructorNameTextBox, value);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        return getTextBoxValue(newInstructorNameTextBox);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getNewInstructorName() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        return getTextBoxValue(newInstructorNameTextBox);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    public String fillNewInstructorEmail(String value) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        fillTextBox(newInstructorEmailTextBox, value);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        return getTextBoxValue(newInstructorEmailTextBox);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getNewInstructorEmail() {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        return getTextBoxValue(newInstructorEmailTextBox);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    public String fillNewInstructorDisplayName(String value) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        fillTextBox(newInstructorDisplayNameTextBox, value);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        return getTextBoxValue(newInstructorDisplayNameTextBox);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    public void clickEditInstructorLink(int instrNum) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        click(getEditInstructorLink(instrNum));"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        WebElement saveButton \u003d getSaveInstructorButton(instrNum);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        waitForElementVisibility(saveButton);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    public void clickEditInstructorLinkUnsuccessfully(int instrNum) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        click(getEditInstructorLink(instrNum));"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isInstructorEditable(int instrNum) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        WebElement editInstructorNameTextBox \u003d getNameField(instrNum);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        WebElement editInstructorEmailTextBox \u003d getEmailField(instrNum);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        return editInstructorNameTextBox.isEnabled() \u0026\u0026 editInstructorEmailTextBox.isEnabled();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "    public void clickCancelEditInstructorLink(int instrNum) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        click(getCancelEditInstructorLink(instrNum));"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "    public void clickCancelAddInstructorLink() {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        click(getCancelAddInstructorLink());"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "    public void verifyInstructorEditFormDisabled(int instrNum) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        waitForElementToDisappear(By.id(\"btnSaveInstructor\" + instrNum));"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        WebElement editInstructorNameTextBox \u003d getNameField(instrNum);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        WebElement editInstructorEmailTextBox \u003d getEmailField(instrNum);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isNotEditable \u003d !editInstructorNameTextBox.isEnabled()"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "                                \u0026\u0026 !editInstructorEmailTextBox.isEnabled();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(isNotEditable);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean verifyAddInstructorFormDisplayed() {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        WebElement newInstructorForm \u003d browser.driver.findElement(By.id(\"panelAddInstructor\"));"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        return newInstructorForm.isDisplayed();"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean verifyAddInstructorFormDefaultValues(int newInstructorIndex) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        String checkbox \u003d browser.driver.findElement(By.name("
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_IS_DISPLAYED_TO_STUDENT)).getAttribute(\"value\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        String instructorName \u003d browser.driver.findElement(By.name("
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_DISPLAY_NAME)).getAttribute(\"value\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        String instructorRole \u003d browser.driver.findElement(By.id("
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_ROLE_NAME + \"forinstructor\""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "                        + newInstructorIndex)).getAttribute(\"value\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"true\".equals(checkbox) \u0026\u0026 \"Instructor\".equals(instructorName)"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 instructorRole.equals(Const.InstructorPermissionRoleNames"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "                .INSTRUCTOR_PERMISSION_ROLE_COOWNER); // default values taken from courseEditAddInstructorPanel.tag"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "     * Verifies that the instructor details fields for the given {@code instrNum} contain the updated values."
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "     * If {@code newIsDisplayedToStudents} is true, the display name field is checked against {@code newDisplayName}."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "     * Otherwise, it is verified that the display name field\u0027s placeholder is shown as expected."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "    public void verifyInstructorDetails(int instrNum, String newName, String newEmail,"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean newIsDisplayedToStudents, String newDisplayName, String newRole) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(newName, getInstructorName(instrNum));"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(newEmail, getInstructorEmail(instrNum));"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(newIsDisplayedToStudents, getInstructorDisplayedToStudents(instrNum));"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        if (newIsDisplayedToStudents) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(newDisplayName, getInstructorDisplayName(instrNum));"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(\"(This instructor will NOT be displayed to students)\","
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "                    getDisplayNameField(instrNum).getAttribute(\"placeholder\"));"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(newRole, getInstructorAccessLevel(instrNum));"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "    public void saveEditInstructor(int instrNum) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "        click(getSaveInstructorButton(instrNum));"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "    public void clickDisplayedToStudentCheckBox(int instrNum) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "        click(getDisplayedToStudentCheckBox(instrNum));"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "    public void selectRoleForInstructor(int instrNum, String role) {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        WebElement roleRadioButton \u003d browser.driver.findElement(By.cssSelector("
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "                \"input[id\u003d\u0027instructorroleforinstructor\" + instrNum + \"\u0027][value\u003d\u0027\" + role + \"\u0027]\"));"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "        click(roleRadioButton);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "    public void selectRoleForNewInstructor(int newInstructorIndex, String role) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "        WebElement roleRadioButton \u003d browser.driver.findElement(By.cssSelector("
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "                \"input[id\u003d\u0027instructorroleforinstructor\" + newInstructorIndex + \"\u0027][value\u003d\u0027\" + role + \"\u0027]\"));"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "        click(roleRadioButton);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isRoleSelectedForInstructor(int instrNum, String role) {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "        return browser.driver.findElement(By.cssSelector("
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "                \"input[id\u003d\u0027instructorroleforinstructor\" + instrNum + \"\u0027][value\u003d\u0027\" + role + \"\u0027]\")).isSelected();"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "    public void clickViewDetailsLinkForInstructor(int instrNum, int viewLinkNum) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "         *  There are groups of 3 elements:"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "         *  \u003cinput\u003e: radio button"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "         *  \u003ca\u003e: the details link"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "         *  \u003cbr\u003e: break line"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "         *  Therefore the formula for the position of the details link of the group i-th (count from 0) is i * 3 + 2"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "        int cssLinkNum \u003d viewLinkNum * 3 + 2;"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "        WebElement viewLink \u003d"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "                browser.driver.findElement("
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "                        By.cssSelector(\"#accessControlEditDivForInstr\" + instrNum"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "                                       + \" \u003e div.form-group \u003e div.col-sm-9 \u003e a:nth-child(\" + cssLinkNum + \")\"));"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "        click(viewLink);"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "        waitForPageToLoad();"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "    public void closeModal() {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "        WebElement closeButton \u003d browser.driver.findElement(By.className(\"close\"));"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "        waitForElementToBeClickable(closeButton);"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "        click(closeButton);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "            Thread.sleep(1000);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new RuntimeException(e);"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isPrivilegeCheckboxInModalChecked(String privilege) {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "        By selector \u003d By.cssSelector(\"#tunePermissionsDivForInstructorAll input[type\u003d\u0027checkbox\u0027][name\u003d\u0027\""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "                                     + privilege + \"\u0027]\");"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "        WebElement checkbox \u003d browser.driver.findElement(selector);"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "        return checkbox.isSelected();"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isPrivilegeCheckboxInPermissionDivChecked(int instructorIndex, String privilege) {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "        By selector \u003d By.cssSelector(\"#tunePermissionsDivForInstructor\" + instructorIndex"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "                                     + \" input[type\u003d\u0027checkbox\u0027][name\u003d\u0027\" + privilege + \"\u0027]\");"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "        WebElement checkbox \u003d browser.driver.findElement(selector);"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "        return checkbox.isSelected();"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "    public void clickCourseLevelPrivilegesLink(int instrNum, int linkNum) {"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "        WebElement coursePanel \u003d getCourseLevelPanel(instrNum);"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "        click(coursePanel.findElements(By.cssSelector(\"input[type\u003d\u0027checkbox\u0027]\")).get(linkNum));"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "    public void clickAddSectionLevelPrivilegesLink(int instrNum) {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "        click(getAddSectionLevelPrivilegesLink(instrNum));"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "    public void clickSectionSelectionCheckBox(int instrNum, int sectionLevelIndex, int sectionNum) {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "        click(getSectionSelectionCheckBox(instrNum, sectionLevelIndex, sectionNum));"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "    public void clickSectionLevelPrivilegeLink(int instrNum, int sectionLevelIndex, int linkNum) {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "        click(getSectionLevelPanelCheckBox(instrNum, sectionLevelIndex, linkNum));"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isSectionLevelPrivilegeLinkClicked(int instrNum, int sectionLevelIndex, int linkNum) {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "        return getSectionLevelPanelCheckBox(instrNum, sectionLevelIndex, linkNum).isSelected();"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "    public void clickSessionLevelPrivilegeLink(int instrNum, int sectionLevelIndex,"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "                                               int sessionIndex, int linkNum) {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "        click(getSessionLevelTableCheckbox(instrNum, sectionLevelIndex, sessionIndex, linkNum));"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isSessionLevelPrivilegeLinkClicked(int instrNum, int sectionLevelIndex,"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "                                                      int sessionIndex, int linkNum) {"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "        return getSessionLevelTableCheckbox(instrNum, sectionLevelIndex, sessionIndex, linkNum).isSelected();"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "    public void clickSessionLevelInSectionLevel(int instrNum, int sectionLevelIndex) {"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "        String linkId \u003d \"toggleSessionLevelInSection\" + sectionLevelIndex + \"ForInstructor\" + instrNum;"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "        click(browser.driver.findElement(By.id(linkId)));"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "    public void clickHideSectionLevelPrivileges(int instrNum, int sectionLevelIndex) {"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "        click(getSectionLevelPanel(instrNum, sectionLevelIndex).findElement(By.cssSelector(\".glyphicon-trash\")));"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isTuneSessionPermissionsDivVisible(int instrNum, int sectionLevelIndex) {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "        String sessionPermissionsDivId \u003d \"tuneSessionPermissionsDiv\" + sectionLevelIndex"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "                                         + \"ForInstructor\" + instrNum;"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "        return isElementVisible(By.id(sessionPermissionsDivId));"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isTunePermissionsDivVisible(int instrNum) {"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "        String sessionPermissionsDivId \u003d \"tunePermissionsDivForInstructor\" + instrNum;"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "        return isElementVisible(By.id(sessionPermissionsDivId));"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean clickShowNewInstructorFormButton() {"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "        click(showNewInstructorFormButton);"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "        return newInstructorNameTextBox.isEnabled()"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 newInstructorEmailTextBox.isEnabled()"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 addInstructorButton.isDisplayed();"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isInstructorListSortedByName() {"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isSorted \u003d true;"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e instructorNames \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cWebElement\u003e elements \u003d browser.driver.findElements(By.xpath(\"//*[starts-with(@id, \u0027instructorname\u0027)]\"));"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 1; i \u003c elements.size(); i++) {"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "            instructorNames.add(browser.driver.findElement(By.id(\"instructorname\" + i)).getAttribute(\"value\"));"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 1; i \u003c instructorNames.size(); i++) {"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "            if (instructorNames.get(i - 1).compareTo(instructorNames.get(i)) \u003e 0) {"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "                isSorted \u003d false;"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "        return isSorted;"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean clickOnNewInstructorAccessLevelViewDetails(String role) {"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "        WebElement instructorForm \u003d browser.driver.findElement(By.id(\"formAddInstructor\"));"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "        WebElement viewDetailsLink \u003d instructorForm.findElement(By.xpath("
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "                                            \"//a[contains(@class, \u0027view-role-details\u0027)][@data-role\u003d\u0027\" + role + \"\u0027]\"));"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "        click(viewDetailsLink);"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "        WebElement viewDetailsModal \u003d browser.driver.findElement(By.cssSelector("
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "                                            \"div#tunePermissionsDivForInstructorAll\"));"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "        waitForElementVisibility(viewDetailsModal);"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "        if (\"display: block;\".equals(viewDetailsModal.getAttribute(\"style\"))) {"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "            closeModal();"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "    public void clickAddInstructorButton() {"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "        click(addInstructorButton);"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "        waitForPageToLoad();"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "    public void clickInviteInstructorLink(int instrNum) {"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "        click(getInviteInstructorLink(instrNum));"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "        waitForConfirmationModalAndClickOk();"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "        waitForPageToLoad();"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "     * Clicks the button to edit the course."
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "    public void clickEditCourseLink() {"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "        click(editCourseLink);"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "        waitForElementVisibility(saveCourseButton);"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "     * Clicks the save changes button to save the changes made to the course."
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "    public void clickSaveCourseButton() {"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "        click(saveCourseButton);"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "        waitForPageToLoad();"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "    public void editCourseName(String value) {"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "        fillTextBox(courseNameTextBox, value);"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public InstructorCoursesPage clickDeleteCourseLink() {"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        click(deleteCourseLink);"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "        waitForPageToLoad();"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "        return changePageType(InstructorCoursesPage.class);"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "     * Click the delete instructor button at position {@code instrNum} and click \"Yes\" in the follow up dialog."
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param instrNum is the position of the instructor (e.g. 1, 2, 3, ...)"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "    public void clickDeleteInstructorLinkAndConfirm(int instrNum) {"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "        WebElement deleteInstructorLink \u003d getDeleteInstructorLink(instrNum);"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "        clickAndConfirm(deleteInstructorLink);"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "        waitForPageToLoad();"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "     * Click the delete instructor button at position {@code instrNum} and click \"No\" in the follow up dialog."
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param instrNum is the position of the instructor (e.g. 1, 2, 3, ...)"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "    public void clickDeleteInstructorLinkAndCancel(int instrNum) {"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "        WebElement deleteInstructorLink \u003d getDeleteInstructorLink(instrNum);"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "        clickAndCancel(deleteInstructorLink);"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks if the course edit form is enabled."
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return true if the course edit form is enabled"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isCourseEditFormEnabled() {"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "        return !courseIdTextBox.isEnabled() \u0026\u0026 courseNameTextBox.isEnabled() \u0026\u0026 saveCourseButton.isDisplayed();"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "    public void changeCourseIdInForm(int instrNum, String newCourseId) {"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "        String selector \u003d \"$(\u0027#edit-\" + instrNum + \" input[name\u003d\\\"\" + Const.ParamsNames.COURSE_ID + \"\\\"]\u0027)\";"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "        String action \u003d \".val(\u0027\" + newCourseId + \"\u0027)\";"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "        executeScript(selector + action);"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "    // methods that return WebElements of the page go here"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "    public WebElement getEditInstructorLink(int instrNum) {"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "        return browser.driver.findElement(By.id(\"instrEditLink\" + instrNum));"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "    public WebElement getCancelEditInstructorLink(int instrNum) {"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "        return browser.driver.findElement(By.id(\"instrCancelLink\" + instrNum));"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "    public WebElement getCancelAddInstructorLink() {"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "        return browser.driver.findElement(By.id(\"cancelAddInstructorLink\"));"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "    private WebElement getInviteInstructorLink(int instrNum) {"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "        return browser.driver.findElement(By.id(\"instrRemindLink\" + instrNum));"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "    public WebElement getDeleteInstructorLink(int instrNum) {"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "        return browser.driver.findElement(By.id(\"instrDeleteLink\" + instrNum));"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "    public WebElement getSaveInstructorButton(int instrNum) {"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "        return browser.driver.findElement(By.id(\"btnSaveInstructor\" + instrNum));"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "    public WebElement getNameField(int instrNum) {"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "        return browser.driver.findElement(By.id(\"instructorname\" + instrNum));"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "    public WebElement getEmailField(int instrNum) {"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "        return browser.driver.findElement(By.id(\"instructoremail\" + instrNum));"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "    public WebElement getDisplayedToStudentCheckBox(int instrNum) {"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "        return browser.driver.findElement(By.cssSelector(\"#instructorTable\" + instrNum + \" input[name\u003d\u0027\""
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "                                                         + Const.ParamsNames.INSTRUCTOR_IS_DISPLAYED_TO_STUDENT"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "                                                         + \"\u0027]\"));"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "    public WebElement getDisplayNameField(int instrNum) {"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "        String displayNameFieldSelector \u003d \"#instructorTable\" + instrNum + \" input[name\u003d\u0027\""
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "                + Const.ParamsNames.INSTRUCTOR_DISPLAY_NAME"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\u0027]\";"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "        return browser.driver.findElement(By.cssSelector(displayNameFieldSelector));"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorName(int instrNum) {"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "        return browser.driver.findElement(By.id(\"instructorname\" + instrNum)).getAttribute(\"value\");"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorEmail(int instrNum) {"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "        return browser.driver.findElement(By.id(\"instructoremail\" + instrNum)).getAttribute(\"value\");"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean getInstructorDisplayedToStudents(int instrNum) {"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "        String isDisplayedToStudentsCheckboxSelector \u003d \"#instructorTable\" + instrNum + \" input[name\u003d\u0027\""
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "                + Const.ParamsNames.INSTRUCTOR_IS_DISPLAYED_TO_STUDENT"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\u0027]\";"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "        return browser.driver.findElement(By.cssSelector(isDisplayedToStudentsCheckboxSelector)).isSelected();"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorDisplayName(int instrNum) {"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "        String displayNameFieldSelector \u003d \"#instructorTable\" + instrNum + \" input[name\u003d\u0027\""
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "                + Const.ParamsNames.INSTRUCTOR_DISPLAY_NAME"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\u0027]\";"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "        return browser.driver.findElement(By.cssSelector(displayNameFieldSelector)).getAttribute(\"value\");"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstructorAccessLevel(int instrNum) {"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "        return browser.driver.findElement(By.cssSelector(\"#accessControlInfoForInstr\" + instrNum + \" span\")).getText();"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "    public WebElement getCourseLevelPanel(int instrNum) {"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "        String permissionDivId \u003d \"tunePermissionsDivForInstructor\" + instrNum;"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "        return browser.driver.findElement(By.id(permissionDivId))"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "                             .findElement(By.cssSelector(\"div.form-group\u003ediv\u003ediv.panel\"));"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "    public WebElement getAddSectionLevelPrivilegesLink(int instrNum) {"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "        return browser.driver.findElement(By.id(\"addSectionLevelForInstructor\" + instrNum));"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "    public WebElement getSectionLevelPanel(int instrNum, int sectionLevelIndex) {"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "        String permissionDivId \u003d \"tuneSectionPermissionsDiv\" + sectionLevelIndex + \"ForInstructor\" + instrNum;"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "        return browser.driver.findElement(By.id(permissionDivId));"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "    private WebElement getSectionLevelPanelBody(int instrNum, int sectionLevelIndex) {"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "        WebElement sectionPanel \u003d getSectionLevelPanel(instrNum, sectionLevelIndex);"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "        return sectionPanel.findElement(By.cssSelector(\"div[class\u003d\u0027panel-body\u0027]\"));"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "    private WebElement getSectionSelectionCheckBox(int instrNum, int sectionLevelIndex, int sectionNum) {"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "        WebElement sectionPanel \u003d getSectionLevelPanel(instrNum, sectionLevelIndex);"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "        String cssSelector \u003d \"input[name\u003d\u0027\" + Const.ParamsNames.INSTRUCTOR_SECTION_GROUP"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "                             + sectionLevelIndex + Const.ParamsNames.INSTRUCTOR_SECTION + sectionNum + \"\u0027]\";"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "        return sectionPanel.findElement(By.cssSelector(cssSelector));"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "    private WebElement getSectionLevelPanelCheckBox(int instrNum, int sectionLevelIndex, int checkBoxIndex) {"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "        WebElement sectionPanelBody \u003d getSectionLevelPanelBody(instrNum, sectionLevelIndex);"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "        return sectionPanelBody.findElements(By.cssSelector(\"input[type\u003d\u0027checkbox\u0027]\")).get(checkBoxIndex);"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "    private WebElement getSessionLevelTableBody(int instrNum, int sectionLevelIndex) {"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "        WebElement sectionPanelBody \u003d getSectionLevelPanelBody(instrNum, sectionLevelIndex);"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "        return sectionPanelBody.findElement(By.cssSelector(\"table\"));"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "    private WebElement getSessionLevelTableRow(int instrNum, int sectionLevelIndex, int sessionIndex) {"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "        WebElement sessionLevelTableBody \u003d getSessionLevelTableBody(instrNum, sectionLevelIndex);"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "        return sessionLevelTableBody.findElements(By.cssSelector(\"tbody tr\")).get(sessionIndex);"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "    private WebElement getSessionLevelTableCheckbox(int instrNum, int sectionLevelIndex,"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 int sessionIndex, int checkBoxIndex) {"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "        WebElement sessionLevelTableRow \u003d getSessionLevelTableRow(instrNum, sectionLevelIndex, sessionIndex);"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "        return sessionLevelTableRow.findElements(By.cssSelector(\"input[type\u003d\u0027checkbox\u0027]\")).get(checkBoxIndex);"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalessr": 2,
      "-": 604
    }
  },
  {
    "path": "src/test/java/teammates/test/pageobjects/InstructorCoursesPage.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.test.pageobjects;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.testng.AssertJUnit.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.openqa.selenium.By;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.openqa.selenium.WebElement;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import org.openqa.selenium.support.FindBy;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/** Represents the \"Courses\" page for Instructors. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class InstructorCoursesPage extends AppPage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    /* Explanation: This class follows the \u0027Page Objects Pattern\u0027 and as"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "     * explained in https://code.google.com/p/selenium/wiki/PageObjects"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "     * This class represents an abstraction for the \u0027Courses\u0027 page as"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     * shown in the Browser. The test class interact with this object when it"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * wants to perform an action on the web page (e.g., click a button)."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    /* Explanation: These are the elements in the page that we want to interact"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     * with. The @FindBy annotation tells the PageFactory class"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * (see https://code.google.com/p/selenium/wiki/PageFactory) how to find"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     * the element."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @FindBy (id \u003d \"button_sortcoursename\")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private WebElement sortByCourseNameIcon;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    @FindBy (id \u003d \"button_sortcourseid\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private WebElement sortByCourseIdIcon;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    @FindBy(id \u003d \"courseid\")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private WebElement courseIdTextBox;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    @FindBy(id \u003d \"coursename\")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    private WebElement courseNameTextBox;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    @FindBy(id \u003d \"btnAddCourse\")"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    private WebElement submitButton;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorCoursesPage(Browser browser) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        super(browser);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    /** Used to check if the loaded page is indeed the \u0027Courses\u0027 page. */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    protected boolean containsExpectedPageContents() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        return getPageSource().contains(\"\u003ch1\u003eAdd New Course\u003c/h1\u003e\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     * If instructorsList is null, the current value in the page will be used instead."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorCoursesPage addCourse(String courseId, String courseName) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        fillTextBox(courseIdTextBox, courseId);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        fillTextBox(courseNameTextBox, courseName);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        click(submitButton);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        waitForPageToLoad();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    public InstructorCoursesPage deleteCourse(String courseId) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        click(getDeleteLink(courseId));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        waitForPageToLoad();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dalessr"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dalessr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dalessr"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorCoursesPage archiveCourse(String courseId) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        click(getArchiveLink(courseId));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        waitForPageToLoad();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorCoursesPage unarchiveCourse(String courseId) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        click(getUnarchiveLink(courseId));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        waitForPageToLoad();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    public String fillCourseIdTextBox(String value) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        fillTextBox(courseIdTextBox, value);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        return getTextBoxValue(courseIdTextBox);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    public String fillCourseNameTextBox(String value) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        fillTextBox(courseNameTextBox, value);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        return getTextBoxValue(courseNameTextBox);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    public void submitAndConfirm() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        clickAndConfirm(submitButton);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        waitForPageToLoad();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    public void submitAndCancel() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        clickAndCancel(submitButton);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        waitForPageToLoad();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    public WebElement getDeleteLink(String courseId) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        int courseRowNumber \u003d getRowNumberOfCourse(courseId);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        return getDeleteLinkInRow(courseRowNumber);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    public WebElement getArchiveLink(String courseId) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        int courseRowNumber \u003d getRowNumberOfCourse(courseId);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        return getArchiveLinkInRow(courseRowNumber);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    public WebElement getUnarchiveLink(String courseId) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        int courseRowNumber \u003d getRowNumberOfCourse(courseId);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        return getUnarchiveLinkInRow(courseRowNumber);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorCoursesPage sortByCourseName() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        click(sortByCourseNameIcon);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorCoursesPage sortByCourseId() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        click(sortByCourseIdIcon);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorCourseEnrollPage loadEnrollLink(String courseId) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        int courseRowNumber \u003d getRowNumberOfCourse(courseId);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        return goToLinkInRow("
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                By.className(\"t_course_enroll\" + courseRowNumber),"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                InstructorCourseEnrollPage.class);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorCourseDetailsPage loadViewLink(String courseId) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        int courseRowNumber \u003d getRowNumberOfCourse(courseId);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        return goToLinkInRow("
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "                By.className(\"t_course_view\" + courseRowNumber),"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "                InstructorCourseDetailsPage.class);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorCourseEditPage loadEditLink(String courseId) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        int courseRowNumber \u003d getRowNumberOfCourse(courseId);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        return goToLinkInRow("
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "                By.className(\"t_course_edit\" + courseRowNumber),"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "                InstructorCourseEditPage.class);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    public void changeUserIdInAjaxLoadCoursesForm(String newUserId) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        By element \u003d By.id(\"ajaxForCourses\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        waitForElementPresence(element);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        executeScript(\"$(\u0027#ajaxForCourses [name\u003d\\\"user\\\"]\u0027).val(\u0027\" + newUserId + \"\u0027)\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    public void changeHrefInAjaxLoadCourseStatsLink(String newLink) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        By element \u003d By.id(\"ajaxForCourses\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        waitForElementPresence(element);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        executeScript(\"$(\u0027td[id^\u003d\\\"course-stats\\\"] \u003e a\u0027).attr(\u0027href\u0027, \u0027\" + newLink + \"\u0027)\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    public void triggerAjaxLoadCourses() {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        By element \u003d By.id(\"ajaxForCourses\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        waitForElementPresence(element);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        executeScript(\"$(\u0027#ajaxForCourses\u0027).trigger(\u0027submit\u0027)\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    public void triggerAjaxLoadCourseStats(int rowIndex) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        executeScript(\"$(\u0027.course-stats-link-\" + rowIndex + \"\u0027).first().trigger(\u0027click\u0027)\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    public void waitForAjaxLoadCoursesError() {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        By element \u003d By.id(\"retryAjax\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        waitForElementPresence(element);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        WebElement statusMessage \u003d"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "                browser.driver.findElement(By.id(\"statusMessagesToUser\")).findElement(By.className(\"statusMessage\"));"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"Courses could not be loaded. Click here to retry.\", statusMessage.getText());"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    public void waitForAjaxLoadCoursesSuccess() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        By element \u003d By.id(\"tableActiveCourses\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        waitForElementPresence(element);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "    private int getCourseCount() {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        By activeCoursesTable \u003d By.id(\"tableActiveCourses\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        waitForElementPresence(activeCoursesTable);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        return browser.driver.findElement(activeCoursesTable).findElements(By.tagName(\"tr\")).size();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "    private int getRowNumberOfCourse(String courseId) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 0; i \u003c getCourseCount(); i++) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "            if (getCourseIdCell(i).getText().equals(courseId)) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "                return i;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "    private WebElement getCourseIdCell(int rowId) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        return browser.driver.findElement(By.id(\"courseid\" + rowId));"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "    private WebElement getDeleteLinkInRow(int rowId) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        By deleteLink \u003d By.className(\"t_course_delete\" + rowId);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        return browser.driver.findElement(deleteLink);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    private WebElement getArchiveLinkInRow(int rowId) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        By archiveLink \u003d By.className(\"t_course_archive\" + rowId);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        return browser.driver.findElement(archiveLink);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "    private WebElement getUnarchiveLinkInRow(int rowId) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        By archiveLink \u003d By.id(\"t_course_unarchive\" + rowId);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        return browser.driver.findElement(archiveLink);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    private \u003cT extends AppPage\u003e T goToLinkInRow(By locator, Class\u003cT\u003e destinationPageType) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        click(browser.driver.findElement(locator));"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        waitForPageToLoad();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        return changePageType(destinationPageType);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalessr": 6,
      "-": 213
    }
  }
]
